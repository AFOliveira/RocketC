Nonterminals useless in grammar

    switch_case
    case_list
    case
    case_default
    size_of_stmt
    special_type


Terminals unused in grammar

    ERROR
    SWITCH
    CASE
    DEFAULT
    SIZEOF
    TERNARY
    CARDINAL
    ARROW
    DEFINE
    POINTER
    ADDRESS_OF
    OTHER
    STRINGliteral


Rules useless in grammar

  168 switch_case: SWITCH LPAREN ID RPAREN LEFT_BRACE case_list RIGHT_BRACE
  169            | SWITCH LPAREN ID RPAREN LEFT_BRACE case_list case_default RIGHT_BRACE
  170            | SWITCH LPAREN expr RPAREN LEFT_BRACE case_list RIGHT_BRACE
  171            | SWITCH LPAREN expr RPAREN LEFT_BRACE case_list case_default RIGHT_BRACE

  172 case_list: case_list case
  173          | case

  174 case: CASE NUM COLON stmts BREAK

  175 case_default: DEFAULT NUM COLON stmts BREAK

  176 size_of_stmt: SIZEOF LPAREN ID RPAREN
  177             | SIZEOF LPAREN type RPAREN
  178             | SIZEOF LPAREN special_type ID RPAREN

  179 special_type: STRUCT
  180             | TYPEDEF
  181             | ENUM
  182             | UNION


State 0 conflicts: 9 shift/reduce
State 15 conflicts: 9 shift/reduce
State 56 conflicts: 13 shift/reduce, 14 reduce/reduce
State 58 conflicts: 13 shift/reduce, 14 reduce/reduce
State 61 conflicts: 13 shift/reduce, 14 reduce/reduce
State 68 conflicts: 13 shift/reduce, 14 reduce/reduce
State 81 conflicts: 2 shift/reduce
State 89 conflicts: 9 shift/reduce
State 90 conflicts: 9 shift/reduce
State 93 conflicts: 9 shift/reduce
State 95 conflicts: 9 shift/reduce
State 130 conflicts: 10 shift/reduce
State 175 conflicts: 9 shift/reduce
State 178 conflicts: 9 shift/reduce
State 184 conflicts: 9 shift/reduce
State 193 conflicts: 9 shift/reduce
State 209 conflicts: 9 shift/reduce
State 212 conflicts: 9 shift/reduce
State 213 conflicts: 9 shift/reduce
State 232 conflicts: 2 shift/reduce
State 249 conflicts: 2 reduce/reduce
State 250 conflicts: 9 shift/reduce
State 253 conflicts: 9 shift/reduce
State 254 conflicts: 9 shift/reduce
State 255 conflicts: 9 shift/reduce
State 256 conflicts: 9 shift/reduce
State 260 conflicts: 2 shift/reduce
State 261 conflicts: 2 shift/reduce
State 263 conflicts: 9 shift/reduce
State 273 conflicts: 9 shift/reduce
State 274 conflicts: 1 shift/reduce
State 276 conflicts: 1 shift/reduce
State 280 conflicts: 9 shift/reduce
State 281 conflicts: 9 shift/reduce
State 282 conflicts: 9 shift/reduce
State 290 conflicts: 9 shift/reduce
State 291 conflicts: 9 shift/reduce
State 292 conflicts: 9 shift/reduce
State 293 conflicts: 9 shift/reduce
State 299 conflicts: 1 shift/reduce
State 300 conflicts: 1 shift/reduce
State 301 conflicts: 9 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: prog endfile
    2     | prog global_stmts
    3     | global_stmts

    4 global_stmts: func_declaration
    5             | declaration_stmt SEMI
    6             | instantiation_stmt SEMI

    7 stmts: stmts stmt
    8      | stmt

    9 stmt: goto_stmt
   10     | label
   11     | if_stmt
   12     | for_stmt
   13     | while_stmt
   14     | do_while_stmt SEMI
   15     | return_stmt SEMI
   16     | declaration_stmt SEMI
   17     | assignment_stmt SEMI
   18     | instantiation_stmt SEMI
   19     | CONTINUE SEMI
   20     | BREAK SEMI

   21 declaration_stmt: variable_declaration
   22                 | array_declaration
   23                 | struct_declaration
   24                 | enum_declaration
   25                 | union_declaration
   26                 | typeDef_declaration

   27 assignment_stmt: ID assign_op expr
   28                | ID DOT ID assign_op expr
   29                | unary_op ID
   30                | ID unary_op
   31                | array_declaration assign_op LEFT_BRACE expr RIGHT_BRACE

   32 array_declaration: prefixes type ID LEFT_BRACKET expr RIGHT_BRACKET

   33 func_declaration: prefixes type ID LPAREN func_parameters_declaration RPAREN compound_stmt
   34                 | prefixes type ID LPAREN func_parameters_declaration RPAREN SEMI

   35 func_parameters_declaration: ε
   36                            | func_parameters_declaration COMMA variable_declaration
   37                            | variable_declaration
   38                            | VOID

   39 variable_declaration: prefixes type ID
   40                     | prefixes type ID assign_op expr

   41 data_struct_stmts: ε
   42                  | data_struct_stmts declaration_stmt SEMI
   43                  | data_struct_stmts func_declaration SEMI
   44                  | declaration_stmt SEMI
   45                  | func_declaration SEMI

   46 enum_parameters: ε
   47                | enum_parameters COMMA ID
   48                | ID

   49 struct_declaration: STRUCT ID LEFT_BRACE data_struct_stmts RIGHT_BRACE

   50 union_declaration: UNION ID LEFT_BRACE data_struct_stmts RIGHT_BRACE

   51 enum_declaration: ENUM ID LEFT_BRACE enum_parameters RIGHT_BRACE

   52 typeDef_declaration: TYPEDEF enum_declaration ID
   53                    | TYPEDEF ENUM LEFT_BRACE enum_parameters RIGHT_BRACE ID
   54                    | TYPEDEF union_declaration ID
   55                    | TYPEDEF UNION LEFT_BRACE data_struct_stmts RIGHT_BRACE ID
   56                    | TYPEDEF struct_declaration ID
   57                    | TYPEDEF STRUCT LEFT_BRACE data_struct_stmts RIGHT_BRACE ID
   58                    | TYPEDEF type ID

   59 instantiation_stmt: struct_inst
   60                   | union_inst
   61                   | func_inst

   62 struct_inst: STRUCT ID ID

   63 union_inst: UNION ID ID

   64 func_inst: ID LPAREN func_inst_parameters RPAREN

   65 func_inst_parameters: ε
   66                     | func_inst_parameters COMMA expr
   67                     | expr

   68 expr: expr op term
   69     | expr cond_op term
   70     | expr bitwise_op term
   71     | expr logical_op term
   72     | term

   73 term: term prio_op operand
   74     | operand

   75 operand: unary_op factor
   76        | factor unary_op
   77        | type_cast factor
   78        | LOGICAL_NOT factor
   79        | factor

   80 factor: LPAREN expr RPAREN
   81       | NUM
   82       | ID
   83       | FNUM
   84       | func_inst

   85 op: PLUS
   86   | MINUS
   87   | RIGHT_SHIFT
   88   | LEFT_SHIFT

   89 prio_op: TIMES
   90        | OVER
   91        | PERCENT

   92 unary_op: INCREMENT
   93         | DECREMENT

   94 cond_op: GREATER_THAN
   95        | LESS_THAN_OR_EQUAL
   96        | GREATER_THAN_OR_EQUAL
   97        | LESS_THAN
   98        | EQUAL
   99        | NOT_EQUAL

  100 logical_op: LOGICAL_AND
  101           | LOGICAL_OR

  102 bitwise_op: BITWISE_AND
  103           | BITWISE_NOT
  104           | BITWISE_OR
  105           | BITWISE_XOR

  106 assign_op: ASSIGN
  107          | PLUS_ASSIGN
  108          | MINUS_ASSIGN
  109          | MODULUS_ASSIGN
  110          | LEFT_SHIFT_ASSIGN
  111          | RIGHT_SHIFT_ASSIGN
  112          | BITWISE_AND_ASSIGN
  113          | BITWISE_OR_ASSIGN
  114          | BITWISE_XOR_ASSIGN
  115          | MULTIPLY_ASSIGN
  116          | DIVIDE_ASSIGN

  117 compound_stmt: LEFT_BRACE stmts RIGHT_BRACE
  118              | LEFT_BRACE RIGHT_BRACE

  119 if_stmt: IF LPAREN condition RPAREN compound_stmt
  120        | IF LPAREN condition RPAREN compound_stmt elseif_stmt
  121        | IF LPAREN condition RPAREN compound_stmt else_stmt
  122        | IF LPAREN condition RPAREN stmt
  123        | IF LPAREN condition RPAREN stmt elseif_stmt
  124        | IF LPAREN condition RPAREN stmt else_stmt
  125        | IF LPAREN condition RPAREN SEMI

  126 elseif_stmt: elseif_stmt ELSEIF LPAREN condition RPAREN stmt
  127            | elseif_stmt ELSEIF LPAREN condition RPAREN compound_stmt
  128            | ELSEIF LPAREN condition RPAREN stmt
  129            | ELSEIF LPAREN condition RPAREN stmt else_stmt
  130            | ELSEIF LPAREN condition RPAREN compound_stmt
  131            | ELSEIF LPAREN condition RPAREN compound_stmt else_stmt

  132 else_stmt: ELSE stmt
  133          | ELSE compound_stmt

  134 do_while_stmt: DO compound_stmt WHILE LPAREN condition RPAREN
  135              | DO stmt WHILE LPAREN LPAREN condition RPAREN

  136 while_stmt: WHILE LPAREN condition RPAREN compound_stmt
  137           | WHILE LPAREN condition RPAREN stmt
  138           | WHILE LPAREN condition RPAREN SEMI

  139 for_stmt: FOR LPAREN condition SEMI condition SEMI condition RPAREN compound_stmt
  140         | FOR LPAREN condition SEMI condition SEMI condition RPAREN stmt
  141         | FOR LPAREN variable_declaration SEMI condition SEMI condition RPAREN compound_stmt
  142         | FOR LPAREN variable_declaration SEMI condition SEMI condition RPAREN stmt
  143         | variable_declaration

  144 condition: expr
  145          | assignment_stmt

  146 label: ID COLON

  147 goto_stmt: GOTO ID SEMI

  148 return_stmt: RETURN expr

  149 endfile: ENDFILE

  150 type: INT
  151     | FLOAT
  152     | DOUBLE
  153     | CHAR
  154     | VOID

  155 prefixes: ε
  156         | prefixes prefix
  157         | prefix

  158 prefix: EXTERN
  159       | LONG
  160       | SHORT
  161       | STATIC
  162       | SIGNED
  163       | UNSIGNED
  164       | VOLATILE
  165       | REGISTER
  166       | CONSTANT

  167 type_cast: LPAREN type RPAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ENDFILE (258) 149
    ERROR (259)
    IF (260) 119 120 121 122 123 124 125
    ELSEIF (261) 126 127 128 129 130 131
    ELSE (262) 132 133
    DO (263) 134 135
    WHILE (264) 134 135 136 137 138
    FOR (265) 139 140 141 142
    SWITCH (266)
    CASE (267)
    DEFAULT (268)
    RETURN (269) 148
    BREAK (270) 20
    INT (271) 150
    FLOAT (272) 151
    DOUBLE (273) 152
    CHAR (274) 153
    VOID (275) 38 154
    STRUCT (276) 49 57 62
    TYPEDEF (277) 52 53 54 55 56 57 58
    CONTINUE (278) 19
    EXTERN (279) 158
    GOTO (280) 147
    LONG (281) 159
    ENUM (282) 51 53
    REGISTER (283) 165
    SHORT (284) 160
    SIZEOF (285)
    STATIC (286) 161
    SIGNED (287) 162
    UNION (288) 50 55 63
    UNSIGNED (289) 163
    VOLATILE (290) 164
    NUM <intval> (291) 81
    ID <identifier> (292) 27 28 29 30 32 33 34 39 40 47 48 49 50 51 52 53 54 55 56 57 58 62 63 64 82 146 147
    FNUM <floatval> (293) 83
    ASSIGN (294) 106
    PLUS (295) 85
    MINUS (296) 86
    TIMES (297) 89
    OVER (298) 90
    PERCENT (299) 91
    LPAREN (300) 33 34 64 80 119 120 121 122 123 124 125 126 127 128 129 130 131 134 135 136 137 138 139 140 141 142 167
    RPAREN (301) 33 34 64 80 119 120 121 122 123 124 125 126 127 128 129 130 131 134 135 136 137 138 139 140 141 142 167
    LEFT_BRACE (302) 31 49 50 51 53 55 57 117 118
    RIGHT_BRACE (303) 31 49 50 51 53 55 57 117 118
    LEFT_BRACKET (304) 32
    RIGHT_BRACKET (305) 32
    TERNARY (306)
    SEMI (307) 5 6 14 15 16 17 18 19 20 34 42 43 44 45 125 138 139 140 141 142 147
    COLON (308) 146
    COMMA (309) 36 47 66
    INCREMENT (310) 92
    DECREMENT (311) 93
    BITWISE_AND (312) 102
    BITWISE_OR (313) 104
    BITWISE_NOT (314) 103
    BITWISE_XOR (315) 105
    LOGICAL_NOT (316) 78
    LOGICAL_AND (317) 100
    LOGICAL_OR (318) 101
    EQUAL (319) 98
    NOT_EQUAL (320) 99
    LESS_THAN (321) 97
    GREATER_THAN (322) 94
    LESS_THAN_OR_EQUAL (323) 95
    GREATER_THAN_OR_EQUAL (324) 96
    RIGHT_SHIFT (325) 87
    LEFT_SHIFT (326) 88
    PLUS_ASSIGN (327) 107
    MINUS_ASSIGN (328) 108
    LEFT_SHIFT_ASSIGN (329) 110
    RIGHT_SHIFT_ASSIGN (330) 111
    BITWISE_AND_ASSIGN (331) 112
    BITWISE_OR_ASSIGN (332) 113
    BITWISE_XOR_ASSIGN (333) 114
    MULTIPLY_ASSIGN (334) 115
    DIVIDE_ASSIGN (335) 116
    MODULUS_ASSIGN (336) 109
    CARDINAL (337)
    ARROW (338)
    DEFINE (339)
    CONSTANT (340) 166
    POINTER (341)
    ADDRESS_OF (342)
    OTHER (343)
    DOT (344) 28
    STRINGliteral (345)


Nonterminals, with rules where they appear

    $accept (91)
        on left: 0
    prog (92)
        on left: 1 2 3
        on right: 0 1 2
    global_stmts (93)
        on left: 4 5 6
        on right: 2 3
    stmts (94)
        on left: 7 8
        on right: 7 117
    stmt (95)
        on left: 9 10 11 12 13 14 15 16 17 18 19 20
        on right: 7 8 122 123 124 126 128 129 132 135 137 140 142
    declaration_stmt (96)
        on left: 21 22 23 24 25 26
        on right: 5 16 42 44
    assignment_stmt (97)
        on left: 27 28 29 30 31
        on right: 17 145
    array_declaration (98)
        on left: 32
        on right: 22 31
    func_declaration (99)
        on left: 33 34
        on right: 4 43 45
    func_parameters_declaration (100)
        on left: 35 36 37 38
        on right: 33 34 36
    variable_declaration (101)
        on left: 39 40
        on right: 21 36 37 141 142 143
    data_struct_stmts (102)
        on left: 41 42 43 44 45
        on right: 42 43 49 50 55 57
    enum_parameters (103)
        on left: 46 47 48
        on right: 47 51 53
    struct_declaration (104)
        on left: 49
        on right: 23 56
    union_declaration (105)
        on left: 50
        on right: 25 54
    enum_declaration (106)
        on left: 51
        on right: 24 52
    typeDef_declaration (107)
        on left: 52 53 54 55 56 57 58
        on right: 26
    instantiation_stmt (108)
        on left: 59 60 61
        on right: 6 18
    struct_inst (109)
        on left: 62
        on right: 59
    union_inst (110)
        on left: 63
        on right: 60
    func_inst (111)
        on left: 64
        on right: 61 84
    func_inst_parameters (112)
        on left: 65 66 67
        on right: 64 66
    expr (113)
        on left: 68 69 70 71 72
        on right: 27 28 31 32 40 66 67 68 69 70 71 80 144 148
    term (114)
        on left: 73 74
        on right: 68 69 70 71 72 73
    operand (115)
        on left: 75 76 77 78 79
        on right: 73 74
    factor (116)
        on left: 80 81 82 83 84
        on right: 75 76 77 78 79
    op (117)
        on left: 85 86 87 88
        on right: 68
    prio_op (118)
        on left: 89 90 91
        on right: 73
    unary_op (119)
        on left: 92 93
        on right: 29 30 75 76
    cond_op (120)
        on left: 94 95 96 97 98 99
        on right: 69
    logical_op (121)
        on left: 100 101
        on right: 71
    bitwise_op (122)
        on left: 102 103 104 105
        on right: 70
    assign_op (123)
        on left: 106 107 108 109 110 111 112 113 114 115 116
        on right: 27 28 31 40
    compound_stmt (124)
        on left: 117 118
        on right: 33 119 120 121 127 130 131 133 134 136 139 141
    if_stmt (125)
        on left: 119 120 121 122 123 124 125
        on right: 11
    elseif_stmt (126)
        on left: 126 127 128 129 130 131
        on right: 120 123 126 127
    else_stmt (127)
        on left: 132 133
        on right: 121 124 129 131
    do_while_stmt (128)
        on left: 134 135
        on right: 14
    while_stmt (129)
        on left: 136 137 138
        on right: 13
    for_stmt (130)
        on left: 139 140 141 142 143
        on right: 12
    condition (131)
        on left: 144 145
        on right: 119 120 121 122 123 124 125 126 127 128 129 130 131 134 135 136 137 138 139 140 141 142
    label (132)
        on left: 146
        on right: 10
    goto_stmt (133)
        on left: 147
        on right: 9
    return_stmt (134)
        on left: 148
        on right: 15
    endfile (135)
        on left: 149
        on right: 1
    type (136)
        on left: 150 151 152 153 154
        on right: 32 33 34 39 40 58 167
    prefixes (137)
        on left: 155 156 157
        on right: 32 33 34 39 40 156
    prefix (138)
        on left: 158 159 160 161 162 163 164 165 166
        on right: 156 157
    type_cast (139)
        on left: 167
        on right: 77


State 0

    0 $accept: • prog $end

    STRUCT    shift, and go to state 1
    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    ENUM      shift, and go to state 5
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNION     shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    ID        shift, and go to state 13
    CONSTANT  shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    prog                  go to state 15
    global_stmts          go to state 16
    declaration_stmt      go to state 17
    array_declaration     go to state 18
    func_declaration      go to state 19
    variable_declaration  go to state 20
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 25
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    prefixes              go to state 29
    prefix                go to state 30


State 1

   49 struct_declaration: STRUCT • ID LEFT_BRACE data_struct_stmts RIGHT_BRACE
   62 struct_inst: STRUCT • ID ID

    ID  shift, and go to state 31


State 2

   52 typeDef_declaration: TYPEDEF • enum_declaration ID
   53                    | TYPEDEF • ENUM LEFT_BRACE enum_parameters RIGHT_BRACE ID
   54                    | TYPEDEF • union_declaration ID
   55                    | TYPEDEF • UNION LEFT_BRACE data_struct_stmts RIGHT_BRACE ID
   56                    | TYPEDEF • struct_declaration ID
   57                    | TYPEDEF • STRUCT LEFT_BRACE data_struct_stmts RIGHT_BRACE ID
   58                    | TYPEDEF • type ID

    INT     shift, and go to state 32
    FLOAT   shift, and go to state 33
    DOUBLE  shift, and go to state 34
    CHAR    shift, and go to state 35
    VOID    shift, and go to state 36
    STRUCT  shift, and go to state 37
    ENUM    shift, and go to state 38
    UNION   shift, and go to state 39

    struct_declaration  go to state 40
    union_declaration   go to state 41
    enum_declaration    go to state 42
    type                go to state 43


State 3

  158 prefix: EXTERN •

    $default  reduce using rule 158 (prefix)


State 4

  159 prefix: LONG •

    $default  reduce using rule 159 (prefix)


State 5

   51 enum_declaration: ENUM • ID LEFT_BRACE enum_parameters RIGHT_BRACE

    ID  shift, and go to state 44


State 6

  165 prefix: REGISTER •

    $default  reduce using rule 165 (prefix)


State 7

  160 prefix: SHORT •

    $default  reduce using rule 160 (prefix)


State 8

  161 prefix: STATIC •

    $default  reduce using rule 161 (prefix)


State 9

  162 prefix: SIGNED •

    $default  reduce using rule 162 (prefix)


State 10

   50 union_declaration: UNION • ID LEFT_BRACE data_struct_stmts RIGHT_BRACE
   63 union_inst: UNION • ID ID

    ID  shift, and go to state 45


State 11

  163 prefix: UNSIGNED •

    $default  reduce using rule 163 (prefix)


State 12

  164 prefix: VOLATILE •

    $default  reduce using rule 164 (prefix)


State 13

   64 func_inst: ID • LPAREN func_inst_parameters RPAREN

    LPAREN  shift, and go to state 46


State 14

  166 prefix: CONSTANT •

    $default  reduce using rule 166 (prefix)


State 15

    0 $accept: prog • $end
    1 prog: prog • endfile
    2     | prog • global_stmts

    $end      shift, and go to state 47
    ENDFILE   shift, and go to state 48
    STRUCT    shift, and go to state 1
    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    ENUM      shift, and go to state 5
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNION     shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    ID        shift, and go to state 13
    CONSTANT  shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    global_stmts          go to state 49
    declaration_stmt      go to state 17
    array_declaration     go to state 18
    func_declaration      go to state 19
    variable_declaration  go to state 20
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 25
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    endfile               go to state 50
    prefixes              go to state 29
    prefix                go to state 30


State 16

    3 prog: global_stmts •

    $default  reduce using rule 3 (prog)


State 17

    5 global_stmts: declaration_stmt • SEMI

    SEMI  shift, and go to state 51


State 18

   22 declaration_stmt: array_declaration •

    $default  reduce using rule 22 (declaration_stmt)


State 19

    4 global_stmts: func_declaration •

    $default  reduce using rule 4 (global_stmts)


State 20

   21 declaration_stmt: variable_declaration •

    $default  reduce using rule 21 (declaration_stmt)


State 21

   23 declaration_stmt: struct_declaration •

    $default  reduce using rule 23 (declaration_stmt)


State 22

   25 declaration_stmt: union_declaration •

    $default  reduce using rule 25 (declaration_stmt)


State 23

   24 declaration_stmt: enum_declaration •

    $default  reduce using rule 24 (declaration_stmt)


State 24

   26 declaration_stmt: typeDef_declaration •

    $default  reduce using rule 26 (declaration_stmt)


State 25

    6 global_stmts: instantiation_stmt • SEMI

    SEMI  shift, and go to state 52


State 26

   59 instantiation_stmt: struct_inst •

    $default  reduce using rule 59 (instantiation_stmt)


State 27

   60 instantiation_stmt: union_inst •

    $default  reduce using rule 60 (instantiation_stmt)


State 28

   61 instantiation_stmt: func_inst •

    $default  reduce using rule 61 (instantiation_stmt)


State 29

   32 array_declaration: prefixes • type ID LEFT_BRACKET expr RIGHT_BRACKET
   33 func_declaration: prefixes • type ID LPAREN func_parameters_declaration RPAREN compound_stmt
   34                 | prefixes • type ID LPAREN func_parameters_declaration RPAREN SEMI
   39 variable_declaration: prefixes • type ID
   40                     | prefixes • type ID assign_op expr
  156 prefixes: prefixes • prefix

    INT       shift, and go to state 32
    FLOAT     shift, and go to state 33
    DOUBLE    shift, and go to state 34
    CHAR      shift, and go to state 35
    VOID      shift, and go to state 36
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    type    go to state 53
    prefix  go to state 54


State 30

  157 prefixes: prefix •

    $default  reduce using rule 157 (prefixes)


State 31

   49 struct_declaration: STRUCT ID • LEFT_BRACE data_struct_stmts RIGHT_BRACE
   62 struct_inst: STRUCT ID • ID

    ID          shift, and go to state 55
    LEFT_BRACE  shift, and go to state 56


State 32

  150 type: INT •

    $default  reduce using rule 150 (type)


State 33

  151 type: FLOAT •

    $default  reduce using rule 151 (type)


State 34

  152 type: DOUBLE •

    $default  reduce using rule 152 (type)


State 35

  153 type: CHAR •

    $default  reduce using rule 153 (type)


State 36

  154 type: VOID •

    $default  reduce using rule 154 (type)


State 37

   49 struct_declaration: STRUCT • ID LEFT_BRACE data_struct_stmts RIGHT_BRACE
   57 typeDef_declaration: TYPEDEF STRUCT • LEFT_BRACE data_struct_stmts RIGHT_BRACE ID

    ID          shift, and go to state 57
    LEFT_BRACE  shift, and go to state 58


State 38

   51 enum_declaration: ENUM • ID LEFT_BRACE enum_parameters RIGHT_BRACE
   53 typeDef_declaration: TYPEDEF ENUM • LEFT_BRACE enum_parameters RIGHT_BRACE ID

    ID          shift, and go to state 44
    LEFT_BRACE  shift, and go to state 59


State 39

   50 union_declaration: UNION • ID LEFT_BRACE data_struct_stmts RIGHT_BRACE
   55 typeDef_declaration: TYPEDEF UNION • LEFT_BRACE data_struct_stmts RIGHT_BRACE ID

    ID          shift, and go to state 60
    LEFT_BRACE  shift, and go to state 61


State 40

   56 typeDef_declaration: TYPEDEF struct_declaration • ID

    ID  shift, and go to state 62


State 41

   54 typeDef_declaration: TYPEDEF union_declaration • ID

    ID  shift, and go to state 63


State 42

   52 typeDef_declaration: TYPEDEF enum_declaration • ID

    ID  shift, and go to state 64


State 43

   58 typeDef_declaration: TYPEDEF type • ID

    ID  shift, and go to state 65


State 44

   51 enum_declaration: ENUM ID • LEFT_BRACE enum_parameters RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 66


State 45

   50 union_declaration: UNION ID • LEFT_BRACE data_struct_stmts RIGHT_BRACE
   63 union_inst: UNION ID • ID

    ID          shift, and go to state 67
    LEFT_BRACE  shift, and go to state 68


State 46

   64 func_inst: ID LPAREN • func_inst_parameters RPAREN

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    $default  reduce using rule 65 (func_inst_parameters)

    func_inst             go to state 76
    func_inst_parameters  go to state 77
    expr                  go to state 78
    term                  go to state 79
    operand               go to state 80
    factor                go to state 81
    unary_op              go to state 82
    type_cast             go to state 83


State 47

    0 $accept: prog $end •

    $default  accept


State 48

  149 endfile: ENDFILE •

    $default  reduce using rule 149 (endfile)


State 49

    2 prog: prog global_stmts •

    $default  reduce using rule 2 (prog)


State 50

    1 prog: prog endfile •

    $default  reduce using rule 1 (prog)


State 51

    5 global_stmts: declaration_stmt SEMI •

    $default  reduce using rule 5 (global_stmts)


State 52

    6 global_stmts: instantiation_stmt SEMI •

    $default  reduce using rule 6 (global_stmts)


State 53

   32 array_declaration: prefixes type • ID LEFT_BRACKET expr RIGHT_BRACKET
   33 func_declaration: prefixes type • ID LPAREN func_parameters_declaration RPAREN compound_stmt
   34                 | prefixes type • ID LPAREN func_parameters_declaration RPAREN SEMI
   39 variable_declaration: prefixes type • ID
   40                     | prefixes type • ID assign_op expr

    ID  shift, and go to state 84


State 54

  156 prefixes: prefixes prefix •

    $default  reduce using rule 156 (prefixes)


State 55

   62 struct_inst: STRUCT ID ID •

    $default  reduce using rule 62 (struct_inst)


State 56

   49 struct_declaration: STRUCT ID LEFT_BRACE • data_struct_stmts RIGHT_BRACE

    STRUCT    shift, and go to state 85
    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    ENUM      shift, and go to state 5
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNION     shift, and go to state 86
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    INT       reduce using rule 41 (data_struct_stmts)
    INT       [reduce using rule 155 (prefixes)]
    FLOAT     reduce using rule 41 (data_struct_stmts)
    FLOAT     [reduce using rule 155 (prefixes)]
    DOUBLE    reduce using rule 41 (data_struct_stmts)
    DOUBLE    [reduce using rule 155 (prefixes)]
    CHAR      reduce using rule 41 (data_struct_stmts)
    CHAR      [reduce using rule 155 (prefixes)]
    VOID      reduce using rule 41 (data_struct_stmts)
    VOID      [reduce using rule 155 (prefixes)]
    STRUCT    [reduce using rule 41 (data_struct_stmts)]
    TYPEDEF   [reduce using rule 41 (data_struct_stmts)]
    EXTERN    [reduce using rule 41 (data_struct_stmts)]
    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 41 (data_struct_stmts)]
    LONG      [reduce using rule 155 (prefixes)]
    ENUM      [reduce using rule 41 (data_struct_stmts)]
    REGISTER  [reduce using rule 41 (data_struct_stmts)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 41 (data_struct_stmts)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 41 (data_struct_stmts)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 41 (data_struct_stmts)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNION     [reduce using rule 41 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 41 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 41 (data_struct_stmts)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 41 (data_struct_stmts)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 41 (data_struct_stmts)

    declaration_stmt      go to state 87
    array_declaration     go to state 18
    func_declaration      go to state 88
    variable_declaration  go to state 20
    data_struct_stmts     go to state 89
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    prefixes              go to state 29
    prefix                go to state 30


State 57

   49 struct_declaration: STRUCT ID • LEFT_BRACE data_struct_stmts RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 56


State 58

   57 typeDef_declaration: TYPEDEF STRUCT LEFT_BRACE • data_struct_stmts RIGHT_BRACE ID

    STRUCT    shift, and go to state 85
    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    ENUM      shift, and go to state 5
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNION     shift, and go to state 86
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    INT       reduce using rule 41 (data_struct_stmts)
    INT       [reduce using rule 155 (prefixes)]
    FLOAT     reduce using rule 41 (data_struct_stmts)
    FLOAT     [reduce using rule 155 (prefixes)]
    DOUBLE    reduce using rule 41 (data_struct_stmts)
    DOUBLE    [reduce using rule 155 (prefixes)]
    CHAR      reduce using rule 41 (data_struct_stmts)
    CHAR      [reduce using rule 155 (prefixes)]
    VOID      reduce using rule 41 (data_struct_stmts)
    VOID      [reduce using rule 155 (prefixes)]
    STRUCT    [reduce using rule 41 (data_struct_stmts)]
    TYPEDEF   [reduce using rule 41 (data_struct_stmts)]
    EXTERN    [reduce using rule 41 (data_struct_stmts)]
    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 41 (data_struct_stmts)]
    LONG      [reduce using rule 155 (prefixes)]
    ENUM      [reduce using rule 41 (data_struct_stmts)]
    REGISTER  [reduce using rule 41 (data_struct_stmts)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 41 (data_struct_stmts)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 41 (data_struct_stmts)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 41 (data_struct_stmts)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNION     [reduce using rule 41 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 41 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 41 (data_struct_stmts)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 41 (data_struct_stmts)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 41 (data_struct_stmts)

    declaration_stmt      go to state 87
    array_declaration     go to state 18
    func_declaration      go to state 88
    variable_declaration  go to state 20
    data_struct_stmts     go to state 90
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    prefixes              go to state 29
    prefix                go to state 30


State 59

   53 typeDef_declaration: TYPEDEF ENUM LEFT_BRACE • enum_parameters RIGHT_BRACE ID

    ID  shift, and go to state 91

    $default  reduce using rule 46 (enum_parameters)

    enum_parameters  go to state 92


State 60

   50 union_declaration: UNION ID • LEFT_BRACE data_struct_stmts RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 68


State 61

   55 typeDef_declaration: TYPEDEF UNION LEFT_BRACE • data_struct_stmts RIGHT_BRACE ID

    STRUCT    shift, and go to state 85
    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    ENUM      shift, and go to state 5
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNION     shift, and go to state 86
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    INT       reduce using rule 41 (data_struct_stmts)
    INT       [reduce using rule 155 (prefixes)]
    FLOAT     reduce using rule 41 (data_struct_stmts)
    FLOAT     [reduce using rule 155 (prefixes)]
    DOUBLE    reduce using rule 41 (data_struct_stmts)
    DOUBLE    [reduce using rule 155 (prefixes)]
    CHAR      reduce using rule 41 (data_struct_stmts)
    CHAR      [reduce using rule 155 (prefixes)]
    VOID      reduce using rule 41 (data_struct_stmts)
    VOID      [reduce using rule 155 (prefixes)]
    STRUCT    [reduce using rule 41 (data_struct_stmts)]
    TYPEDEF   [reduce using rule 41 (data_struct_stmts)]
    EXTERN    [reduce using rule 41 (data_struct_stmts)]
    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 41 (data_struct_stmts)]
    LONG      [reduce using rule 155 (prefixes)]
    ENUM      [reduce using rule 41 (data_struct_stmts)]
    REGISTER  [reduce using rule 41 (data_struct_stmts)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 41 (data_struct_stmts)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 41 (data_struct_stmts)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 41 (data_struct_stmts)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNION     [reduce using rule 41 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 41 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 41 (data_struct_stmts)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 41 (data_struct_stmts)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 41 (data_struct_stmts)

    declaration_stmt      go to state 87
    array_declaration     go to state 18
    func_declaration      go to state 88
    variable_declaration  go to state 20
    data_struct_stmts     go to state 93
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    prefixes              go to state 29
    prefix                go to state 30


State 62

   56 typeDef_declaration: TYPEDEF struct_declaration ID •

    $default  reduce using rule 56 (typeDef_declaration)


State 63

   54 typeDef_declaration: TYPEDEF union_declaration ID •

    $default  reduce using rule 54 (typeDef_declaration)


State 64

   52 typeDef_declaration: TYPEDEF enum_declaration ID •

    $default  reduce using rule 52 (typeDef_declaration)


State 65

   58 typeDef_declaration: TYPEDEF type ID •

    $default  reduce using rule 58 (typeDef_declaration)


State 66

   51 enum_declaration: ENUM ID LEFT_BRACE • enum_parameters RIGHT_BRACE

    ID  shift, and go to state 91

    $default  reduce using rule 46 (enum_parameters)

    enum_parameters  go to state 94


State 67

   63 union_inst: UNION ID ID •

    $default  reduce using rule 63 (union_inst)


State 68

   50 union_declaration: UNION ID LEFT_BRACE • data_struct_stmts RIGHT_BRACE

    STRUCT    shift, and go to state 85
    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    ENUM      shift, and go to state 5
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNION     shift, and go to state 86
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    INT       reduce using rule 41 (data_struct_stmts)
    INT       [reduce using rule 155 (prefixes)]
    FLOAT     reduce using rule 41 (data_struct_stmts)
    FLOAT     [reduce using rule 155 (prefixes)]
    DOUBLE    reduce using rule 41 (data_struct_stmts)
    DOUBLE    [reduce using rule 155 (prefixes)]
    CHAR      reduce using rule 41 (data_struct_stmts)
    CHAR      [reduce using rule 155 (prefixes)]
    VOID      reduce using rule 41 (data_struct_stmts)
    VOID      [reduce using rule 155 (prefixes)]
    STRUCT    [reduce using rule 41 (data_struct_stmts)]
    TYPEDEF   [reduce using rule 41 (data_struct_stmts)]
    EXTERN    [reduce using rule 41 (data_struct_stmts)]
    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 41 (data_struct_stmts)]
    LONG      [reduce using rule 155 (prefixes)]
    ENUM      [reduce using rule 41 (data_struct_stmts)]
    REGISTER  [reduce using rule 41 (data_struct_stmts)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 41 (data_struct_stmts)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 41 (data_struct_stmts)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 41 (data_struct_stmts)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNION     [reduce using rule 41 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 41 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 41 (data_struct_stmts)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 41 (data_struct_stmts)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 41 (data_struct_stmts)

    declaration_stmt      go to state 87
    array_declaration     go to state 18
    func_declaration      go to state 88
    variable_declaration  go to state 20
    data_struct_stmts     go to state 95
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    prefixes              go to state 29
    prefix                go to state 30


State 69

   81 factor: NUM •

    $default  reduce using rule 81 (factor)


State 70

   64 func_inst: ID • LPAREN func_inst_parameters RPAREN
   82 factor: ID •

    LPAREN  shift, and go to state 46

    $default  reduce using rule 82 (factor)


State 71

   83 factor: FNUM •

    $default  reduce using rule 83 (factor)


State 72

   80 factor: LPAREN • expr RPAREN
  167 type_cast: LPAREN • type RPAREN

    INT          shift, and go to state 32
    FLOAT        shift, and go to state 33
    DOUBLE       shift, and go to state 34
    CHAR         shift, and go to state 35
    VOID         shift, and go to state 36
    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 96
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type       go to state 97
    type_cast  go to state 83


State 73

   92 unary_op: INCREMENT •

    $default  reduce using rule 92 (unary_op)


State 74

   93 unary_op: DECREMENT •

    $default  reduce using rule 93 (unary_op)


State 75

   78 operand: LOGICAL_NOT • factor

    NUM     shift, and go to state 69
    ID      shift, and go to state 70
    FNUM    shift, and go to state 71
    LPAREN  shift, and go to state 98

    func_inst  go to state 76
    factor     go to state 99


State 76

   84 factor: func_inst •

    $default  reduce using rule 84 (factor)


State 77

   64 func_inst: ID LPAREN func_inst_parameters • RPAREN
   66 func_inst_parameters: func_inst_parameters • COMMA expr

    RPAREN  shift, and go to state 100
    COMMA   shift, and go to state 101


State 78

   67 func_inst_parameters: expr •
   68 expr: expr • op term
   69     | expr • cond_op term
   70     | expr • bitwise_op term
   71     | expr • logical_op term

    PLUS                   shift, and go to state 102
    MINUS                  shift, and go to state 103
    BITWISE_AND            shift, and go to state 104
    BITWISE_OR             shift, and go to state 105
    BITWISE_NOT            shift, and go to state 106
    BITWISE_XOR            shift, and go to state 107
    LOGICAL_AND            shift, and go to state 108
    LOGICAL_OR             shift, and go to state 109
    EQUAL                  shift, and go to state 110
    NOT_EQUAL              shift, and go to state 111
    LESS_THAN              shift, and go to state 112
    GREATER_THAN           shift, and go to state 113
    LESS_THAN_OR_EQUAL     shift, and go to state 114
    GREATER_THAN_OR_EQUAL  shift, and go to state 115
    RIGHT_SHIFT            shift, and go to state 116
    LEFT_SHIFT             shift, and go to state 117

    $default  reduce using rule 67 (func_inst_parameters)

    op          go to state 118
    cond_op     go to state 119
    logical_op  go to state 120
    bitwise_op  go to state 121


State 79

   72 expr: term •
   73 term: term • prio_op operand

    TIMES    shift, and go to state 122
    OVER     shift, and go to state 123
    PERCENT  shift, and go to state 124

    $default  reduce using rule 72 (expr)

    prio_op  go to state 125


State 80

   74 term: operand •

    $default  reduce using rule 74 (term)


State 81

   76 operand: factor • unary_op
   79        | factor •

    INCREMENT  shift, and go to state 73
    DECREMENT  shift, and go to state 74

    INCREMENT  [reduce using rule 79 (operand)]
    DECREMENT  [reduce using rule 79 (operand)]
    $default   reduce using rule 79 (operand)

    unary_op  go to state 126


State 82

   75 operand: unary_op • factor

    NUM     shift, and go to state 69
    ID      shift, and go to state 70
    FNUM    shift, and go to state 71
    LPAREN  shift, and go to state 98

    func_inst  go to state 76
    factor     go to state 127


State 83

   77 operand: type_cast • factor

    NUM     shift, and go to state 69
    ID      shift, and go to state 70
    FNUM    shift, and go to state 71
    LPAREN  shift, and go to state 98

    func_inst  go to state 76
    factor     go to state 128


State 84

   32 array_declaration: prefixes type ID • LEFT_BRACKET expr RIGHT_BRACKET
   33 func_declaration: prefixes type ID • LPAREN func_parameters_declaration RPAREN compound_stmt
   34                 | prefixes type ID • LPAREN func_parameters_declaration RPAREN SEMI
   39 variable_declaration: prefixes type ID •
   40                     | prefixes type ID • assign_op expr

    ASSIGN              shift, and go to state 129
    LPAREN              shift, and go to state 130
    LEFT_BRACKET        shift, and go to state 131
    PLUS_ASSIGN         shift, and go to state 132
    MINUS_ASSIGN        shift, and go to state 133
    LEFT_SHIFT_ASSIGN   shift, and go to state 134
    RIGHT_SHIFT_ASSIGN  shift, and go to state 135
    BITWISE_AND_ASSIGN  shift, and go to state 136
    BITWISE_OR_ASSIGN   shift, and go to state 137
    BITWISE_XOR_ASSIGN  shift, and go to state 138
    MULTIPLY_ASSIGN     shift, and go to state 139
    DIVIDE_ASSIGN       shift, and go to state 140
    MODULUS_ASSIGN      shift, and go to state 141

    $default  reduce using rule 39 (variable_declaration)

    assign_op  go to state 142


State 85

   49 struct_declaration: STRUCT • ID LEFT_BRACE data_struct_stmts RIGHT_BRACE

    ID  shift, and go to state 57


State 86

   50 union_declaration: UNION • ID LEFT_BRACE data_struct_stmts RIGHT_BRACE

    ID  shift, and go to state 60


State 87

   44 data_struct_stmts: declaration_stmt • SEMI

    SEMI  shift, and go to state 143


State 88

   45 data_struct_stmts: func_declaration • SEMI

    SEMI  shift, and go to state 144


State 89

   42 data_struct_stmts: data_struct_stmts • declaration_stmt SEMI
   43                  | data_struct_stmts • func_declaration SEMI
   49 struct_declaration: STRUCT ID LEFT_BRACE data_struct_stmts • RIGHT_BRACE

    STRUCT       shift, and go to state 85
    TYPEDEF      shift, and go to state 2
    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    ENUM         shift, and go to state 5
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNION        shift, and go to state 86
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    RIGHT_BRACE  shift, and go to state 145
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    declaration_stmt      go to state 146
    array_declaration     go to state 18
    func_declaration      go to state 147
    variable_declaration  go to state 20
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    prefixes              go to state 29
    prefix                go to state 30


State 90

   42 data_struct_stmts: data_struct_stmts • declaration_stmt SEMI
   43                  | data_struct_stmts • func_declaration SEMI
   57 typeDef_declaration: TYPEDEF STRUCT LEFT_BRACE data_struct_stmts • RIGHT_BRACE ID

    STRUCT       shift, and go to state 85
    TYPEDEF      shift, and go to state 2
    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    ENUM         shift, and go to state 5
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNION        shift, and go to state 86
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    RIGHT_BRACE  shift, and go to state 148
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    declaration_stmt      go to state 146
    array_declaration     go to state 18
    func_declaration      go to state 147
    variable_declaration  go to state 20
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    prefixes              go to state 29
    prefix                go to state 30


State 91

   48 enum_parameters: ID •

    $default  reduce using rule 48 (enum_parameters)


State 92

   47 enum_parameters: enum_parameters • COMMA ID
   53 typeDef_declaration: TYPEDEF ENUM LEFT_BRACE enum_parameters • RIGHT_BRACE ID

    RIGHT_BRACE  shift, and go to state 149
    COMMA        shift, and go to state 150


State 93

   42 data_struct_stmts: data_struct_stmts • declaration_stmt SEMI
   43                  | data_struct_stmts • func_declaration SEMI
   55 typeDef_declaration: TYPEDEF UNION LEFT_BRACE data_struct_stmts • RIGHT_BRACE ID

    STRUCT       shift, and go to state 85
    TYPEDEF      shift, and go to state 2
    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    ENUM         shift, and go to state 5
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNION        shift, and go to state 86
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    RIGHT_BRACE  shift, and go to state 151
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    declaration_stmt      go to state 146
    array_declaration     go to state 18
    func_declaration      go to state 147
    variable_declaration  go to state 20
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    prefixes              go to state 29
    prefix                go to state 30


State 94

   47 enum_parameters: enum_parameters • COMMA ID
   51 enum_declaration: ENUM ID LEFT_BRACE enum_parameters • RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 152
    COMMA        shift, and go to state 150


State 95

   42 data_struct_stmts: data_struct_stmts • declaration_stmt SEMI
   43                  | data_struct_stmts • func_declaration SEMI
   50 union_declaration: UNION ID LEFT_BRACE data_struct_stmts • RIGHT_BRACE

    STRUCT       shift, and go to state 85
    TYPEDEF      shift, and go to state 2
    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    ENUM         shift, and go to state 5
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNION        shift, and go to state 86
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    RIGHT_BRACE  shift, and go to state 153
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    declaration_stmt      go to state 146
    array_declaration     go to state 18
    func_declaration      go to state 147
    variable_declaration  go to state 20
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    prefixes              go to state 29
    prefix                go to state 30


State 96

   68 expr: expr • op term
   69     | expr • cond_op term
   70     | expr • bitwise_op term
   71     | expr • logical_op term
   80 factor: LPAREN expr • RPAREN

    PLUS                   shift, and go to state 102
    MINUS                  shift, and go to state 103
    RPAREN                 shift, and go to state 154
    BITWISE_AND            shift, and go to state 104
    BITWISE_OR             shift, and go to state 105
    BITWISE_NOT            shift, and go to state 106
    BITWISE_XOR            shift, and go to state 107
    LOGICAL_AND            shift, and go to state 108
    LOGICAL_OR             shift, and go to state 109
    EQUAL                  shift, and go to state 110
    NOT_EQUAL              shift, and go to state 111
    LESS_THAN              shift, and go to state 112
    GREATER_THAN           shift, and go to state 113
    LESS_THAN_OR_EQUAL     shift, and go to state 114
    GREATER_THAN_OR_EQUAL  shift, and go to state 115
    RIGHT_SHIFT            shift, and go to state 116
    LEFT_SHIFT             shift, and go to state 117

    op          go to state 118
    cond_op     go to state 119
    logical_op  go to state 120
    bitwise_op  go to state 121


State 97

  167 type_cast: LPAREN type • RPAREN

    RPAREN  shift, and go to state 155


State 98

   80 factor: LPAREN • expr RPAREN

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 96
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 99

   78 operand: LOGICAL_NOT factor •

    $default  reduce using rule 78 (operand)


State 100

   64 func_inst: ID LPAREN func_inst_parameters RPAREN •

    $default  reduce using rule 64 (func_inst)


State 101

   66 func_inst_parameters: func_inst_parameters COMMA • expr

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 156
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 102

   85 op: PLUS •

    $default  reduce using rule 85 (op)


State 103

   86 op: MINUS •

    $default  reduce using rule 86 (op)


State 104

  102 bitwise_op: BITWISE_AND •

    $default  reduce using rule 102 (bitwise_op)


State 105

  104 bitwise_op: BITWISE_OR •

    $default  reduce using rule 104 (bitwise_op)


State 106

  103 bitwise_op: BITWISE_NOT •

    $default  reduce using rule 103 (bitwise_op)


State 107

  105 bitwise_op: BITWISE_XOR •

    $default  reduce using rule 105 (bitwise_op)


State 108

  100 logical_op: LOGICAL_AND •

    $default  reduce using rule 100 (logical_op)


State 109

  101 logical_op: LOGICAL_OR •

    $default  reduce using rule 101 (logical_op)


State 110

   98 cond_op: EQUAL •

    $default  reduce using rule 98 (cond_op)


State 111

   99 cond_op: NOT_EQUAL •

    $default  reduce using rule 99 (cond_op)


State 112

   97 cond_op: LESS_THAN •

    $default  reduce using rule 97 (cond_op)


State 113

   94 cond_op: GREATER_THAN •

    $default  reduce using rule 94 (cond_op)


State 114

   95 cond_op: LESS_THAN_OR_EQUAL •

    $default  reduce using rule 95 (cond_op)


State 115

   96 cond_op: GREATER_THAN_OR_EQUAL •

    $default  reduce using rule 96 (cond_op)


State 116

   87 op: RIGHT_SHIFT •

    $default  reduce using rule 87 (op)


State 117

   88 op: LEFT_SHIFT •

    $default  reduce using rule 88 (op)


State 118

   68 expr: expr op • term

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    term       go to state 157
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 119

   69 expr: expr cond_op • term

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    term       go to state 158
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 120

   71 expr: expr logical_op • term

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    term       go to state 159
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 121

   70 expr: expr bitwise_op • term

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    term       go to state 160
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 122

   89 prio_op: TIMES •

    $default  reduce using rule 89 (prio_op)


State 123

   90 prio_op: OVER •

    $default  reduce using rule 90 (prio_op)


State 124

   91 prio_op: PERCENT •

    $default  reduce using rule 91 (prio_op)


State 125

   73 term: term prio_op • operand

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    operand    go to state 161
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 126

   76 operand: factor unary_op •

    $default  reduce using rule 76 (operand)


State 127

   75 operand: unary_op factor •

    $default  reduce using rule 75 (operand)


State 128

   77 operand: type_cast factor •

    $default  reduce using rule 77 (operand)


State 129

  106 assign_op: ASSIGN •

    $default  reduce using rule 106 (assign_op)


State 130

   33 func_declaration: prefixes type ID LPAREN • func_parameters_declaration RPAREN compound_stmt
   34                 | prefixes type ID LPAREN • func_parameters_declaration RPAREN SEMI

    VOID      shift, and go to state 162
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    VOID      [reduce using rule 155 (prefixes)]
    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    RPAREN    reduce using rule 35 (func_parameters_declaration)
    COMMA     reduce using rule 35 (func_parameters_declaration)
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    func_parameters_declaration  go to state 163
    variable_declaration         go to state 164
    prefixes                     go to state 165
    prefix                       go to state 30


State 131

   32 array_declaration: prefixes type ID LEFT_BRACKET • expr RIGHT_BRACKET

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 166
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 132

  107 assign_op: PLUS_ASSIGN •

    $default  reduce using rule 107 (assign_op)


State 133

  108 assign_op: MINUS_ASSIGN •

    $default  reduce using rule 108 (assign_op)


State 134

  110 assign_op: LEFT_SHIFT_ASSIGN •

    $default  reduce using rule 110 (assign_op)


State 135

  111 assign_op: RIGHT_SHIFT_ASSIGN •

    $default  reduce using rule 111 (assign_op)


State 136

  112 assign_op: BITWISE_AND_ASSIGN •

    $default  reduce using rule 112 (assign_op)


State 137

  113 assign_op: BITWISE_OR_ASSIGN •

    $default  reduce using rule 113 (assign_op)


State 138

  114 assign_op: BITWISE_XOR_ASSIGN •

    $default  reduce using rule 114 (assign_op)


State 139

  115 assign_op: MULTIPLY_ASSIGN •

    $default  reduce using rule 115 (assign_op)


State 140

  116 assign_op: DIVIDE_ASSIGN •

    $default  reduce using rule 116 (assign_op)


State 141

  109 assign_op: MODULUS_ASSIGN •

    $default  reduce using rule 109 (assign_op)


State 142

   40 variable_declaration: prefixes type ID assign_op • expr

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 167
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 143

   44 data_struct_stmts: declaration_stmt SEMI •

    $default  reduce using rule 44 (data_struct_stmts)


State 144

   45 data_struct_stmts: func_declaration SEMI •

    $default  reduce using rule 45 (data_struct_stmts)


State 145

   49 struct_declaration: STRUCT ID LEFT_BRACE data_struct_stmts RIGHT_BRACE •

    $default  reduce using rule 49 (struct_declaration)


State 146

   42 data_struct_stmts: data_struct_stmts declaration_stmt • SEMI

    SEMI  shift, and go to state 168


State 147

   43 data_struct_stmts: data_struct_stmts func_declaration • SEMI

    SEMI  shift, and go to state 169


State 148

   57 typeDef_declaration: TYPEDEF STRUCT LEFT_BRACE data_struct_stmts RIGHT_BRACE • ID

    ID  shift, and go to state 170


State 149

   53 typeDef_declaration: TYPEDEF ENUM LEFT_BRACE enum_parameters RIGHT_BRACE • ID

    ID  shift, and go to state 171


State 150

   47 enum_parameters: enum_parameters COMMA • ID

    ID  shift, and go to state 172


State 151

   55 typeDef_declaration: TYPEDEF UNION LEFT_BRACE data_struct_stmts RIGHT_BRACE • ID

    ID  shift, and go to state 173


State 152

   51 enum_declaration: ENUM ID LEFT_BRACE enum_parameters RIGHT_BRACE •

    $default  reduce using rule 51 (enum_declaration)


State 153

   50 union_declaration: UNION ID LEFT_BRACE data_struct_stmts RIGHT_BRACE •

    $default  reduce using rule 50 (union_declaration)


State 154

   80 factor: LPAREN expr RPAREN •

    $default  reduce using rule 80 (factor)


State 155

  167 type_cast: LPAREN type RPAREN •

    $default  reduce using rule 167 (type_cast)


State 156

   66 func_inst_parameters: func_inst_parameters COMMA expr •
   68 expr: expr • op term
   69     | expr • cond_op term
   70     | expr • bitwise_op term
   71     | expr • logical_op term

    PLUS                   shift, and go to state 102
    MINUS                  shift, and go to state 103
    BITWISE_AND            shift, and go to state 104
    BITWISE_OR             shift, and go to state 105
    BITWISE_NOT            shift, and go to state 106
    BITWISE_XOR            shift, and go to state 107
    LOGICAL_AND            shift, and go to state 108
    LOGICAL_OR             shift, and go to state 109
    EQUAL                  shift, and go to state 110
    NOT_EQUAL              shift, and go to state 111
    LESS_THAN              shift, and go to state 112
    GREATER_THAN           shift, and go to state 113
    LESS_THAN_OR_EQUAL     shift, and go to state 114
    GREATER_THAN_OR_EQUAL  shift, and go to state 115
    RIGHT_SHIFT            shift, and go to state 116
    LEFT_SHIFT             shift, and go to state 117

    $default  reduce using rule 66 (func_inst_parameters)

    op          go to state 118
    cond_op     go to state 119
    logical_op  go to state 120
    bitwise_op  go to state 121


State 157

   68 expr: expr op term •
   73 term: term • prio_op operand

    TIMES    shift, and go to state 122
    OVER     shift, and go to state 123
    PERCENT  shift, and go to state 124

    $default  reduce using rule 68 (expr)

    prio_op  go to state 125


State 158

   69 expr: expr cond_op term •
   73 term: term • prio_op operand

    TIMES    shift, and go to state 122
    OVER     shift, and go to state 123
    PERCENT  shift, and go to state 124

    $default  reduce using rule 69 (expr)

    prio_op  go to state 125


State 159

   71 expr: expr logical_op term •
   73 term: term • prio_op operand

    TIMES    shift, and go to state 122
    OVER     shift, and go to state 123
    PERCENT  shift, and go to state 124

    $default  reduce using rule 71 (expr)

    prio_op  go to state 125


State 160

   70 expr: expr bitwise_op term •
   73 term: term • prio_op operand

    TIMES    shift, and go to state 122
    OVER     shift, and go to state 123
    PERCENT  shift, and go to state 124

    $default  reduce using rule 70 (expr)

    prio_op  go to state 125


State 161

   73 term: term prio_op operand •

    $default  reduce using rule 73 (term)


State 162

   38 func_parameters_declaration: VOID •

    $default  reduce using rule 38 (func_parameters_declaration)


State 163

   33 func_declaration: prefixes type ID LPAREN func_parameters_declaration • RPAREN compound_stmt
   34                 | prefixes type ID LPAREN func_parameters_declaration • RPAREN SEMI
   36 func_parameters_declaration: func_parameters_declaration • COMMA variable_declaration

    RPAREN  shift, and go to state 174
    COMMA   shift, and go to state 175


State 164

   37 func_parameters_declaration: variable_declaration •

    $default  reduce using rule 37 (func_parameters_declaration)


State 165

   39 variable_declaration: prefixes • type ID
   40                     | prefixes • type ID assign_op expr
  156 prefixes: prefixes • prefix

    INT       shift, and go to state 32
    FLOAT     shift, and go to state 33
    DOUBLE    shift, and go to state 34
    CHAR      shift, and go to state 35
    VOID      shift, and go to state 36
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    type    go to state 176
    prefix  go to state 54


State 166

   32 array_declaration: prefixes type ID LEFT_BRACKET expr • RIGHT_BRACKET
   68 expr: expr • op term
   69     | expr • cond_op term
   70     | expr • bitwise_op term
   71     | expr • logical_op term

    PLUS                   shift, and go to state 102
    MINUS                  shift, and go to state 103
    RIGHT_BRACKET          shift, and go to state 177
    BITWISE_AND            shift, and go to state 104
    BITWISE_OR             shift, and go to state 105
    BITWISE_NOT            shift, and go to state 106
    BITWISE_XOR            shift, and go to state 107
    LOGICAL_AND            shift, and go to state 108
    LOGICAL_OR             shift, and go to state 109
    EQUAL                  shift, and go to state 110
    NOT_EQUAL              shift, and go to state 111
    LESS_THAN              shift, and go to state 112
    GREATER_THAN           shift, and go to state 113
    LESS_THAN_OR_EQUAL     shift, and go to state 114
    GREATER_THAN_OR_EQUAL  shift, and go to state 115
    RIGHT_SHIFT            shift, and go to state 116
    LEFT_SHIFT             shift, and go to state 117

    op          go to state 118
    cond_op     go to state 119
    logical_op  go to state 120
    bitwise_op  go to state 121


State 167

   40 variable_declaration: prefixes type ID assign_op expr •
   68 expr: expr • op term
   69     | expr • cond_op term
   70     | expr • bitwise_op term
   71     | expr • logical_op term

    PLUS                   shift, and go to state 102
    MINUS                  shift, and go to state 103
    BITWISE_AND            shift, and go to state 104
    BITWISE_OR             shift, and go to state 105
    BITWISE_NOT            shift, and go to state 106
    BITWISE_XOR            shift, and go to state 107
    LOGICAL_AND            shift, and go to state 108
    LOGICAL_OR             shift, and go to state 109
    EQUAL                  shift, and go to state 110
    NOT_EQUAL              shift, and go to state 111
    LESS_THAN              shift, and go to state 112
    GREATER_THAN           shift, and go to state 113
    LESS_THAN_OR_EQUAL     shift, and go to state 114
    GREATER_THAN_OR_EQUAL  shift, and go to state 115
    RIGHT_SHIFT            shift, and go to state 116
    LEFT_SHIFT             shift, and go to state 117

    $default  reduce using rule 40 (variable_declaration)

    op          go to state 118
    cond_op     go to state 119
    logical_op  go to state 120
    bitwise_op  go to state 121


State 168

   42 data_struct_stmts: data_struct_stmts declaration_stmt SEMI •

    $default  reduce using rule 42 (data_struct_stmts)


State 169

   43 data_struct_stmts: data_struct_stmts func_declaration SEMI •

    $default  reduce using rule 43 (data_struct_stmts)


State 170

   57 typeDef_declaration: TYPEDEF STRUCT LEFT_BRACE data_struct_stmts RIGHT_BRACE ID •

    $default  reduce using rule 57 (typeDef_declaration)


State 171

   53 typeDef_declaration: TYPEDEF ENUM LEFT_BRACE enum_parameters RIGHT_BRACE ID •

    $default  reduce using rule 53 (typeDef_declaration)


State 172

   47 enum_parameters: enum_parameters COMMA ID •

    $default  reduce using rule 47 (enum_parameters)


State 173

   55 typeDef_declaration: TYPEDEF UNION LEFT_BRACE data_struct_stmts RIGHT_BRACE ID •

    $default  reduce using rule 55 (typeDef_declaration)


State 174

   33 func_declaration: prefixes type ID LPAREN func_parameters_declaration RPAREN • compound_stmt
   34                 | prefixes type ID LPAREN func_parameters_declaration RPAREN • SEMI

    LEFT_BRACE  shift, and go to state 178
    SEMI        shift, and go to state 179

    compound_stmt  go to state 180


State 175

   36 func_parameters_declaration: func_parameters_declaration COMMA • variable_declaration

    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    variable_declaration  go to state 181
    prefixes              go to state 165
    prefix                go to state 30


State 176

   39 variable_declaration: prefixes type • ID
   40                     | prefixes type • ID assign_op expr

    ID  shift, and go to state 182


State 177

   32 array_declaration: prefixes type ID LEFT_BRACKET expr RIGHT_BRACKET •

    $default  reduce using rule 32 (array_declaration)


State 178

  117 compound_stmt: LEFT_BRACE • stmts RIGHT_BRACE
  118              | LEFT_BRACE • RIGHT_BRACE

    IF           shift, and go to state 183
    DO           shift, and go to state 184
    WHILE        shift, and go to state 185
    FOR          shift, and go to state 186
    RETURN       shift, and go to state 187
    BREAK        shift, and go to state 188
    STRUCT       shift, and go to state 1
    TYPEDEF      shift, and go to state 2
    CONTINUE     shift, and go to state 189
    EXTERN       shift, and go to state 3
    GOTO         shift, and go to state 190
    LONG         shift, and go to state 4
    ENUM         shift, and go to state 5
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNION        shift, and go to state 10
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    ID           shift, and go to state 191
    RIGHT_BRACE  shift, and go to state 192
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    stmts                 go to state 193
    stmt                  go to state 194
    declaration_stmt      go to state 195
    assignment_stmt       go to state 196
    array_declaration     go to state 197
    variable_declaration  go to state 198
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 199
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 200
    if_stmt               go to state 201
    do_while_stmt         go to state 202
    while_stmt            go to state 203
    for_stmt              go to state 204
    label                 go to state 205
    goto_stmt             go to state 206
    return_stmt           go to state 207
    prefixes              go to state 208
    prefix                go to state 30


State 179

   34 func_declaration: prefixes type ID LPAREN func_parameters_declaration RPAREN SEMI •

    $default  reduce using rule 34 (func_declaration)


State 180

   33 func_declaration: prefixes type ID LPAREN func_parameters_declaration RPAREN compound_stmt •

    $default  reduce using rule 33 (func_declaration)


State 181

   36 func_parameters_declaration: func_parameters_declaration COMMA variable_declaration •

    $default  reduce using rule 36 (func_parameters_declaration)


State 182

   39 variable_declaration: prefixes type ID •
   40                     | prefixes type ID • assign_op expr

    ASSIGN              shift, and go to state 129
    PLUS_ASSIGN         shift, and go to state 132
    MINUS_ASSIGN        shift, and go to state 133
    LEFT_SHIFT_ASSIGN   shift, and go to state 134
    RIGHT_SHIFT_ASSIGN  shift, and go to state 135
    BITWISE_AND_ASSIGN  shift, and go to state 136
    BITWISE_OR_ASSIGN   shift, and go to state 137
    BITWISE_XOR_ASSIGN  shift, and go to state 138
    MULTIPLY_ASSIGN     shift, and go to state 139
    DIVIDE_ASSIGN       shift, and go to state 140
    MODULUS_ASSIGN      shift, and go to state 141

    $default  reduce using rule 39 (variable_declaration)

    assign_op  go to state 142


State 183

  119 if_stmt: IF • LPAREN condition RPAREN compound_stmt
  120        | IF • LPAREN condition RPAREN compound_stmt elseif_stmt
  121        | IF • LPAREN condition RPAREN compound_stmt else_stmt
  122        | IF • LPAREN condition RPAREN stmt
  123        | IF • LPAREN condition RPAREN stmt elseif_stmt
  124        | IF • LPAREN condition RPAREN stmt else_stmt
  125        | IF • LPAREN condition RPAREN SEMI

    LPAREN  shift, and go to state 209


State 184

  134 do_while_stmt: DO • compound_stmt WHILE LPAREN condition RPAREN
  135              | DO • stmt WHILE LPAREN LPAREN condition RPAREN

    IF          shift, and go to state 183
    DO          shift, and go to state 184
    WHILE       shift, and go to state 185
    FOR         shift, and go to state 186
    RETURN      shift, and go to state 187
    BREAK       shift, and go to state 188
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 189
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 190
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 191
    LEFT_BRACE  shift, and go to state 178
    INCREMENT   shift, and go to state 73
    DECREMENT   shift, and go to state 74
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    stmt                  go to state 210
    declaration_stmt      go to state 195
    assignment_stmt       go to state 196
    array_declaration     go to state 197
    variable_declaration  go to state 198
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 199
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 200
    compound_stmt         go to state 211
    if_stmt               go to state 201
    do_while_stmt         go to state 202
    while_stmt            go to state 203
    for_stmt              go to state 204
    label                 go to state 205
    goto_stmt             go to state 206
    return_stmt           go to state 207
    prefixes              go to state 208
    prefix                go to state 30


State 185

  136 while_stmt: WHILE • LPAREN condition RPAREN compound_stmt
  137           | WHILE • LPAREN condition RPAREN stmt
  138           | WHILE • LPAREN condition RPAREN SEMI

    LPAREN  shift, and go to state 212


State 186

  139 for_stmt: FOR • LPAREN condition SEMI condition SEMI condition RPAREN compound_stmt
  140         | FOR • LPAREN condition SEMI condition SEMI condition RPAREN stmt
  141         | FOR • LPAREN variable_declaration SEMI condition SEMI condition RPAREN compound_stmt
  142         | FOR • LPAREN variable_declaration SEMI condition SEMI condition RPAREN stmt

    LPAREN  shift, and go to state 213


State 187

  148 return_stmt: RETURN • expr

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 214
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 188

   20 stmt: BREAK • SEMI

    SEMI  shift, and go to state 215


State 189

   19 stmt: CONTINUE • SEMI

    SEMI  shift, and go to state 216


State 190

  147 goto_stmt: GOTO • ID SEMI

    ID  shift, and go to state 217


State 191

   27 assignment_stmt: ID • assign_op expr
   28                | ID • DOT ID assign_op expr
   30                | ID • unary_op
   64 func_inst: ID • LPAREN func_inst_parameters RPAREN
  146 label: ID • COLON

    ASSIGN              shift, and go to state 129
    LPAREN              shift, and go to state 46
    COLON               shift, and go to state 218
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    PLUS_ASSIGN         shift, and go to state 132
    MINUS_ASSIGN        shift, and go to state 133
    LEFT_SHIFT_ASSIGN   shift, and go to state 134
    RIGHT_SHIFT_ASSIGN  shift, and go to state 135
    BITWISE_AND_ASSIGN  shift, and go to state 136
    BITWISE_OR_ASSIGN   shift, and go to state 137
    BITWISE_XOR_ASSIGN  shift, and go to state 138
    MULTIPLY_ASSIGN     shift, and go to state 139
    DIVIDE_ASSIGN       shift, and go to state 140
    MODULUS_ASSIGN      shift, and go to state 141
    DOT                 shift, and go to state 219

    unary_op   go to state 220
    assign_op  go to state 221


State 192

  118 compound_stmt: LEFT_BRACE RIGHT_BRACE •

    $default  reduce using rule 118 (compound_stmt)


State 193

    7 stmts: stmts • stmt
  117 compound_stmt: LEFT_BRACE stmts • RIGHT_BRACE

    IF           shift, and go to state 183
    DO           shift, and go to state 184
    WHILE        shift, and go to state 185
    FOR          shift, and go to state 186
    RETURN       shift, and go to state 187
    BREAK        shift, and go to state 188
    STRUCT       shift, and go to state 1
    TYPEDEF      shift, and go to state 2
    CONTINUE     shift, and go to state 189
    EXTERN       shift, and go to state 3
    GOTO         shift, and go to state 190
    LONG         shift, and go to state 4
    ENUM         shift, and go to state 5
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNION        shift, and go to state 10
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    ID           shift, and go to state 191
    RIGHT_BRACE  shift, and go to state 222
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    stmt                  go to state 223
    declaration_stmt      go to state 195
    assignment_stmt       go to state 196
    array_declaration     go to state 197
    variable_declaration  go to state 198
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 199
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 200
    if_stmt               go to state 201
    do_while_stmt         go to state 202
    while_stmt            go to state 203
    for_stmt              go to state 204
    label                 go to state 205
    goto_stmt             go to state 206
    return_stmt           go to state 207
    prefixes              go to state 208
    prefix                go to state 30


State 194

    8 stmts: stmt •

    $default  reduce using rule 8 (stmts)


State 195

   16 stmt: declaration_stmt • SEMI

    SEMI  shift, and go to state 224


State 196

   17 stmt: assignment_stmt • SEMI

    SEMI  shift, and go to state 225


State 197

   22 declaration_stmt: array_declaration •
   31 assignment_stmt: array_declaration • assign_op LEFT_BRACE expr RIGHT_BRACE

    ASSIGN              shift, and go to state 129
    PLUS_ASSIGN         shift, and go to state 132
    MINUS_ASSIGN        shift, and go to state 133
    LEFT_SHIFT_ASSIGN   shift, and go to state 134
    RIGHT_SHIFT_ASSIGN  shift, and go to state 135
    BITWISE_AND_ASSIGN  shift, and go to state 136
    BITWISE_OR_ASSIGN   shift, and go to state 137
    BITWISE_XOR_ASSIGN  shift, and go to state 138
    MULTIPLY_ASSIGN     shift, and go to state 139
    DIVIDE_ASSIGN       shift, and go to state 140
    MODULUS_ASSIGN      shift, and go to state 141

    $default  reduce using rule 22 (declaration_stmt)

    assign_op  go to state 226


State 198

   21 declaration_stmt: variable_declaration •
  143 for_stmt: variable_declaration •

    SEMI      reduce using rule 21 (declaration_stmt)
    $default  reduce using rule 143 (for_stmt)


State 199

   18 stmt: instantiation_stmt • SEMI

    SEMI  shift, and go to state 227


State 200

   29 assignment_stmt: unary_op • ID

    ID  shift, and go to state 228


State 201

   11 stmt: if_stmt •

    $default  reduce using rule 11 (stmt)


State 202

   14 stmt: do_while_stmt • SEMI

    SEMI  shift, and go to state 229


State 203

   13 stmt: while_stmt •

    $default  reduce using rule 13 (stmt)


State 204

   12 stmt: for_stmt •

    $default  reduce using rule 12 (stmt)


State 205

   10 stmt: label •

    $default  reduce using rule 10 (stmt)


State 206

    9 stmt: goto_stmt •

    $default  reduce using rule 9 (stmt)


State 207

   15 stmt: return_stmt • SEMI

    SEMI  shift, and go to state 230


State 208

   32 array_declaration: prefixes • type ID LEFT_BRACKET expr RIGHT_BRACKET
   39 variable_declaration: prefixes • type ID
   40                     | prefixes • type ID assign_op expr
  156 prefixes: prefixes • prefix

    INT       shift, and go to state 32
    FLOAT     shift, and go to state 33
    DOUBLE    shift, and go to state 34
    CHAR      shift, and go to state 35
    VOID      shift, and go to state 36
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    type    go to state 231
    prefix  go to state 54


State 209

  119 if_stmt: IF LPAREN • condition RPAREN compound_stmt
  120        | IF LPAREN • condition RPAREN compound_stmt elseif_stmt
  121        | IF LPAREN • condition RPAREN compound_stmt else_stmt
  122        | IF LPAREN • condition RPAREN stmt
  123        | IF LPAREN • condition RPAREN stmt elseif_stmt
  124        | IF LPAREN • condition RPAREN stmt else_stmt
  125        | IF LPAREN • condition RPAREN SEMI

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 232
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    assignment_stmt    go to state 233
    array_declaration  go to state 234
    func_inst          go to state 76
    expr               go to state 235
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 236
    condition          go to state 237
    prefixes           go to state 238
    prefix             go to state 30
    type_cast          go to state 83


State 210

  135 do_while_stmt: DO stmt • WHILE LPAREN LPAREN condition RPAREN

    WHILE  shift, and go to state 239


State 211

  134 do_while_stmt: DO compound_stmt • WHILE LPAREN condition RPAREN

    WHILE  shift, and go to state 240


State 212

  136 while_stmt: WHILE LPAREN • condition RPAREN compound_stmt
  137           | WHILE LPAREN • condition RPAREN stmt
  138           | WHILE LPAREN • condition RPAREN SEMI

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 232
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    assignment_stmt    go to state 233
    array_declaration  go to state 234
    func_inst          go to state 76
    expr               go to state 235
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 236
    condition          go to state 241
    prefixes           go to state 238
    prefix             go to state 30
    type_cast          go to state 83


State 213

  139 for_stmt: FOR LPAREN • condition SEMI condition SEMI condition RPAREN compound_stmt
  140         | FOR LPAREN • condition SEMI condition SEMI condition RPAREN stmt
  141         | FOR LPAREN • variable_declaration SEMI condition SEMI condition RPAREN compound_stmt
  142         | FOR LPAREN • variable_declaration SEMI condition SEMI condition RPAREN stmt

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 232
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    assignment_stmt       go to state 233
    array_declaration     go to state 234
    variable_declaration  go to state 242
    func_inst             go to state 76
    expr                  go to state 235
    term                  go to state 79
    operand               go to state 80
    factor                go to state 81
    unary_op              go to state 236
    condition             go to state 243
    prefixes              go to state 208
    prefix                go to state 30
    type_cast             go to state 83


State 214

   68 expr: expr • op term
   69     | expr • cond_op term
   70     | expr • bitwise_op term
   71     | expr • logical_op term
  148 return_stmt: RETURN expr •

    PLUS                   shift, and go to state 102
    MINUS                  shift, and go to state 103
    BITWISE_AND            shift, and go to state 104
    BITWISE_OR             shift, and go to state 105
    BITWISE_NOT            shift, and go to state 106
    BITWISE_XOR            shift, and go to state 107
    LOGICAL_AND            shift, and go to state 108
    LOGICAL_OR             shift, and go to state 109
    EQUAL                  shift, and go to state 110
    NOT_EQUAL              shift, and go to state 111
    LESS_THAN              shift, and go to state 112
    GREATER_THAN           shift, and go to state 113
    LESS_THAN_OR_EQUAL     shift, and go to state 114
    GREATER_THAN_OR_EQUAL  shift, and go to state 115
    RIGHT_SHIFT            shift, and go to state 116
    LEFT_SHIFT             shift, and go to state 117

    $default  reduce using rule 148 (return_stmt)

    op          go to state 118
    cond_op     go to state 119
    logical_op  go to state 120
    bitwise_op  go to state 121


State 215

   20 stmt: BREAK SEMI •

    $default  reduce using rule 20 (stmt)


State 216

   19 stmt: CONTINUE SEMI •

    $default  reduce using rule 19 (stmt)


State 217

  147 goto_stmt: GOTO ID • SEMI

    SEMI  shift, and go to state 244


State 218

  146 label: ID COLON •

    $default  reduce using rule 146 (label)


State 219

   28 assignment_stmt: ID DOT • ID assign_op expr

    ID  shift, and go to state 245


State 220

   30 assignment_stmt: ID unary_op •

    $default  reduce using rule 30 (assignment_stmt)


State 221

   27 assignment_stmt: ID assign_op • expr

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 246
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 222

  117 compound_stmt: LEFT_BRACE stmts RIGHT_BRACE •

    $default  reduce using rule 117 (compound_stmt)


State 223

    7 stmts: stmts stmt •

    $default  reduce using rule 7 (stmts)


State 224

   16 stmt: declaration_stmt SEMI •

    $default  reduce using rule 16 (stmt)


State 225

   17 stmt: assignment_stmt SEMI •

    $default  reduce using rule 17 (stmt)


State 226

   31 assignment_stmt: array_declaration assign_op • LEFT_BRACE expr RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 247


State 227

   18 stmt: instantiation_stmt SEMI •

    $default  reduce using rule 18 (stmt)


State 228

   29 assignment_stmt: unary_op ID •

    $default  reduce using rule 29 (assignment_stmt)


State 229

   14 stmt: do_while_stmt SEMI •

    $default  reduce using rule 14 (stmt)


State 230

   15 stmt: return_stmt SEMI •

    $default  reduce using rule 15 (stmt)


State 231

   32 array_declaration: prefixes type • ID LEFT_BRACKET expr RIGHT_BRACKET
   39 variable_declaration: prefixes type • ID
   40                     | prefixes type • ID assign_op expr

    ID  shift, and go to state 248


State 232

   27 assignment_stmt: ID • assign_op expr
   28                | ID • DOT ID assign_op expr
   30                | ID • unary_op
   64 func_inst: ID • LPAREN func_inst_parameters RPAREN
   82 factor: ID •

    ASSIGN              shift, and go to state 129
    LPAREN              shift, and go to state 46
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    PLUS_ASSIGN         shift, and go to state 132
    MINUS_ASSIGN        shift, and go to state 133
    LEFT_SHIFT_ASSIGN   shift, and go to state 134
    RIGHT_SHIFT_ASSIGN  shift, and go to state 135
    BITWISE_AND_ASSIGN  shift, and go to state 136
    BITWISE_OR_ASSIGN   shift, and go to state 137
    BITWISE_XOR_ASSIGN  shift, and go to state 138
    MULTIPLY_ASSIGN     shift, and go to state 139
    DIVIDE_ASSIGN       shift, and go to state 140
    MODULUS_ASSIGN      shift, and go to state 141
    DOT                 shift, and go to state 219

    INCREMENT  [reduce using rule 82 (factor)]
    DECREMENT  [reduce using rule 82 (factor)]
    $default   reduce using rule 82 (factor)

    unary_op   go to state 220
    assign_op  go to state 221


State 233

  145 condition: assignment_stmt •

    $default  reduce using rule 145 (condition)


State 234

   31 assignment_stmt: array_declaration • assign_op LEFT_BRACE expr RIGHT_BRACE

    ASSIGN              shift, and go to state 129
    PLUS_ASSIGN         shift, and go to state 132
    MINUS_ASSIGN        shift, and go to state 133
    LEFT_SHIFT_ASSIGN   shift, and go to state 134
    RIGHT_SHIFT_ASSIGN  shift, and go to state 135
    BITWISE_AND_ASSIGN  shift, and go to state 136
    BITWISE_OR_ASSIGN   shift, and go to state 137
    BITWISE_XOR_ASSIGN  shift, and go to state 138
    MULTIPLY_ASSIGN     shift, and go to state 139
    DIVIDE_ASSIGN       shift, and go to state 140
    MODULUS_ASSIGN      shift, and go to state 141

    assign_op  go to state 226


State 235

   68 expr: expr • op term
   69     | expr • cond_op term
   70     | expr • bitwise_op term
   71     | expr • logical_op term
  144 condition: expr •

    PLUS                   shift, and go to state 102
    MINUS                  shift, and go to state 103
    BITWISE_AND            shift, and go to state 104
    BITWISE_OR             shift, and go to state 105
    BITWISE_NOT            shift, and go to state 106
    BITWISE_XOR            shift, and go to state 107
    LOGICAL_AND            shift, and go to state 108
    LOGICAL_OR             shift, and go to state 109
    EQUAL                  shift, and go to state 110
    NOT_EQUAL              shift, and go to state 111
    LESS_THAN              shift, and go to state 112
    GREATER_THAN           shift, and go to state 113
    LESS_THAN_OR_EQUAL     shift, and go to state 114
    GREATER_THAN_OR_EQUAL  shift, and go to state 115
    RIGHT_SHIFT            shift, and go to state 116
    LEFT_SHIFT             shift, and go to state 117

    $default  reduce using rule 144 (condition)

    op          go to state 118
    cond_op     go to state 119
    logical_op  go to state 120
    bitwise_op  go to state 121


State 236

   29 assignment_stmt: unary_op • ID
   75 operand: unary_op • factor

    NUM     shift, and go to state 69
    ID      shift, and go to state 249
    FNUM    shift, and go to state 71
    LPAREN  shift, and go to state 98

    func_inst  go to state 76
    factor     go to state 127


State 237

  119 if_stmt: IF LPAREN condition • RPAREN compound_stmt
  120        | IF LPAREN condition • RPAREN compound_stmt elseif_stmt
  121        | IF LPAREN condition • RPAREN compound_stmt else_stmt
  122        | IF LPAREN condition • RPAREN stmt
  123        | IF LPAREN condition • RPAREN stmt elseif_stmt
  124        | IF LPAREN condition • RPAREN stmt else_stmt
  125        | IF LPAREN condition • RPAREN SEMI

    RPAREN  shift, and go to state 250


State 238

   32 array_declaration: prefixes • type ID LEFT_BRACKET expr RIGHT_BRACKET
  156 prefixes: prefixes • prefix

    INT       shift, and go to state 32
    FLOAT     shift, and go to state 33
    DOUBLE    shift, and go to state 34
    CHAR      shift, and go to state 35
    VOID      shift, and go to state 36
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    type    go to state 251
    prefix  go to state 54


State 239

  135 do_while_stmt: DO stmt WHILE • LPAREN LPAREN condition RPAREN

    LPAREN  shift, and go to state 252


State 240

  134 do_while_stmt: DO compound_stmt WHILE • LPAREN condition RPAREN

    LPAREN  shift, and go to state 253


State 241

  136 while_stmt: WHILE LPAREN condition • RPAREN compound_stmt
  137           | WHILE LPAREN condition • RPAREN stmt
  138           | WHILE LPAREN condition • RPAREN SEMI

    RPAREN  shift, and go to state 254


State 242

  141 for_stmt: FOR LPAREN variable_declaration • SEMI condition SEMI condition RPAREN compound_stmt
  142         | FOR LPAREN variable_declaration • SEMI condition SEMI condition RPAREN stmt

    SEMI  shift, and go to state 255


State 243

  139 for_stmt: FOR LPAREN condition • SEMI condition SEMI condition RPAREN compound_stmt
  140         | FOR LPAREN condition • SEMI condition SEMI condition RPAREN stmt

    SEMI  shift, and go to state 256


State 244

  147 goto_stmt: GOTO ID SEMI •

    $default  reduce using rule 147 (goto_stmt)


State 245

   28 assignment_stmt: ID DOT ID • assign_op expr

    ASSIGN              shift, and go to state 129
    PLUS_ASSIGN         shift, and go to state 132
    MINUS_ASSIGN        shift, and go to state 133
    LEFT_SHIFT_ASSIGN   shift, and go to state 134
    RIGHT_SHIFT_ASSIGN  shift, and go to state 135
    BITWISE_AND_ASSIGN  shift, and go to state 136
    BITWISE_OR_ASSIGN   shift, and go to state 137
    BITWISE_XOR_ASSIGN  shift, and go to state 138
    MULTIPLY_ASSIGN     shift, and go to state 139
    DIVIDE_ASSIGN       shift, and go to state 140
    MODULUS_ASSIGN      shift, and go to state 141

    assign_op  go to state 257


State 246

   27 assignment_stmt: ID assign_op expr •
   68 expr: expr • op term
   69     | expr • cond_op term
   70     | expr • bitwise_op term
   71     | expr • logical_op term

    PLUS                   shift, and go to state 102
    MINUS                  shift, and go to state 103
    BITWISE_AND            shift, and go to state 104
    BITWISE_OR             shift, and go to state 105
    BITWISE_NOT            shift, and go to state 106
    BITWISE_XOR            shift, and go to state 107
    LOGICAL_AND            shift, and go to state 108
    LOGICAL_OR             shift, and go to state 109
    EQUAL                  shift, and go to state 110
    NOT_EQUAL              shift, and go to state 111
    LESS_THAN              shift, and go to state 112
    GREATER_THAN           shift, and go to state 113
    LESS_THAN_OR_EQUAL     shift, and go to state 114
    GREATER_THAN_OR_EQUAL  shift, and go to state 115
    RIGHT_SHIFT            shift, and go to state 116
    LEFT_SHIFT             shift, and go to state 117

    $default  reduce using rule 27 (assignment_stmt)

    op          go to state 118
    cond_op     go to state 119
    logical_op  go to state 120
    bitwise_op  go to state 121


State 247

   31 assignment_stmt: array_declaration assign_op LEFT_BRACE • expr RIGHT_BRACE

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 258
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 248

   32 array_declaration: prefixes type ID • LEFT_BRACKET expr RIGHT_BRACKET
   39 variable_declaration: prefixes type ID •
   40                     | prefixes type ID • assign_op expr

    ASSIGN              shift, and go to state 129
    LEFT_BRACKET        shift, and go to state 131
    PLUS_ASSIGN         shift, and go to state 132
    MINUS_ASSIGN        shift, and go to state 133
    LEFT_SHIFT_ASSIGN   shift, and go to state 134
    RIGHT_SHIFT_ASSIGN  shift, and go to state 135
    BITWISE_AND_ASSIGN  shift, and go to state 136
    BITWISE_OR_ASSIGN   shift, and go to state 137
    BITWISE_XOR_ASSIGN  shift, and go to state 138
    MULTIPLY_ASSIGN     shift, and go to state 139
    DIVIDE_ASSIGN       shift, and go to state 140
    MODULUS_ASSIGN      shift, and go to state 141

    $default  reduce using rule 39 (variable_declaration)

    assign_op  go to state 142


State 249

   29 assignment_stmt: unary_op ID •
   64 func_inst: ID • LPAREN func_inst_parameters RPAREN
   82 factor: ID •

    LPAREN  shift, and go to state 46

    RPAREN    reduce using rule 29 (assignment_stmt)
    RPAREN    [reduce using rule 82 (factor)]
    SEMI      reduce using rule 29 (assignment_stmt)
    SEMI      [reduce using rule 82 (factor)]
    $default  reduce using rule 82 (factor)


State 250

  119 if_stmt: IF LPAREN condition RPAREN • compound_stmt
  120        | IF LPAREN condition RPAREN • compound_stmt elseif_stmt
  121        | IF LPAREN condition RPAREN • compound_stmt else_stmt
  122        | IF LPAREN condition RPAREN • stmt
  123        | IF LPAREN condition RPAREN • stmt elseif_stmt
  124        | IF LPAREN condition RPAREN • stmt else_stmt
  125        | IF LPAREN condition RPAREN • SEMI

    IF          shift, and go to state 183
    DO          shift, and go to state 184
    WHILE       shift, and go to state 185
    FOR         shift, and go to state 186
    RETURN      shift, and go to state 187
    BREAK       shift, and go to state 188
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 189
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 190
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 191
    LEFT_BRACE  shift, and go to state 178
    SEMI        shift, and go to state 259
    INCREMENT   shift, and go to state 73
    DECREMENT   shift, and go to state 74
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    stmt                  go to state 260
    declaration_stmt      go to state 195
    assignment_stmt       go to state 196
    array_declaration     go to state 197
    variable_declaration  go to state 198
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 199
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 200
    compound_stmt         go to state 261
    if_stmt               go to state 201
    do_while_stmt         go to state 202
    while_stmt            go to state 203
    for_stmt              go to state 204
    label                 go to state 205
    goto_stmt             go to state 206
    return_stmt           go to state 207
    prefixes              go to state 208
    prefix                go to state 30


State 251

   32 array_declaration: prefixes type • ID LEFT_BRACKET expr RIGHT_BRACKET

    ID  shift, and go to state 262


State 252

  135 do_while_stmt: DO stmt WHILE LPAREN • LPAREN condition RPAREN

    LPAREN  shift, and go to state 263


State 253

  134 do_while_stmt: DO compound_stmt WHILE LPAREN • condition RPAREN

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 232
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    assignment_stmt    go to state 233
    array_declaration  go to state 234
    func_inst          go to state 76
    expr               go to state 235
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 236
    condition          go to state 264
    prefixes           go to state 238
    prefix             go to state 30
    type_cast          go to state 83


State 254

  136 while_stmt: WHILE LPAREN condition RPAREN • compound_stmt
  137           | WHILE LPAREN condition RPAREN • stmt
  138           | WHILE LPAREN condition RPAREN • SEMI

    IF          shift, and go to state 183
    DO          shift, and go to state 184
    WHILE       shift, and go to state 185
    FOR         shift, and go to state 186
    RETURN      shift, and go to state 187
    BREAK       shift, and go to state 188
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 189
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 190
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 191
    LEFT_BRACE  shift, and go to state 178
    SEMI        shift, and go to state 265
    INCREMENT   shift, and go to state 73
    DECREMENT   shift, and go to state 74
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    stmt                  go to state 266
    declaration_stmt      go to state 195
    assignment_stmt       go to state 196
    array_declaration     go to state 197
    variable_declaration  go to state 198
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 199
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 200
    compound_stmt         go to state 267
    if_stmt               go to state 201
    do_while_stmt         go to state 202
    while_stmt            go to state 203
    for_stmt              go to state 204
    label                 go to state 205
    goto_stmt             go to state 206
    return_stmt           go to state 207
    prefixes              go to state 208
    prefix                go to state 30


State 255

  141 for_stmt: FOR LPAREN variable_declaration SEMI • condition SEMI condition RPAREN compound_stmt
  142         | FOR LPAREN variable_declaration SEMI • condition SEMI condition RPAREN stmt

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 232
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    assignment_stmt    go to state 233
    array_declaration  go to state 234
    func_inst          go to state 76
    expr               go to state 235
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 236
    condition          go to state 268
    prefixes           go to state 238
    prefix             go to state 30
    type_cast          go to state 83


State 256

  139 for_stmt: FOR LPAREN condition SEMI • condition SEMI condition RPAREN compound_stmt
  140         | FOR LPAREN condition SEMI • condition SEMI condition RPAREN stmt

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 232
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    assignment_stmt    go to state 233
    array_declaration  go to state 234
    func_inst          go to state 76
    expr               go to state 235
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 236
    condition          go to state 269
    prefixes           go to state 238
    prefix             go to state 30
    type_cast          go to state 83


State 257

   28 assignment_stmt: ID DOT ID assign_op • expr

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 270
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 258

   31 assignment_stmt: array_declaration assign_op LEFT_BRACE expr • RIGHT_BRACE
   68 expr: expr • op term
   69     | expr • cond_op term
   70     | expr • bitwise_op term
   71     | expr • logical_op term

    PLUS                   shift, and go to state 102
    MINUS                  shift, and go to state 103
    RIGHT_BRACE            shift, and go to state 271
    BITWISE_AND            shift, and go to state 104
    BITWISE_OR             shift, and go to state 105
    BITWISE_NOT            shift, and go to state 106
    BITWISE_XOR            shift, and go to state 107
    LOGICAL_AND            shift, and go to state 108
    LOGICAL_OR             shift, and go to state 109
    EQUAL                  shift, and go to state 110
    NOT_EQUAL              shift, and go to state 111
    LESS_THAN              shift, and go to state 112
    GREATER_THAN           shift, and go to state 113
    LESS_THAN_OR_EQUAL     shift, and go to state 114
    GREATER_THAN_OR_EQUAL  shift, and go to state 115
    RIGHT_SHIFT            shift, and go to state 116
    LEFT_SHIFT             shift, and go to state 117

    op          go to state 118
    cond_op     go to state 119
    logical_op  go to state 120
    bitwise_op  go to state 121


State 259

  125 if_stmt: IF LPAREN condition RPAREN SEMI •

    $default  reduce using rule 125 (if_stmt)


State 260

  122 if_stmt: IF LPAREN condition RPAREN stmt •
  123        | IF LPAREN condition RPAREN stmt • elseif_stmt
  124        | IF LPAREN condition RPAREN stmt • else_stmt

    ELSEIF  shift, and go to state 272
    ELSE    shift, and go to state 273

    ELSEIF    [reduce using rule 122 (if_stmt)]
    ELSE      [reduce using rule 122 (if_stmt)]
    $default  reduce using rule 122 (if_stmt)

    elseif_stmt  go to state 274
    else_stmt    go to state 275


State 261

  119 if_stmt: IF LPAREN condition RPAREN compound_stmt •
  120        | IF LPAREN condition RPAREN compound_stmt • elseif_stmt
  121        | IF LPAREN condition RPAREN compound_stmt • else_stmt

    ELSEIF  shift, and go to state 272
    ELSE    shift, and go to state 273

    ELSEIF    [reduce using rule 119 (if_stmt)]
    ELSE      [reduce using rule 119 (if_stmt)]
    $default  reduce using rule 119 (if_stmt)

    elseif_stmt  go to state 276
    else_stmt    go to state 277


State 262

   32 array_declaration: prefixes type ID • LEFT_BRACKET expr RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 131


State 263

  135 do_while_stmt: DO stmt WHILE LPAREN LPAREN • condition RPAREN

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 232
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    assignment_stmt    go to state 233
    array_declaration  go to state 234
    func_inst          go to state 76
    expr               go to state 235
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 236
    condition          go to state 278
    prefixes           go to state 238
    prefix             go to state 30
    type_cast          go to state 83


State 264

  134 do_while_stmt: DO compound_stmt WHILE LPAREN condition • RPAREN

    RPAREN  shift, and go to state 279


State 265

  138 while_stmt: WHILE LPAREN condition RPAREN SEMI •

    $default  reduce using rule 138 (while_stmt)


State 266

  137 while_stmt: WHILE LPAREN condition RPAREN stmt •

    $default  reduce using rule 137 (while_stmt)


State 267

  136 while_stmt: WHILE LPAREN condition RPAREN compound_stmt •

    $default  reduce using rule 136 (while_stmt)


State 268

  141 for_stmt: FOR LPAREN variable_declaration SEMI condition • SEMI condition RPAREN compound_stmt
  142         | FOR LPAREN variable_declaration SEMI condition • SEMI condition RPAREN stmt

    SEMI  shift, and go to state 280


State 269

  139 for_stmt: FOR LPAREN condition SEMI condition • SEMI condition RPAREN compound_stmt
  140         | FOR LPAREN condition SEMI condition • SEMI condition RPAREN stmt

    SEMI  shift, and go to state 281


State 270

   28 assignment_stmt: ID DOT ID assign_op expr •
   68 expr: expr • op term
   69     | expr • cond_op term
   70     | expr • bitwise_op term
   71     | expr • logical_op term

    PLUS                   shift, and go to state 102
    MINUS                  shift, and go to state 103
    BITWISE_AND            shift, and go to state 104
    BITWISE_OR             shift, and go to state 105
    BITWISE_NOT            shift, and go to state 106
    BITWISE_XOR            shift, and go to state 107
    LOGICAL_AND            shift, and go to state 108
    LOGICAL_OR             shift, and go to state 109
    EQUAL                  shift, and go to state 110
    NOT_EQUAL              shift, and go to state 111
    LESS_THAN              shift, and go to state 112
    GREATER_THAN           shift, and go to state 113
    LESS_THAN_OR_EQUAL     shift, and go to state 114
    GREATER_THAN_OR_EQUAL  shift, and go to state 115
    RIGHT_SHIFT            shift, and go to state 116
    LEFT_SHIFT             shift, and go to state 117

    $default  reduce using rule 28 (assignment_stmt)

    op          go to state 118
    cond_op     go to state 119
    logical_op  go to state 120
    bitwise_op  go to state 121


State 271

   31 assignment_stmt: array_declaration assign_op LEFT_BRACE expr RIGHT_BRACE •

    $default  reduce using rule 31 (assignment_stmt)


State 272

  128 elseif_stmt: ELSEIF • LPAREN condition RPAREN stmt
  129            | ELSEIF • LPAREN condition RPAREN stmt else_stmt
  130            | ELSEIF • LPAREN condition RPAREN compound_stmt
  131            | ELSEIF • LPAREN condition RPAREN compound_stmt else_stmt

    LPAREN  shift, and go to state 282


State 273

  132 else_stmt: ELSE • stmt
  133          | ELSE • compound_stmt

    IF          shift, and go to state 183
    DO          shift, and go to state 184
    WHILE       shift, and go to state 185
    FOR         shift, and go to state 186
    RETURN      shift, and go to state 187
    BREAK       shift, and go to state 188
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 189
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 190
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 191
    LEFT_BRACE  shift, and go to state 178
    INCREMENT   shift, and go to state 73
    DECREMENT   shift, and go to state 74
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    stmt                  go to state 283
    declaration_stmt      go to state 195
    assignment_stmt       go to state 196
    array_declaration     go to state 197
    variable_declaration  go to state 198
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 199
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 200
    compound_stmt         go to state 284
    if_stmt               go to state 201
    do_while_stmt         go to state 202
    while_stmt            go to state 203
    for_stmt              go to state 204
    label                 go to state 205
    goto_stmt             go to state 206
    return_stmt           go to state 207
    prefixes              go to state 208
    prefix                go to state 30


State 274

  123 if_stmt: IF LPAREN condition RPAREN stmt elseif_stmt •
  126 elseif_stmt: elseif_stmt • ELSEIF LPAREN condition RPAREN stmt
  127            | elseif_stmt • ELSEIF LPAREN condition RPAREN compound_stmt

    ELSEIF  shift, and go to state 285

    ELSEIF    [reduce using rule 123 (if_stmt)]
    $default  reduce using rule 123 (if_stmt)


State 275

  124 if_stmt: IF LPAREN condition RPAREN stmt else_stmt •

    $default  reduce using rule 124 (if_stmt)


State 276

  120 if_stmt: IF LPAREN condition RPAREN compound_stmt elseif_stmt •
  126 elseif_stmt: elseif_stmt • ELSEIF LPAREN condition RPAREN stmt
  127            | elseif_stmt • ELSEIF LPAREN condition RPAREN compound_stmt

    ELSEIF  shift, and go to state 285

    ELSEIF    [reduce using rule 120 (if_stmt)]
    $default  reduce using rule 120 (if_stmt)


State 277

  121 if_stmt: IF LPAREN condition RPAREN compound_stmt else_stmt •

    $default  reduce using rule 121 (if_stmt)


State 278

  135 do_while_stmt: DO stmt WHILE LPAREN LPAREN condition • RPAREN

    RPAREN  shift, and go to state 286


State 279

  134 do_while_stmt: DO compound_stmt WHILE LPAREN condition RPAREN •

    $default  reduce using rule 134 (do_while_stmt)


State 280

  141 for_stmt: FOR LPAREN variable_declaration SEMI condition SEMI • condition RPAREN compound_stmt
  142         | FOR LPAREN variable_declaration SEMI condition SEMI • condition RPAREN stmt

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 232
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    assignment_stmt    go to state 233
    array_declaration  go to state 234
    func_inst          go to state 76
    expr               go to state 235
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 236
    condition          go to state 287
    prefixes           go to state 238
    prefix             go to state 30
    type_cast          go to state 83


State 281

  139 for_stmt: FOR LPAREN condition SEMI condition SEMI • condition RPAREN compound_stmt
  140         | FOR LPAREN condition SEMI condition SEMI • condition RPAREN stmt

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 232
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    assignment_stmt    go to state 233
    array_declaration  go to state 234
    func_inst          go to state 76
    expr               go to state 235
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 236
    condition          go to state 288
    prefixes           go to state 238
    prefix             go to state 30
    type_cast          go to state 83


State 282

  128 elseif_stmt: ELSEIF LPAREN • condition RPAREN stmt
  129            | ELSEIF LPAREN • condition RPAREN stmt else_stmt
  130            | ELSEIF LPAREN • condition RPAREN compound_stmt
  131            | ELSEIF LPAREN • condition RPAREN compound_stmt else_stmt

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 232
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    assignment_stmt    go to state 233
    array_declaration  go to state 234
    func_inst          go to state 76
    expr               go to state 235
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 236
    condition          go to state 289
    prefixes           go to state 238
    prefix             go to state 30
    type_cast          go to state 83


State 283

  132 else_stmt: ELSE stmt •

    $default  reduce using rule 132 (else_stmt)


State 284

  133 else_stmt: ELSE compound_stmt •

    $default  reduce using rule 133 (else_stmt)


State 285

  126 elseif_stmt: elseif_stmt ELSEIF • LPAREN condition RPAREN stmt
  127            | elseif_stmt ELSEIF • LPAREN condition RPAREN compound_stmt

    LPAREN  shift, and go to state 290


State 286

  135 do_while_stmt: DO stmt WHILE LPAREN LPAREN condition RPAREN •

    $default  reduce using rule 135 (do_while_stmt)


State 287

  141 for_stmt: FOR LPAREN variable_declaration SEMI condition SEMI condition • RPAREN compound_stmt
  142         | FOR LPAREN variable_declaration SEMI condition SEMI condition • RPAREN stmt

    RPAREN  shift, and go to state 291


State 288

  139 for_stmt: FOR LPAREN condition SEMI condition SEMI condition • RPAREN compound_stmt
  140         | FOR LPAREN condition SEMI condition SEMI condition • RPAREN stmt

    RPAREN  shift, and go to state 292


State 289

  128 elseif_stmt: ELSEIF LPAREN condition • RPAREN stmt
  129            | ELSEIF LPAREN condition • RPAREN stmt else_stmt
  130            | ELSEIF LPAREN condition • RPAREN compound_stmt
  131            | ELSEIF LPAREN condition • RPAREN compound_stmt else_stmt

    RPAREN  shift, and go to state 293


State 290

  126 elseif_stmt: elseif_stmt ELSEIF LPAREN • condition RPAREN stmt
  127            | elseif_stmt ELSEIF LPAREN • condition RPAREN compound_stmt

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 232
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    assignment_stmt    go to state 233
    array_declaration  go to state 234
    func_inst          go to state 76
    expr               go to state 235
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 236
    condition          go to state 294
    prefixes           go to state 238
    prefix             go to state 30
    type_cast          go to state 83


State 291

  141 for_stmt: FOR LPAREN variable_declaration SEMI condition SEMI condition RPAREN • compound_stmt
  142         | FOR LPAREN variable_declaration SEMI condition SEMI condition RPAREN • stmt

    IF          shift, and go to state 183
    DO          shift, and go to state 184
    WHILE       shift, and go to state 185
    FOR         shift, and go to state 186
    RETURN      shift, and go to state 187
    BREAK       shift, and go to state 188
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 189
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 190
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 191
    LEFT_BRACE  shift, and go to state 178
    INCREMENT   shift, and go to state 73
    DECREMENT   shift, and go to state 74
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    stmt                  go to state 295
    declaration_stmt      go to state 195
    assignment_stmt       go to state 196
    array_declaration     go to state 197
    variable_declaration  go to state 198
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 199
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 200
    compound_stmt         go to state 296
    if_stmt               go to state 201
    do_while_stmt         go to state 202
    while_stmt            go to state 203
    for_stmt              go to state 204
    label                 go to state 205
    goto_stmt             go to state 206
    return_stmt           go to state 207
    prefixes              go to state 208
    prefix                go to state 30


State 292

  139 for_stmt: FOR LPAREN condition SEMI condition SEMI condition RPAREN • compound_stmt
  140         | FOR LPAREN condition SEMI condition SEMI condition RPAREN • stmt

    IF          shift, and go to state 183
    DO          shift, and go to state 184
    WHILE       shift, and go to state 185
    FOR         shift, and go to state 186
    RETURN      shift, and go to state 187
    BREAK       shift, and go to state 188
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 189
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 190
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 191
    LEFT_BRACE  shift, and go to state 178
    INCREMENT   shift, and go to state 73
    DECREMENT   shift, and go to state 74
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    stmt                  go to state 297
    declaration_stmt      go to state 195
    assignment_stmt       go to state 196
    array_declaration     go to state 197
    variable_declaration  go to state 198
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 199
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 200
    compound_stmt         go to state 298
    if_stmt               go to state 201
    do_while_stmt         go to state 202
    while_stmt            go to state 203
    for_stmt              go to state 204
    label                 go to state 205
    goto_stmt             go to state 206
    return_stmt           go to state 207
    prefixes              go to state 208
    prefix                go to state 30


State 293

  128 elseif_stmt: ELSEIF LPAREN condition RPAREN • stmt
  129            | ELSEIF LPAREN condition RPAREN • stmt else_stmt
  130            | ELSEIF LPAREN condition RPAREN • compound_stmt
  131            | ELSEIF LPAREN condition RPAREN • compound_stmt else_stmt

    IF          shift, and go to state 183
    DO          shift, and go to state 184
    WHILE       shift, and go to state 185
    FOR         shift, and go to state 186
    RETURN      shift, and go to state 187
    BREAK       shift, and go to state 188
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 189
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 190
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 191
    LEFT_BRACE  shift, and go to state 178
    INCREMENT   shift, and go to state 73
    DECREMENT   shift, and go to state 74
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    stmt                  go to state 299
    declaration_stmt      go to state 195
    assignment_stmt       go to state 196
    array_declaration     go to state 197
    variable_declaration  go to state 198
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 199
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 200
    compound_stmt         go to state 300
    if_stmt               go to state 201
    do_while_stmt         go to state 202
    while_stmt            go to state 203
    for_stmt              go to state 204
    label                 go to state 205
    goto_stmt             go to state 206
    return_stmt           go to state 207
    prefixes              go to state 208
    prefix                go to state 30


State 294

  126 elseif_stmt: elseif_stmt ELSEIF LPAREN condition • RPAREN stmt
  127            | elseif_stmt ELSEIF LPAREN condition • RPAREN compound_stmt

    RPAREN  shift, and go to state 301


State 295

  142 for_stmt: FOR LPAREN variable_declaration SEMI condition SEMI condition RPAREN stmt •

    $default  reduce using rule 142 (for_stmt)


State 296

  141 for_stmt: FOR LPAREN variable_declaration SEMI condition SEMI condition RPAREN compound_stmt •

    $default  reduce using rule 141 (for_stmt)


State 297

  140 for_stmt: FOR LPAREN condition SEMI condition SEMI condition RPAREN stmt •

    $default  reduce using rule 140 (for_stmt)


State 298

  139 for_stmt: FOR LPAREN condition SEMI condition SEMI condition RPAREN compound_stmt •

    $default  reduce using rule 139 (for_stmt)


State 299

  128 elseif_stmt: ELSEIF LPAREN condition RPAREN stmt •
  129            | ELSEIF LPAREN condition RPAREN stmt • else_stmt

    ELSE  shift, and go to state 273

    ELSE      [reduce using rule 128 (elseif_stmt)]
    $default  reduce using rule 128 (elseif_stmt)

    else_stmt  go to state 302


State 300

  130 elseif_stmt: ELSEIF LPAREN condition RPAREN compound_stmt •
  131            | ELSEIF LPAREN condition RPAREN compound_stmt • else_stmt

    ELSE  shift, and go to state 273

    ELSE      [reduce using rule 130 (elseif_stmt)]
    $default  reduce using rule 130 (elseif_stmt)

    else_stmt  go to state 303


State 301

  126 elseif_stmt: elseif_stmt ELSEIF LPAREN condition RPAREN • stmt
  127            | elseif_stmt ELSEIF LPAREN condition RPAREN • compound_stmt

    IF          shift, and go to state 183
    DO          shift, and go to state 184
    WHILE       shift, and go to state 185
    FOR         shift, and go to state 186
    RETURN      shift, and go to state 187
    BREAK       shift, and go to state 188
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 189
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 190
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 191
    LEFT_BRACE  shift, and go to state 178
    INCREMENT   shift, and go to state 73
    DECREMENT   shift, and go to state 74
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 155 (prefixes)]
    LONG      [reduce using rule 155 (prefixes)]
    REGISTER  [reduce using rule 155 (prefixes)]
    SHORT     [reduce using rule 155 (prefixes)]
    STATIC    [reduce using rule 155 (prefixes)]
    SIGNED    [reduce using rule 155 (prefixes)]
    UNSIGNED  [reduce using rule 155 (prefixes)]
    VOLATILE  [reduce using rule 155 (prefixes)]
    CONSTANT  [reduce using rule 155 (prefixes)]
    $default  reduce using rule 155 (prefixes)

    stmt                  go to state 304
    declaration_stmt      go to state 195
    assignment_stmt       go to state 196
    array_declaration     go to state 197
    variable_declaration  go to state 198
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 199
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 200
    compound_stmt         go to state 305
    if_stmt               go to state 201
    do_while_stmt         go to state 202
    while_stmt            go to state 203
    for_stmt              go to state 204
    label                 go to state 205
    goto_stmt             go to state 206
    return_stmt           go to state 207
    prefixes              go to state 208
    prefix                go to state 30


State 302

  129 elseif_stmt: ELSEIF LPAREN condition RPAREN stmt else_stmt •

    $default  reduce using rule 129 (elseif_stmt)


State 303

  131 elseif_stmt: ELSEIF LPAREN condition RPAREN compound_stmt else_stmt •

    $default  reduce using rule 131 (elseif_stmt)


State 304

  126 elseif_stmt: elseif_stmt ELSEIF LPAREN condition RPAREN stmt •

    $default  reduce using rule 126 (elseif_stmt)


State 305

  127 elseif_stmt: elseif_stmt ELSEIF LPAREN condition RPAREN compound_stmt •

    $default  reduce using rule 127 (elseif_stmt)
