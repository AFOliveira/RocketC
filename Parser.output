Nonterminals useless in grammar

    switch_case
    case_list
    case
    case_default
    size_of_stmt
    special_type


Terminals unused in grammar

    ERROR
    SWITCH
    CASE
    DEFAULT
    SIZEOF
    TERNARY
    CARDINAL
    ARROW
    DEFINE
    POINTER
    ADDRESS_OF
    OTHER
    STRINGliteral


Rules useless in grammar

  172 switch_case: SWITCH LPAREN ID RPAREN LEFT_BRACE case_list RIGHT_BRACE
  173            | SWITCH LPAREN ID RPAREN LEFT_BRACE case_list case_default RIGHT_BRACE
  174            | SWITCH LPAREN expr RPAREN LEFT_BRACE case_list RIGHT_BRACE
  175            | SWITCH LPAREN expr RPAREN LEFT_BRACE case_list case_default RIGHT_BRACE

  176 case_list: case_list case
  177          | case

  178 case: CASE NUM COLON stmts BREAK

  179 case_default: DEFAULT NUM COLON stmts BREAK

  180 size_of_stmt: SIZEOF LPAREN ID RPAREN
  181             | SIZEOF LPAREN type RPAREN
  182             | SIZEOF LPAREN special_type ID RPAREN

  183 special_type: STRUCT
  184             | TYPEDEF
  185             | ENUM
  186             | UNION


State 0 conflicts: 9 shift/reduce
State 15 conflicts: 9 shift/reduce
State 56 conflicts: 13 shift/reduce, 14 reduce/reduce
State 58 conflicts: 13 shift/reduce, 14 reduce/reduce
State 61 conflicts: 13 shift/reduce, 14 reduce/reduce
State 68 conflicts: 13 shift/reduce, 14 reduce/reduce
State 81 conflicts: 2 shift/reduce
State 90 conflicts: 9 shift/reduce
State 91 conflicts: 9 shift/reduce
State 94 conflicts: 9 shift/reduce
State 96 conflicts: 9 shift/reduce
State 131 conflicts: 10 shift/reduce
State 180 conflicts: 9 shift/reduce
State 185 conflicts: 9 shift/reduce
State 192 conflicts: 9 shift/reduce
State 201 conflicts: 9 shift/reduce
State 217 conflicts: 9 shift/reduce
State 220 conflicts: 9 shift/reduce
State 221 conflicts: 9 shift/reduce
State 240 conflicts: 2 shift/reduce
State 257 conflicts: 2 reduce/reduce
State 258 conflicts: 9 shift/reduce
State 261 conflicts: 9 shift/reduce
State 262 conflicts: 9 shift/reduce
State 263 conflicts: 9 shift/reduce
State 264 conflicts: 9 shift/reduce
State 268 conflicts: 2 shift/reduce
State 269 conflicts: 2 shift/reduce
State 271 conflicts: 9 shift/reduce
State 281 conflicts: 9 shift/reduce
State 282 conflicts: 1 shift/reduce
State 284 conflicts: 1 shift/reduce
State 288 conflicts: 9 shift/reduce
State 289 conflicts: 9 shift/reduce
State 290 conflicts: 9 shift/reduce
State 298 conflicts: 9 shift/reduce
State 299 conflicts: 9 shift/reduce
State 300 conflicts: 9 shift/reduce
State 301 conflicts: 9 shift/reduce
State 307 conflicts: 1 shift/reduce
State 308 conflicts: 1 shift/reduce
State 309 conflicts: 9 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: prog endfile
    2     | prog global_stmts
    3     | global_stmts

    4 global_stmts: func_declaration
    5             | declaration_stmt SEMI
    6             | instantiation_stmt SEMI

    7 stmts: stmts stmt
    8      | stmt

    9 stmt: goto_stmt
   10     | label
   11     | if_stmt
   12     | for_stmt
   13     | while_stmt
   14     | do_while_stmt SEMI
   15     | return_stmt SEMI
   16     | declaration_stmt SEMI
   17     | assignment_stmt SEMI
   18     | instantiation_stmt SEMI
   19     | CONTINUE SEMI
   20     | BREAK SEMI

   21 declaration_stmt: variable_declaration
   22                 | array_declaration
   23                 | struct_declaration
   24                 | enum_declaration
   25                 | union_declaration
   26                 | typeDef_declaration

   27 assignment_stmt: ID assign_op expr
   28                | ID DOT ID assign_op expr
   29                | unary_op ID
   30                | ID unary_op
   31                | array_declaration assign_op LEFT_BRACE expr RIGHT_BRACE

   32 array_declaration: prefixes type ID LEFT_BRACKET expr RIGHT_BRACKET

   33 func_declaration: prefixes type ID LPAREN func_parameters_declaration RPAREN compound_stmt
   34                 | prefixes type ID LPAREN func_parameters_declaration RPAREN SEMI

   35 func_parameters_declaration: ε
   36                            | func_parameters_declaration COMMA variable_declaration
   37                            | variable_declaration
   38                            | VOID

   39 variable_declaration: prefixes type ID
   40                     | prefixes type ID assign_op expr
   41                     | prefixes type TIMES ID
   42                     | prefixes type TIMES ID assign_op expr
   43                     | prefixes type TIMES TIMES ID
   44                     | prefixes type TIMES TIMES ID assign_op expr

   45 data_struct_stmts: ε
   46                  | data_struct_stmts declaration_stmt SEMI
   47                  | data_struct_stmts func_declaration SEMI
   48                  | declaration_stmt SEMI
   49                  | func_declaration SEMI

   50 enum_parameters: ε
   51                | enum_parameters COMMA ID
   52                | ID

   53 struct_declaration: STRUCT ID LEFT_BRACE data_struct_stmts RIGHT_BRACE

   54 union_declaration: UNION ID LEFT_BRACE data_struct_stmts RIGHT_BRACE

   55 enum_declaration: ENUM ID LEFT_BRACE enum_parameters RIGHT_BRACE

   56 typeDef_declaration: TYPEDEF enum_declaration ID
   57                    | TYPEDEF ENUM LEFT_BRACE enum_parameters RIGHT_BRACE ID
   58                    | TYPEDEF union_declaration ID
   59                    | TYPEDEF UNION LEFT_BRACE data_struct_stmts RIGHT_BRACE ID
   60                    | TYPEDEF struct_declaration ID
   61                    | TYPEDEF STRUCT LEFT_BRACE data_struct_stmts RIGHT_BRACE ID
   62                    | TYPEDEF type ID

   63 instantiation_stmt: struct_inst
   64                   | union_inst
   65                   | func_inst

   66 struct_inst: STRUCT ID ID

   67 union_inst: UNION ID ID

   68 func_inst: ID LPAREN func_inst_parameters RPAREN

   69 func_inst_parameters: ε
   70                     | func_inst_parameters COMMA expr
   71                     | expr

   72 expr: expr op term
   73     | expr cond_op term
   74     | expr bitwise_op term
   75     | expr logical_op term
   76     | term

   77 term: term prio_op operand
   78     | operand

   79 operand: unary_op factor
   80        | factor unary_op
   81        | type_cast factor
   82        | LOGICAL_NOT factor
   83        | factor

   84 factor: LPAREN expr RPAREN
   85       | NUM
   86       | ID
   87       | FNUM
   88       | func_inst

   89 op: PLUS
   90   | MINUS
   91   | RIGHT_SHIFT
   92   | LEFT_SHIFT

   93 prio_op: TIMES
   94        | OVER
   95        | PERCENT

   96 unary_op: INCREMENT
   97         | DECREMENT

   98 cond_op: GREATER_THAN
   99        | LESS_THAN_OR_EQUAL
  100        | GREATER_THAN_OR_EQUAL
  101        | LESS_THAN
  102        | EQUAL
  103        | NOT_EQUAL

  104 logical_op: LOGICAL_AND
  105           | LOGICAL_OR

  106 bitwise_op: BITWISE_AND
  107           | BITWISE_NOT
  108           | BITWISE_OR
  109           | BITWISE_XOR

  110 assign_op: ASSIGN
  111          | PLUS_ASSIGN
  112          | MINUS_ASSIGN
  113          | MODULUS_ASSIGN
  114          | LEFT_SHIFT_ASSIGN
  115          | RIGHT_SHIFT_ASSIGN
  116          | BITWISE_AND_ASSIGN
  117          | BITWISE_OR_ASSIGN
  118          | BITWISE_XOR_ASSIGN
  119          | MULTIPLY_ASSIGN
  120          | DIVIDE_ASSIGN

  121 compound_stmt: LEFT_BRACE stmts RIGHT_BRACE
  122              | LEFT_BRACE RIGHT_BRACE

  123 if_stmt: IF LPAREN condition RPAREN compound_stmt
  124        | IF LPAREN condition RPAREN compound_stmt elseif_stmt
  125        | IF LPAREN condition RPAREN compound_stmt else_stmt
  126        | IF LPAREN condition RPAREN stmt
  127        | IF LPAREN condition RPAREN stmt elseif_stmt
  128        | IF LPAREN condition RPAREN stmt else_stmt
  129        | IF LPAREN condition RPAREN SEMI

  130 elseif_stmt: elseif_stmt ELSEIF LPAREN condition RPAREN stmt
  131            | elseif_stmt ELSEIF LPAREN condition RPAREN compound_stmt
  132            | ELSEIF LPAREN condition RPAREN stmt
  133            | ELSEIF LPAREN condition RPAREN stmt else_stmt
  134            | ELSEIF LPAREN condition RPAREN compound_stmt
  135            | ELSEIF LPAREN condition RPAREN compound_stmt else_stmt

  136 else_stmt: ELSE stmt
  137          | ELSE compound_stmt

  138 do_while_stmt: DO compound_stmt WHILE LPAREN condition RPAREN
  139              | DO stmt WHILE LPAREN LPAREN condition RPAREN

  140 while_stmt: WHILE LPAREN condition RPAREN compound_stmt
  141           | WHILE LPAREN condition RPAREN stmt
  142           | WHILE LPAREN condition RPAREN SEMI

  143 for_stmt: FOR LPAREN condition SEMI condition SEMI condition RPAREN compound_stmt
  144         | FOR LPAREN condition SEMI condition SEMI condition RPAREN stmt
  145         | FOR LPAREN variable_declaration SEMI condition SEMI condition RPAREN compound_stmt
  146         | FOR LPAREN variable_declaration SEMI condition SEMI condition RPAREN stmt
  147         | variable_declaration

  148 condition: expr
  149          | assignment_stmt

  150 label: ID COLON

  151 goto_stmt: GOTO ID SEMI

  152 return_stmt: RETURN expr

  153 endfile: ENDFILE

  154 type: INT
  155     | FLOAT
  156     | DOUBLE
  157     | CHAR
  158     | VOID

  159 prefixes: ε
  160         | prefixes prefix
  161         | prefix

  162 prefix: EXTERN
  163       | LONG
  164       | SHORT
  165       | STATIC
  166       | SIGNED
  167       | UNSIGNED
  168       | VOLATILE
  169       | REGISTER
  170       | CONSTANT

  171 type_cast: LPAREN type RPAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ENDFILE (258) 153
    ERROR (259)
    IF (260) 123 124 125 126 127 128 129
    ELSEIF (261) 130 131 132 133 134 135
    ELSE (262) 136 137
    DO (263) 138 139
    WHILE (264) 138 139 140 141 142
    FOR (265) 143 144 145 146
    SWITCH (266)
    CASE (267)
    DEFAULT (268)
    RETURN (269) 152
    BREAK (270) 20
    INT (271) 154
    FLOAT (272) 155
    DOUBLE (273) 156
    CHAR (274) 157
    VOID (275) 38 158
    STRUCT (276) 53 61 66
    TYPEDEF (277) 56 57 58 59 60 61 62
    CONTINUE (278) 19
    EXTERN (279) 162
    GOTO (280) 151
    LONG (281) 163
    ENUM (282) 55 57
    REGISTER (283) 169
    SHORT (284) 164
    SIZEOF (285)
    STATIC (286) 165
    SIGNED (287) 166
    UNION (288) 54 59 67
    UNSIGNED (289) 167
    VOLATILE (290) 168
    NUM <intval> (291) 85
    ID <identifier> (292) 27 28 29 30 32 33 34 39 40 41 42 43 44 51 52 53 54 55 56 57 58 59 60 61 62 66 67 68 86 150 151
    FNUM <floatval> (293) 87
    ASSIGN (294) 110
    PLUS (295) 89
    MINUS (296) 90
    TIMES (297) 41 42 43 44 93
    OVER (298) 94
    PERCENT (299) 95
    LPAREN (300) 33 34 68 84 123 124 125 126 127 128 129 130 131 132 133 134 135 138 139 140 141 142 143 144 145 146 171
    RPAREN (301) 33 34 68 84 123 124 125 126 127 128 129 130 131 132 133 134 135 138 139 140 141 142 143 144 145 146 171
    LEFT_BRACE (302) 31 53 54 55 57 59 61 121 122
    RIGHT_BRACE (303) 31 53 54 55 57 59 61 121 122
    LEFT_BRACKET (304) 32
    RIGHT_BRACKET (305) 32
    TERNARY (306)
    SEMI (307) 5 6 14 15 16 17 18 19 20 34 46 47 48 49 129 142 143 144 145 146 151
    COLON (308) 150
    COMMA (309) 36 51 70
    INCREMENT (310) 96
    DECREMENT (311) 97
    BITWISE_AND (312) 106
    BITWISE_OR (313) 108
    BITWISE_NOT (314) 107
    BITWISE_XOR (315) 109
    LOGICAL_NOT (316) 82
    LOGICAL_AND (317) 104
    LOGICAL_OR (318) 105
    EQUAL (319) 102
    NOT_EQUAL (320) 103
    LESS_THAN (321) 101
    GREATER_THAN (322) 98
    LESS_THAN_OR_EQUAL (323) 99
    GREATER_THAN_OR_EQUAL (324) 100
    RIGHT_SHIFT (325) 91
    LEFT_SHIFT (326) 92
    PLUS_ASSIGN (327) 111
    MINUS_ASSIGN (328) 112
    LEFT_SHIFT_ASSIGN (329) 114
    RIGHT_SHIFT_ASSIGN (330) 115
    BITWISE_AND_ASSIGN (331) 116
    BITWISE_OR_ASSIGN (332) 117
    BITWISE_XOR_ASSIGN (333) 118
    MULTIPLY_ASSIGN (334) 119
    DIVIDE_ASSIGN (335) 120
    MODULUS_ASSIGN (336) 113
    CARDINAL (337)
    ARROW (338)
    DEFINE (339)
    CONSTANT (340) 170
    POINTER (341)
    ADDRESS_OF (342)
    OTHER (343)
    DOT (344) 28
    STRINGliteral (345)


Nonterminals, with rules where they appear

    $accept (91)
        on left: 0
    prog (92)
        on left: 1 2 3
        on right: 0 1 2
    global_stmts (93)
        on left: 4 5 6
        on right: 2 3
    stmts (94)
        on left: 7 8
        on right: 7 121
    stmt (95)
        on left: 9 10 11 12 13 14 15 16 17 18 19 20
        on right: 7 8 126 127 128 130 132 133 136 139 141 144 146
    declaration_stmt (96)
        on left: 21 22 23 24 25 26
        on right: 5 16 46 48
    assignment_stmt (97)
        on left: 27 28 29 30 31
        on right: 17 149
    array_declaration (98)
        on left: 32
        on right: 22 31
    func_declaration (99)
        on left: 33 34
        on right: 4 47 49
    func_parameters_declaration (100)
        on left: 35 36 37 38
        on right: 33 34 36
    variable_declaration (101)
        on left: 39 40 41 42 43 44
        on right: 21 36 37 145 146 147
    data_struct_stmts (102)
        on left: 45 46 47 48 49
        on right: 46 47 53 54 59 61
    enum_parameters (103)
        on left: 50 51 52
        on right: 51 55 57
    struct_declaration (104)
        on left: 53
        on right: 23 60
    union_declaration (105)
        on left: 54
        on right: 25 58
    enum_declaration (106)
        on left: 55
        on right: 24 56
    typeDef_declaration (107)
        on left: 56 57 58 59 60 61 62
        on right: 26
    instantiation_stmt (108)
        on left: 63 64 65
        on right: 6 18
    struct_inst (109)
        on left: 66
        on right: 63
    union_inst (110)
        on left: 67
        on right: 64
    func_inst (111)
        on left: 68
        on right: 65 88
    func_inst_parameters (112)
        on left: 69 70 71
        on right: 68 70
    expr (113)
        on left: 72 73 74 75 76
        on right: 27 28 31 32 40 42 44 70 71 72 73 74 75 84 148 152
    term (114)
        on left: 77 78
        on right: 72 73 74 75 76 77
    operand (115)
        on left: 79 80 81 82 83
        on right: 77 78
    factor (116)
        on left: 84 85 86 87 88
        on right: 79 80 81 82 83
    op (117)
        on left: 89 90 91 92
        on right: 72
    prio_op (118)
        on left: 93 94 95
        on right: 77
    unary_op (119)
        on left: 96 97
        on right: 29 30 79 80
    cond_op (120)
        on left: 98 99 100 101 102 103
        on right: 73
    logical_op (121)
        on left: 104 105
        on right: 75
    bitwise_op (122)
        on left: 106 107 108 109
        on right: 74
    assign_op (123)
        on left: 110 111 112 113 114 115 116 117 118 119 120
        on right: 27 28 31 40 42 44
    compound_stmt (124)
        on left: 121 122
        on right: 33 123 124 125 131 134 135 137 138 140 143 145
    if_stmt (125)
        on left: 123 124 125 126 127 128 129
        on right: 11
    elseif_stmt (126)
        on left: 130 131 132 133 134 135
        on right: 124 127 130 131
    else_stmt (127)
        on left: 136 137
        on right: 125 128 133 135
    do_while_stmt (128)
        on left: 138 139
        on right: 14
    while_stmt (129)
        on left: 140 141 142
        on right: 13
    for_stmt (130)
        on left: 143 144 145 146 147
        on right: 12
    condition (131)
        on left: 148 149
        on right: 123 124 125 126 127 128 129 130 131 132 133 134 135 138 139 140 141 142 143 144 145 146
    label (132)
        on left: 150
        on right: 10
    goto_stmt (133)
        on left: 151
        on right: 9
    return_stmt (134)
        on left: 152
        on right: 15
    endfile (135)
        on left: 153
        on right: 1
    type (136)
        on left: 154 155 156 157 158
        on right: 32 33 34 39 40 41 42 43 44 62 171
    prefixes (137)
        on left: 159 160 161
        on right: 32 33 34 39 40 41 42 43 44 160
    prefix (138)
        on left: 162 163 164 165 166 167 168 169 170
        on right: 160 161
    type_cast (139)
        on left: 171
        on right: 81


State 0

    0 $accept: • prog $end

    STRUCT    shift, and go to state 1
    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    ENUM      shift, and go to state 5
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNION     shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    ID        shift, and go to state 13
    CONSTANT  shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    prog                  go to state 15
    global_stmts          go to state 16
    declaration_stmt      go to state 17
    array_declaration     go to state 18
    func_declaration      go to state 19
    variable_declaration  go to state 20
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 25
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    prefixes              go to state 29
    prefix                go to state 30


State 1

   53 struct_declaration: STRUCT • ID LEFT_BRACE data_struct_stmts RIGHT_BRACE
   66 struct_inst: STRUCT • ID ID

    ID  shift, and go to state 31


State 2

   56 typeDef_declaration: TYPEDEF • enum_declaration ID
   57                    | TYPEDEF • ENUM LEFT_BRACE enum_parameters RIGHT_BRACE ID
   58                    | TYPEDEF • union_declaration ID
   59                    | TYPEDEF • UNION LEFT_BRACE data_struct_stmts RIGHT_BRACE ID
   60                    | TYPEDEF • struct_declaration ID
   61                    | TYPEDEF • STRUCT LEFT_BRACE data_struct_stmts RIGHT_BRACE ID
   62                    | TYPEDEF • type ID

    INT     shift, and go to state 32
    FLOAT   shift, and go to state 33
    DOUBLE  shift, and go to state 34
    CHAR    shift, and go to state 35
    VOID    shift, and go to state 36
    STRUCT  shift, and go to state 37
    ENUM    shift, and go to state 38
    UNION   shift, and go to state 39

    struct_declaration  go to state 40
    union_declaration   go to state 41
    enum_declaration    go to state 42
    type                go to state 43


State 3

  162 prefix: EXTERN •

    $default  reduce using rule 162 (prefix)


State 4

  163 prefix: LONG •

    $default  reduce using rule 163 (prefix)


State 5

   55 enum_declaration: ENUM • ID LEFT_BRACE enum_parameters RIGHT_BRACE

    ID  shift, and go to state 44


State 6

  169 prefix: REGISTER •

    $default  reduce using rule 169 (prefix)


State 7

  164 prefix: SHORT •

    $default  reduce using rule 164 (prefix)


State 8

  165 prefix: STATIC •

    $default  reduce using rule 165 (prefix)


State 9

  166 prefix: SIGNED •

    $default  reduce using rule 166 (prefix)


State 10

   54 union_declaration: UNION • ID LEFT_BRACE data_struct_stmts RIGHT_BRACE
   67 union_inst: UNION • ID ID

    ID  shift, and go to state 45


State 11

  167 prefix: UNSIGNED •

    $default  reduce using rule 167 (prefix)


State 12

  168 prefix: VOLATILE •

    $default  reduce using rule 168 (prefix)


State 13

   68 func_inst: ID • LPAREN func_inst_parameters RPAREN

    LPAREN  shift, and go to state 46


State 14

  170 prefix: CONSTANT •

    $default  reduce using rule 170 (prefix)


State 15

    0 $accept: prog • $end
    1 prog: prog • endfile
    2     | prog • global_stmts

    $end      shift, and go to state 47
    ENDFILE   shift, and go to state 48
    STRUCT    shift, and go to state 1
    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    ENUM      shift, and go to state 5
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNION     shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    ID        shift, and go to state 13
    CONSTANT  shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    global_stmts          go to state 49
    declaration_stmt      go to state 17
    array_declaration     go to state 18
    func_declaration      go to state 19
    variable_declaration  go to state 20
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 25
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    endfile               go to state 50
    prefixes              go to state 29
    prefix                go to state 30


State 16

    3 prog: global_stmts •

    $default  reduce using rule 3 (prog)


State 17

    5 global_stmts: declaration_stmt • SEMI

    SEMI  shift, and go to state 51


State 18

   22 declaration_stmt: array_declaration •

    $default  reduce using rule 22 (declaration_stmt)


State 19

    4 global_stmts: func_declaration •

    $default  reduce using rule 4 (global_stmts)


State 20

   21 declaration_stmt: variable_declaration •

    $default  reduce using rule 21 (declaration_stmt)


State 21

   23 declaration_stmt: struct_declaration •

    $default  reduce using rule 23 (declaration_stmt)


State 22

   25 declaration_stmt: union_declaration •

    $default  reduce using rule 25 (declaration_stmt)


State 23

   24 declaration_stmt: enum_declaration •

    $default  reduce using rule 24 (declaration_stmt)


State 24

   26 declaration_stmt: typeDef_declaration •

    $default  reduce using rule 26 (declaration_stmt)


State 25

    6 global_stmts: instantiation_stmt • SEMI

    SEMI  shift, and go to state 52


State 26

   63 instantiation_stmt: struct_inst •

    $default  reduce using rule 63 (instantiation_stmt)


State 27

   64 instantiation_stmt: union_inst •

    $default  reduce using rule 64 (instantiation_stmt)


State 28

   65 instantiation_stmt: func_inst •

    $default  reduce using rule 65 (instantiation_stmt)


State 29

   32 array_declaration: prefixes • type ID LEFT_BRACKET expr RIGHT_BRACKET
   33 func_declaration: prefixes • type ID LPAREN func_parameters_declaration RPAREN compound_stmt
   34                 | prefixes • type ID LPAREN func_parameters_declaration RPAREN SEMI
   39 variable_declaration: prefixes • type ID
   40                     | prefixes • type ID assign_op expr
   41                     | prefixes • type TIMES ID
   42                     | prefixes • type TIMES ID assign_op expr
   43                     | prefixes • type TIMES TIMES ID
   44                     | prefixes • type TIMES TIMES ID assign_op expr
  160 prefixes: prefixes • prefix

    INT       shift, and go to state 32
    FLOAT     shift, and go to state 33
    DOUBLE    shift, and go to state 34
    CHAR      shift, and go to state 35
    VOID      shift, and go to state 36
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    type    go to state 53
    prefix  go to state 54


State 30

  161 prefixes: prefix •

    $default  reduce using rule 161 (prefixes)


State 31

   53 struct_declaration: STRUCT ID • LEFT_BRACE data_struct_stmts RIGHT_BRACE
   66 struct_inst: STRUCT ID • ID

    ID          shift, and go to state 55
    LEFT_BRACE  shift, and go to state 56


State 32

  154 type: INT •

    $default  reduce using rule 154 (type)


State 33

  155 type: FLOAT •

    $default  reduce using rule 155 (type)


State 34

  156 type: DOUBLE •

    $default  reduce using rule 156 (type)


State 35

  157 type: CHAR •

    $default  reduce using rule 157 (type)


State 36

  158 type: VOID •

    $default  reduce using rule 158 (type)


State 37

   53 struct_declaration: STRUCT • ID LEFT_BRACE data_struct_stmts RIGHT_BRACE
   61 typeDef_declaration: TYPEDEF STRUCT • LEFT_BRACE data_struct_stmts RIGHT_BRACE ID

    ID          shift, and go to state 57
    LEFT_BRACE  shift, and go to state 58


State 38

   55 enum_declaration: ENUM • ID LEFT_BRACE enum_parameters RIGHT_BRACE
   57 typeDef_declaration: TYPEDEF ENUM • LEFT_BRACE enum_parameters RIGHT_BRACE ID

    ID          shift, and go to state 44
    LEFT_BRACE  shift, and go to state 59


State 39

   54 union_declaration: UNION • ID LEFT_BRACE data_struct_stmts RIGHT_BRACE
   59 typeDef_declaration: TYPEDEF UNION • LEFT_BRACE data_struct_stmts RIGHT_BRACE ID

    ID          shift, and go to state 60
    LEFT_BRACE  shift, and go to state 61


State 40

   60 typeDef_declaration: TYPEDEF struct_declaration • ID

    ID  shift, and go to state 62


State 41

   58 typeDef_declaration: TYPEDEF union_declaration • ID

    ID  shift, and go to state 63


State 42

   56 typeDef_declaration: TYPEDEF enum_declaration • ID

    ID  shift, and go to state 64


State 43

   62 typeDef_declaration: TYPEDEF type • ID

    ID  shift, and go to state 65


State 44

   55 enum_declaration: ENUM ID • LEFT_BRACE enum_parameters RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 66


State 45

   54 union_declaration: UNION ID • LEFT_BRACE data_struct_stmts RIGHT_BRACE
   67 union_inst: UNION ID • ID

    ID          shift, and go to state 67
    LEFT_BRACE  shift, and go to state 68


State 46

   68 func_inst: ID LPAREN • func_inst_parameters RPAREN

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    $default  reduce using rule 69 (func_inst_parameters)

    func_inst             go to state 76
    func_inst_parameters  go to state 77
    expr                  go to state 78
    term                  go to state 79
    operand               go to state 80
    factor                go to state 81
    unary_op              go to state 82
    type_cast             go to state 83


State 47

    0 $accept: prog $end •

    $default  accept


State 48

  153 endfile: ENDFILE •

    $default  reduce using rule 153 (endfile)


State 49

    2 prog: prog global_stmts •

    $default  reduce using rule 2 (prog)


State 50

    1 prog: prog endfile •

    $default  reduce using rule 1 (prog)


State 51

    5 global_stmts: declaration_stmt SEMI •

    $default  reduce using rule 5 (global_stmts)


State 52

    6 global_stmts: instantiation_stmt SEMI •

    $default  reduce using rule 6 (global_stmts)


State 53

   32 array_declaration: prefixes type • ID LEFT_BRACKET expr RIGHT_BRACKET
   33 func_declaration: prefixes type • ID LPAREN func_parameters_declaration RPAREN compound_stmt
   34                 | prefixes type • ID LPAREN func_parameters_declaration RPAREN SEMI
   39 variable_declaration: prefixes type • ID
   40                     | prefixes type • ID assign_op expr
   41                     | prefixes type • TIMES ID
   42                     | prefixes type • TIMES ID assign_op expr
   43                     | prefixes type • TIMES TIMES ID
   44                     | prefixes type • TIMES TIMES ID assign_op expr

    ID     shift, and go to state 84
    TIMES  shift, and go to state 85


State 54

  160 prefixes: prefixes prefix •

    $default  reduce using rule 160 (prefixes)


State 55

   66 struct_inst: STRUCT ID ID •

    $default  reduce using rule 66 (struct_inst)


State 56

   53 struct_declaration: STRUCT ID LEFT_BRACE • data_struct_stmts RIGHT_BRACE

    STRUCT    shift, and go to state 86
    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    ENUM      shift, and go to state 5
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNION     shift, and go to state 87
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    INT       reduce using rule 45 (data_struct_stmts)
    INT       [reduce using rule 159 (prefixes)]
    FLOAT     reduce using rule 45 (data_struct_stmts)
    FLOAT     [reduce using rule 159 (prefixes)]
    DOUBLE    reduce using rule 45 (data_struct_stmts)
    DOUBLE    [reduce using rule 159 (prefixes)]
    CHAR      reduce using rule 45 (data_struct_stmts)
    CHAR      [reduce using rule 159 (prefixes)]
    VOID      reduce using rule 45 (data_struct_stmts)
    VOID      [reduce using rule 159 (prefixes)]
    STRUCT    [reduce using rule 45 (data_struct_stmts)]
    TYPEDEF   [reduce using rule 45 (data_struct_stmts)]
    EXTERN    [reduce using rule 45 (data_struct_stmts)]
    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 45 (data_struct_stmts)]
    LONG      [reduce using rule 159 (prefixes)]
    ENUM      [reduce using rule 45 (data_struct_stmts)]
    REGISTER  [reduce using rule 45 (data_struct_stmts)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 45 (data_struct_stmts)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 45 (data_struct_stmts)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 45 (data_struct_stmts)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNION     [reduce using rule 45 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 45 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 45 (data_struct_stmts)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 45 (data_struct_stmts)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 45 (data_struct_stmts)

    declaration_stmt      go to state 88
    array_declaration     go to state 18
    func_declaration      go to state 89
    variable_declaration  go to state 20
    data_struct_stmts     go to state 90
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    prefixes              go to state 29
    prefix                go to state 30


State 57

   53 struct_declaration: STRUCT ID • LEFT_BRACE data_struct_stmts RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 56


State 58

   61 typeDef_declaration: TYPEDEF STRUCT LEFT_BRACE • data_struct_stmts RIGHT_BRACE ID

    STRUCT    shift, and go to state 86
    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    ENUM      shift, and go to state 5
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNION     shift, and go to state 87
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    INT       reduce using rule 45 (data_struct_stmts)
    INT       [reduce using rule 159 (prefixes)]
    FLOAT     reduce using rule 45 (data_struct_stmts)
    FLOAT     [reduce using rule 159 (prefixes)]
    DOUBLE    reduce using rule 45 (data_struct_stmts)
    DOUBLE    [reduce using rule 159 (prefixes)]
    CHAR      reduce using rule 45 (data_struct_stmts)
    CHAR      [reduce using rule 159 (prefixes)]
    VOID      reduce using rule 45 (data_struct_stmts)
    VOID      [reduce using rule 159 (prefixes)]
    STRUCT    [reduce using rule 45 (data_struct_stmts)]
    TYPEDEF   [reduce using rule 45 (data_struct_stmts)]
    EXTERN    [reduce using rule 45 (data_struct_stmts)]
    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 45 (data_struct_stmts)]
    LONG      [reduce using rule 159 (prefixes)]
    ENUM      [reduce using rule 45 (data_struct_stmts)]
    REGISTER  [reduce using rule 45 (data_struct_stmts)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 45 (data_struct_stmts)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 45 (data_struct_stmts)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 45 (data_struct_stmts)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNION     [reduce using rule 45 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 45 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 45 (data_struct_stmts)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 45 (data_struct_stmts)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 45 (data_struct_stmts)

    declaration_stmt      go to state 88
    array_declaration     go to state 18
    func_declaration      go to state 89
    variable_declaration  go to state 20
    data_struct_stmts     go to state 91
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    prefixes              go to state 29
    prefix                go to state 30


State 59

   57 typeDef_declaration: TYPEDEF ENUM LEFT_BRACE • enum_parameters RIGHT_BRACE ID

    ID  shift, and go to state 92

    $default  reduce using rule 50 (enum_parameters)

    enum_parameters  go to state 93


State 60

   54 union_declaration: UNION ID • LEFT_BRACE data_struct_stmts RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 68


State 61

   59 typeDef_declaration: TYPEDEF UNION LEFT_BRACE • data_struct_stmts RIGHT_BRACE ID

    STRUCT    shift, and go to state 86
    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    ENUM      shift, and go to state 5
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNION     shift, and go to state 87
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    INT       reduce using rule 45 (data_struct_stmts)
    INT       [reduce using rule 159 (prefixes)]
    FLOAT     reduce using rule 45 (data_struct_stmts)
    FLOAT     [reduce using rule 159 (prefixes)]
    DOUBLE    reduce using rule 45 (data_struct_stmts)
    DOUBLE    [reduce using rule 159 (prefixes)]
    CHAR      reduce using rule 45 (data_struct_stmts)
    CHAR      [reduce using rule 159 (prefixes)]
    VOID      reduce using rule 45 (data_struct_stmts)
    VOID      [reduce using rule 159 (prefixes)]
    STRUCT    [reduce using rule 45 (data_struct_stmts)]
    TYPEDEF   [reduce using rule 45 (data_struct_stmts)]
    EXTERN    [reduce using rule 45 (data_struct_stmts)]
    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 45 (data_struct_stmts)]
    LONG      [reduce using rule 159 (prefixes)]
    ENUM      [reduce using rule 45 (data_struct_stmts)]
    REGISTER  [reduce using rule 45 (data_struct_stmts)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 45 (data_struct_stmts)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 45 (data_struct_stmts)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 45 (data_struct_stmts)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNION     [reduce using rule 45 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 45 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 45 (data_struct_stmts)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 45 (data_struct_stmts)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 45 (data_struct_stmts)

    declaration_stmt      go to state 88
    array_declaration     go to state 18
    func_declaration      go to state 89
    variable_declaration  go to state 20
    data_struct_stmts     go to state 94
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    prefixes              go to state 29
    prefix                go to state 30


State 62

   60 typeDef_declaration: TYPEDEF struct_declaration ID •

    $default  reduce using rule 60 (typeDef_declaration)


State 63

   58 typeDef_declaration: TYPEDEF union_declaration ID •

    $default  reduce using rule 58 (typeDef_declaration)


State 64

   56 typeDef_declaration: TYPEDEF enum_declaration ID •

    $default  reduce using rule 56 (typeDef_declaration)


State 65

   62 typeDef_declaration: TYPEDEF type ID •

    $default  reduce using rule 62 (typeDef_declaration)


State 66

   55 enum_declaration: ENUM ID LEFT_BRACE • enum_parameters RIGHT_BRACE

    ID  shift, and go to state 92

    $default  reduce using rule 50 (enum_parameters)

    enum_parameters  go to state 95


State 67

   67 union_inst: UNION ID ID •

    $default  reduce using rule 67 (union_inst)


State 68

   54 union_declaration: UNION ID LEFT_BRACE • data_struct_stmts RIGHT_BRACE

    STRUCT    shift, and go to state 86
    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    ENUM      shift, and go to state 5
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNION     shift, and go to state 87
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    INT       reduce using rule 45 (data_struct_stmts)
    INT       [reduce using rule 159 (prefixes)]
    FLOAT     reduce using rule 45 (data_struct_stmts)
    FLOAT     [reduce using rule 159 (prefixes)]
    DOUBLE    reduce using rule 45 (data_struct_stmts)
    DOUBLE    [reduce using rule 159 (prefixes)]
    CHAR      reduce using rule 45 (data_struct_stmts)
    CHAR      [reduce using rule 159 (prefixes)]
    VOID      reduce using rule 45 (data_struct_stmts)
    VOID      [reduce using rule 159 (prefixes)]
    STRUCT    [reduce using rule 45 (data_struct_stmts)]
    TYPEDEF   [reduce using rule 45 (data_struct_stmts)]
    EXTERN    [reduce using rule 45 (data_struct_stmts)]
    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 45 (data_struct_stmts)]
    LONG      [reduce using rule 159 (prefixes)]
    ENUM      [reduce using rule 45 (data_struct_stmts)]
    REGISTER  [reduce using rule 45 (data_struct_stmts)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 45 (data_struct_stmts)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 45 (data_struct_stmts)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 45 (data_struct_stmts)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNION     [reduce using rule 45 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 45 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 45 (data_struct_stmts)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 45 (data_struct_stmts)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 45 (data_struct_stmts)

    declaration_stmt      go to state 88
    array_declaration     go to state 18
    func_declaration      go to state 89
    variable_declaration  go to state 20
    data_struct_stmts     go to state 96
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    prefixes              go to state 29
    prefix                go to state 30


State 69

   85 factor: NUM •

    $default  reduce using rule 85 (factor)


State 70

   68 func_inst: ID • LPAREN func_inst_parameters RPAREN
   86 factor: ID •

    LPAREN  shift, and go to state 46

    $default  reduce using rule 86 (factor)


State 71

   87 factor: FNUM •

    $default  reduce using rule 87 (factor)


State 72

   84 factor: LPAREN • expr RPAREN
  171 type_cast: LPAREN • type RPAREN

    INT          shift, and go to state 32
    FLOAT        shift, and go to state 33
    DOUBLE       shift, and go to state 34
    CHAR         shift, and go to state 35
    VOID         shift, and go to state 36
    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 97
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type       go to state 98
    type_cast  go to state 83


State 73

   96 unary_op: INCREMENT •

    $default  reduce using rule 96 (unary_op)


State 74

   97 unary_op: DECREMENT •

    $default  reduce using rule 97 (unary_op)


State 75

   82 operand: LOGICAL_NOT • factor

    NUM     shift, and go to state 69
    ID      shift, and go to state 70
    FNUM    shift, and go to state 71
    LPAREN  shift, and go to state 99

    func_inst  go to state 76
    factor     go to state 100


State 76

   88 factor: func_inst •

    $default  reduce using rule 88 (factor)


State 77

   68 func_inst: ID LPAREN func_inst_parameters • RPAREN
   70 func_inst_parameters: func_inst_parameters • COMMA expr

    RPAREN  shift, and go to state 101
    COMMA   shift, and go to state 102


State 78

   71 func_inst_parameters: expr •
   72 expr: expr • op term
   73     | expr • cond_op term
   74     | expr • bitwise_op term
   75     | expr • logical_op term

    PLUS                   shift, and go to state 103
    MINUS                  shift, and go to state 104
    BITWISE_AND            shift, and go to state 105
    BITWISE_OR             shift, and go to state 106
    BITWISE_NOT            shift, and go to state 107
    BITWISE_XOR            shift, and go to state 108
    LOGICAL_AND            shift, and go to state 109
    LOGICAL_OR             shift, and go to state 110
    EQUAL                  shift, and go to state 111
    NOT_EQUAL              shift, and go to state 112
    LESS_THAN              shift, and go to state 113
    GREATER_THAN           shift, and go to state 114
    LESS_THAN_OR_EQUAL     shift, and go to state 115
    GREATER_THAN_OR_EQUAL  shift, and go to state 116
    RIGHT_SHIFT            shift, and go to state 117
    LEFT_SHIFT             shift, and go to state 118

    $default  reduce using rule 71 (func_inst_parameters)

    op          go to state 119
    cond_op     go to state 120
    logical_op  go to state 121
    bitwise_op  go to state 122


State 79

   76 expr: term •
   77 term: term • prio_op operand

    TIMES    shift, and go to state 123
    OVER     shift, and go to state 124
    PERCENT  shift, and go to state 125

    $default  reduce using rule 76 (expr)

    prio_op  go to state 126


State 80

   78 term: operand •

    $default  reduce using rule 78 (term)


State 81

   80 operand: factor • unary_op
   83        | factor •

    INCREMENT  shift, and go to state 73
    DECREMENT  shift, and go to state 74

    INCREMENT  [reduce using rule 83 (operand)]
    DECREMENT  [reduce using rule 83 (operand)]
    $default   reduce using rule 83 (operand)

    unary_op  go to state 127


State 82

   79 operand: unary_op • factor

    NUM     shift, and go to state 69
    ID      shift, and go to state 70
    FNUM    shift, and go to state 71
    LPAREN  shift, and go to state 99

    func_inst  go to state 76
    factor     go to state 128


State 83

   81 operand: type_cast • factor

    NUM     shift, and go to state 69
    ID      shift, and go to state 70
    FNUM    shift, and go to state 71
    LPAREN  shift, and go to state 99

    func_inst  go to state 76
    factor     go to state 129


State 84

   32 array_declaration: prefixes type ID • LEFT_BRACKET expr RIGHT_BRACKET
   33 func_declaration: prefixes type ID • LPAREN func_parameters_declaration RPAREN compound_stmt
   34                 | prefixes type ID • LPAREN func_parameters_declaration RPAREN SEMI
   39 variable_declaration: prefixes type ID •
   40                     | prefixes type ID • assign_op expr

    ASSIGN              shift, and go to state 130
    LPAREN              shift, and go to state 131
    LEFT_BRACKET        shift, and go to state 132
    PLUS_ASSIGN         shift, and go to state 133
    MINUS_ASSIGN        shift, and go to state 134
    LEFT_SHIFT_ASSIGN   shift, and go to state 135
    RIGHT_SHIFT_ASSIGN  shift, and go to state 136
    BITWISE_AND_ASSIGN  shift, and go to state 137
    BITWISE_OR_ASSIGN   shift, and go to state 138
    BITWISE_XOR_ASSIGN  shift, and go to state 139
    MULTIPLY_ASSIGN     shift, and go to state 140
    DIVIDE_ASSIGN       shift, and go to state 141
    MODULUS_ASSIGN      shift, and go to state 142

    $default  reduce using rule 39 (variable_declaration)

    assign_op  go to state 143


State 85

   41 variable_declaration: prefixes type TIMES • ID
   42                     | prefixes type TIMES • ID assign_op expr
   43                     | prefixes type TIMES • TIMES ID
   44                     | prefixes type TIMES • TIMES ID assign_op expr

    ID     shift, and go to state 144
    TIMES  shift, and go to state 145


State 86

   53 struct_declaration: STRUCT • ID LEFT_BRACE data_struct_stmts RIGHT_BRACE

    ID  shift, and go to state 57


State 87

   54 union_declaration: UNION • ID LEFT_BRACE data_struct_stmts RIGHT_BRACE

    ID  shift, and go to state 60


State 88

   48 data_struct_stmts: declaration_stmt • SEMI

    SEMI  shift, and go to state 146


State 89

   49 data_struct_stmts: func_declaration • SEMI

    SEMI  shift, and go to state 147


State 90

   46 data_struct_stmts: data_struct_stmts • declaration_stmt SEMI
   47                  | data_struct_stmts • func_declaration SEMI
   53 struct_declaration: STRUCT ID LEFT_BRACE data_struct_stmts • RIGHT_BRACE

    STRUCT       shift, and go to state 86
    TYPEDEF      shift, and go to state 2
    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    ENUM         shift, and go to state 5
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNION        shift, and go to state 87
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    RIGHT_BRACE  shift, and go to state 148
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    declaration_stmt      go to state 149
    array_declaration     go to state 18
    func_declaration      go to state 150
    variable_declaration  go to state 20
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    prefixes              go to state 29
    prefix                go to state 30


State 91

   46 data_struct_stmts: data_struct_stmts • declaration_stmt SEMI
   47                  | data_struct_stmts • func_declaration SEMI
   61 typeDef_declaration: TYPEDEF STRUCT LEFT_BRACE data_struct_stmts • RIGHT_BRACE ID

    STRUCT       shift, and go to state 86
    TYPEDEF      shift, and go to state 2
    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    ENUM         shift, and go to state 5
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNION        shift, and go to state 87
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    RIGHT_BRACE  shift, and go to state 151
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    declaration_stmt      go to state 149
    array_declaration     go to state 18
    func_declaration      go to state 150
    variable_declaration  go to state 20
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    prefixes              go to state 29
    prefix                go to state 30


State 92

   52 enum_parameters: ID •

    $default  reduce using rule 52 (enum_parameters)


State 93

   51 enum_parameters: enum_parameters • COMMA ID
   57 typeDef_declaration: TYPEDEF ENUM LEFT_BRACE enum_parameters • RIGHT_BRACE ID

    RIGHT_BRACE  shift, and go to state 152
    COMMA        shift, and go to state 153


State 94

   46 data_struct_stmts: data_struct_stmts • declaration_stmt SEMI
   47                  | data_struct_stmts • func_declaration SEMI
   59 typeDef_declaration: TYPEDEF UNION LEFT_BRACE data_struct_stmts • RIGHT_BRACE ID

    STRUCT       shift, and go to state 86
    TYPEDEF      shift, and go to state 2
    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    ENUM         shift, and go to state 5
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNION        shift, and go to state 87
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    RIGHT_BRACE  shift, and go to state 154
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    declaration_stmt      go to state 149
    array_declaration     go to state 18
    func_declaration      go to state 150
    variable_declaration  go to state 20
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    prefixes              go to state 29
    prefix                go to state 30


State 95

   51 enum_parameters: enum_parameters • COMMA ID
   55 enum_declaration: ENUM ID LEFT_BRACE enum_parameters • RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 155
    COMMA        shift, and go to state 153


State 96

   46 data_struct_stmts: data_struct_stmts • declaration_stmt SEMI
   47                  | data_struct_stmts • func_declaration SEMI
   54 union_declaration: UNION ID LEFT_BRACE data_struct_stmts • RIGHT_BRACE

    STRUCT       shift, and go to state 86
    TYPEDEF      shift, and go to state 2
    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    ENUM         shift, and go to state 5
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNION        shift, and go to state 87
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    RIGHT_BRACE  shift, and go to state 156
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    declaration_stmt      go to state 149
    array_declaration     go to state 18
    func_declaration      go to state 150
    variable_declaration  go to state 20
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    prefixes              go to state 29
    prefix                go to state 30


State 97

   72 expr: expr • op term
   73     | expr • cond_op term
   74     | expr • bitwise_op term
   75     | expr • logical_op term
   84 factor: LPAREN expr • RPAREN

    PLUS                   shift, and go to state 103
    MINUS                  shift, and go to state 104
    RPAREN                 shift, and go to state 157
    BITWISE_AND            shift, and go to state 105
    BITWISE_OR             shift, and go to state 106
    BITWISE_NOT            shift, and go to state 107
    BITWISE_XOR            shift, and go to state 108
    LOGICAL_AND            shift, and go to state 109
    LOGICAL_OR             shift, and go to state 110
    EQUAL                  shift, and go to state 111
    NOT_EQUAL              shift, and go to state 112
    LESS_THAN              shift, and go to state 113
    GREATER_THAN           shift, and go to state 114
    LESS_THAN_OR_EQUAL     shift, and go to state 115
    GREATER_THAN_OR_EQUAL  shift, and go to state 116
    RIGHT_SHIFT            shift, and go to state 117
    LEFT_SHIFT             shift, and go to state 118

    op          go to state 119
    cond_op     go to state 120
    logical_op  go to state 121
    bitwise_op  go to state 122


State 98

  171 type_cast: LPAREN type • RPAREN

    RPAREN  shift, and go to state 158


State 99

   84 factor: LPAREN • expr RPAREN

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 97
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 100

   82 operand: LOGICAL_NOT factor •

    $default  reduce using rule 82 (operand)


State 101

   68 func_inst: ID LPAREN func_inst_parameters RPAREN •

    $default  reduce using rule 68 (func_inst)


State 102

   70 func_inst_parameters: func_inst_parameters COMMA • expr

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 159
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 103

   89 op: PLUS •

    $default  reduce using rule 89 (op)


State 104

   90 op: MINUS •

    $default  reduce using rule 90 (op)


State 105

  106 bitwise_op: BITWISE_AND •

    $default  reduce using rule 106 (bitwise_op)


State 106

  108 bitwise_op: BITWISE_OR •

    $default  reduce using rule 108 (bitwise_op)


State 107

  107 bitwise_op: BITWISE_NOT •

    $default  reduce using rule 107 (bitwise_op)


State 108

  109 bitwise_op: BITWISE_XOR •

    $default  reduce using rule 109 (bitwise_op)


State 109

  104 logical_op: LOGICAL_AND •

    $default  reduce using rule 104 (logical_op)


State 110

  105 logical_op: LOGICAL_OR •

    $default  reduce using rule 105 (logical_op)


State 111

  102 cond_op: EQUAL •

    $default  reduce using rule 102 (cond_op)


State 112

  103 cond_op: NOT_EQUAL •

    $default  reduce using rule 103 (cond_op)


State 113

  101 cond_op: LESS_THAN •

    $default  reduce using rule 101 (cond_op)


State 114

   98 cond_op: GREATER_THAN •

    $default  reduce using rule 98 (cond_op)


State 115

   99 cond_op: LESS_THAN_OR_EQUAL •

    $default  reduce using rule 99 (cond_op)


State 116

  100 cond_op: GREATER_THAN_OR_EQUAL •

    $default  reduce using rule 100 (cond_op)


State 117

   91 op: RIGHT_SHIFT •

    $default  reduce using rule 91 (op)


State 118

   92 op: LEFT_SHIFT •

    $default  reduce using rule 92 (op)


State 119

   72 expr: expr op • term

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    term       go to state 160
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 120

   73 expr: expr cond_op • term

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    term       go to state 161
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 121

   75 expr: expr logical_op • term

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    term       go to state 162
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 122

   74 expr: expr bitwise_op • term

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    term       go to state 163
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 123

   93 prio_op: TIMES •

    $default  reduce using rule 93 (prio_op)


State 124

   94 prio_op: OVER •

    $default  reduce using rule 94 (prio_op)


State 125

   95 prio_op: PERCENT •

    $default  reduce using rule 95 (prio_op)


State 126

   77 term: term prio_op • operand

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    operand    go to state 164
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 127

   80 operand: factor unary_op •

    $default  reduce using rule 80 (operand)


State 128

   79 operand: unary_op factor •

    $default  reduce using rule 79 (operand)


State 129

   81 operand: type_cast factor •

    $default  reduce using rule 81 (operand)


State 130

  110 assign_op: ASSIGN •

    $default  reduce using rule 110 (assign_op)


State 131

   33 func_declaration: prefixes type ID LPAREN • func_parameters_declaration RPAREN compound_stmt
   34                 | prefixes type ID LPAREN • func_parameters_declaration RPAREN SEMI

    VOID      shift, and go to state 165
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    VOID      [reduce using rule 159 (prefixes)]
    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    RPAREN    reduce using rule 35 (func_parameters_declaration)
    COMMA     reduce using rule 35 (func_parameters_declaration)
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    func_parameters_declaration  go to state 166
    variable_declaration         go to state 167
    prefixes                     go to state 168
    prefix                       go to state 30


State 132

   32 array_declaration: prefixes type ID LEFT_BRACKET • expr RIGHT_BRACKET

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 169
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 133

  111 assign_op: PLUS_ASSIGN •

    $default  reduce using rule 111 (assign_op)


State 134

  112 assign_op: MINUS_ASSIGN •

    $default  reduce using rule 112 (assign_op)


State 135

  114 assign_op: LEFT_SHIFT_ASSIGN •

    $default  reduce using rule 114 (assign_op)


State 136

  115 assign_op: RIGHT_SHIFT_ASSIGN •

    $default  reduce using rule 115 (assign_op)


State 137

  116 assign_op: BITWISE_AND_ASSIGN •

    $default  reduce using rule 116 (assign_op)


State 138

  117 assign_op: BITWISE_OR_ASSIGN •

    $default  reduce using rule 117 (assign_op)


State 139

  118 assign_op: BITWISE_XOR_ASSIGN •

    $default  reduce using rule 118 (assign_op)


State 140

  119 assign_op: MULTIPLY_ASSIGN •

    $default  reduce using rule 119 (assign_op)


State 141

  120 assign_op: DIVIDE_ASSIGN •

    $default  reduce using rule 120 (assign_op)


State 142

  113 assign_op: MODULUS_ASSIGN •

    $default  reduce using rule 113 (assign_op)


State 143

   40 variable_declaration: prefixes type ID assign_op • expr

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 170
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 144

   41 variable_declaration: prefixes type TIMES ID •
   42                     | prefixes type TIMES ID • assign_op expr

    ASSIGN              shift, and go to state 130
    PLUS_ASSIGN         shift, and go to state 133
    MINUS_ASSIGN        shift, and go to state 134
    LEFT_SHIFT_ASSIGN   shift, and go to state 135
    RIGHT_SHIFT_ASSIGN  shift, and go to state 136
    BITWISE_AND_ASSIGN  shift, and go to state 137
    BITWISE_OR_ASSIGN   shift, and go to state 138
    BITWISE_XOR_ASSIGN  shift, and go to state 139
    MULTIPLY_ASSIGN     shift, and go to state 140
    DIVIDE_ASSIGN       shift, and go to state 141
    MODULUS_ASSIGN      shift, and go to state 142

    $default  reduce using rule 41 (variable_declaration)

    assign_op  go to state 171


State 145

   43 variable_declaration: prefixes type TIMES TIMES • ID
   44                     | prefixes type TIMES TIMES • ID assign_op expr

    ID  shift, and go to state 172


State 146

   48 data_struct_stmts: declaration_stmt SEMI •

    $default  reduce using rule 48 (data_struct_stmts)


State 147

   49 data_struct_stmts: func_declaration SEMI •

    $default  reduce using rule 49 (data_struct_stmts)


State 148

   53 struct_declaration: STRUCT ID LEFT_BRACE data_struct_stmts RIGHT_BRACE •

    $default  reduce using rule 53 (struct_declaration)


State 149

   46 data_struct_stmts: data_struct_stmts declaration_stmt • SEMI

    SEMI  shift, and go to state 173


State 150

   47 data_struct_stmts: data_struct_stmts func_declaration • SEMI

    SEMI  shift, and go to state 174


State 151

   61 typeDef_declaration: TYPEDEF STRUCT LEFT_BRACE data_struct_stmts RIGHT_BRACE • ID

    ID  shift, and go to state 175


State 152

   57 typeDef_declaration: TYPEDEF ENUM LEFT_BRACE enum_parameters RIGHT_BRACE • ID

    ID  shift, and go to state 176


State 153

   51 enum_parameters: enum_parameters COMMA • ID

    ID  shift, and go to state 177


State 154

   59 typeDef_declaration: TYPEDEF UNION LEFT_BRACE data_struct_stmts RIGHT_BRACE • ID

    ID  shift, and go to state 178


State 155

   55 enum_declaration: ENUM ID LEFT_BRACE enum_parameters RIGHT_BRACE •

    $default  reduce using rule 55 (enum_declaration)


State 156

   54 union_declaration: UNION ID LEFT_BRACE data_struct_stmts RIGHT_BRACE •

    $default  reduce using rule 54 (union_declaration)


State 157

   84 factor: LPAREN expr RPAREN •

    $default  reduce using rule 84 (factor)


State 158

  171 type_cast: LPAREN type RPAREN •

    $default  reduce using rule 171 (type_cast)


State 159

   70 func_inst_parameters: func_inst_parameters COMMA expr •
   72 expr: expr • op term
   73     | expr • cond_op term
   74     | expr • bitwise_op term
   75     | expr • logical_op term

    PLUS                   shift, and go to state 103
    MINUS                  shift, and go to state 104
    BITWISE_AND            shift, and go to state 105
    BITWISE_OR             shift, and go to state 106
    BITWISE_NOT            shift, and go to state 107
    BITWISE_XOR            shift, and go to state 108
    LOGICAL_AND            shift, and go to state 109
    LOGICAL_OR             shift, and go to state 110
    EQUAL                  shift, and go to state 111
    NOT_EQUAL              shift, and go to state 112
    LESS_THAN              shift, and go to state 113
    GREATER_THAN           shift, and go to state 114
    LESS_THAN_OR_EQUAL     shift, and go to state 115
    GREATER_THAN_OR_EQUAL  shift, and go to state 116
    RIGHT_SHIFT            shift, and go to state 117
    LEFT_SHIFT             shift, and go to state 118

    $default  reduce using rule 70 (func_inst_parameters)

    op          go to state 119
    cond_op     go to state 120
    logical_op  go to state 121
    bitwise_op  go to state 122


State 160

   72 expr: expr op term •
   77 term: term • prio_op operand

    TIMES    shift, and go to state 123
    OVER     shift, and go to state 124
    PERCENT  shift, and go to state 125

    $default  reduce using rule 72 (expr)

    prio_op  go to state 126


State 161

   73 expr: expr cond_op term •
   77 term: term • prio_op operand

    TIMES    shift, and go to state 123
    OVER     shift, and go to state 124
    PERCENT  shift, and go to state 125

    $default  reduce using rule 73 (expr)

    prio_op  go to state 126


State 162

   75 expr: expr logical_op term •
   77 term: term • prio_op operand

    TIMES    shift, and go to state 123
    OVER     shift, and go to state 124
    PERCENT  shift, and go to state 125

    $default  reduce using rule 75 (expr)

    prio_op  go to state 126


State 163

   74 expr: expr bitwise_op term •
   77 term: term • prio_op operand

    TIMES    shift, and go to state 123
    OVER     shift, and go to state 124
    PERCENT  shift, and go to state 125

    $default  reduce using rule 74 (expr)

    prio_op  go to state 126


State 164

   77 term: term prio_op operand •

    $default  reduce using rule 77 (term)


State 165

   38 func_parameters_declaration: VOID •

    $default  reduce using rule 38 (func_parameters_declaration)


State 166

   33 func_declaration: prefixes type ID LPAREN func_parameters_declaration • RPAREN compound_stmt
   34                 | prefixes type ID LPAREN func_parameters_declaration • RPAREN SEMI
   36 func_parameters_declaration: func_parameters_declaration • COMMA variable_declaration

    RPAREN  shift, and go to state 179
    COMMA   shift, and go to state 180


State 167

   37 func_parameters_declaration: variable_declaration •

    $default  reduce using rule 37 (func_parameters_declaration)


State 168

   39 variable_declaration: prefixes • type ID
   40                     | prefixes • type ID assign_op expr
   41                     | prefixes • type TIMES ID
   42                     | prefixes • type TIMES ID assign_op expr
   43                     | prefixes • type TIMES TIMES ID
   44                     | prefixes • type TIMES TIMES ID assign_op expr
  160 prefixes: prefixes • prefix

    INT       shift, and go to state 32
    FLOAT     shift, and go to state 33
    DOUBLE    shift, and go to state 34
    CHAR      shift, and go to state 35
    VOID      shift, and go to state 36
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    type    go to state 181
    prefix  go to state 54


State 169

   32 array_declaration: prefixes type ID LEFT_BRACKET expr • RIGHT_BRACKET
   72 expr: expr • op term
   73     | expr • cond_op term
   74     | expr • bitwise_op term
   75     | expr • logical_op term

    PLUS                   shift, and go to state 103
    MINUS                  shift, and go to state 104
    RIGHT_BRACKET          shift, and go to state 182
    BITWISE_AND            shift, and go to state 105
    BITWISE_OR             shift, and go to state 106
    BITWISE_NOT            shift, and go to state 107
    BITWISE_XOR            shift, and go to state 108
    LOGICAL_AND            shift, and go to state 109
    LOGICAL_OR             shift, and go to state 110
    EQUAL                  shift, and go to state 111
    NOT_EQUAL              shift, and go to state 112
    LESS_THAN              shift, and go to state 113
    GREATER_THAN           shift, and go to state 114
    LESS_THAN_OR_EQUAL     shift, and go to state 115
    GREATER_THAN_OR_EQUAL  shift, and go to state 116
    RIGHT_SHIFT            shift, and go to state 117
    LEFT_SHIFT             shift, and go to state 118

    op          go to state 119
    cond_op     go to state 120
    logical_op  go to state 121
    bitwise_op  go to state 122


State 170

   40 variable_declaration: prefixes type ID assign_op expr •
   72 expr: expr • op term
   73     | expr • cond_op term
   74     | expr • bitwise_op term
   75     | expr • logical_op term

    PLUS                   shift, and go to state 103
    MINUS                  shift, and go to state 104
    BITWISE_AND            shift, and go to state 105
    BITWISE_OR             shift, and go to state 106
    BITWISE_NOT            shift, and go to state 107
    BITWISE_XOR            shift, and go to state 108
    LOGICAL_AND            shift, and go to state 109
    LOGICAL_OR             shift, and go to state 110
    EQUAL                  shift, and go to state 111
    NOT_EQUAL              shift, and go to state 112
    LESS_THAN              shift, and go to state 113
    GREATER_THAN           shift, and go to state 114
    LESS_THAN_OR_EQUAL     shift, and go to state 115
    GREATER_THAN_OR_EQUAL  shift, and go to state 116
    RIGHT_SHIFT            shift, and go to state 117
    LEFT_SHIFT             shift, and go to state 118

    $default  reduce using rule 40 (variable_declaration)

    op          go to state 119
    cond_op     go to state 120
    logical_op  go to state 121
    bitwise_op  go to state 122


State 171

   42 variable_declaration: prefixes type TIMES ID assign_op • expr

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 183
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 172

   43 variable_declaration: prefixes type TIMES TIMES ID •
   44                     | prefixes type TIMES TIMES ID • assign_op expr

    ASSIGN              shift, and go to state 130
    PLUS_ASSIGN         shift, and go to state 133
    MINUS_ASSIGN        shift, and go to state 134
    LEFT_SHIFT_ASSIGN   shift, and go to state 135
    RIGHT_SHIFT_ASSIGN  shift, and go to state 136
    BITWISE_AND_ASSIGN  shift, and go to state 137
    BITWISE_OR_ASSIGN   shift, and go to state 138
    BITWISE_XOR_ASSIGN  shift, and go to state 139
    MULTIPLY_ASSIGN     shift, and go to state 140
    DIVIDE_ASSIGN       shift, and go to state 141
    MODULUS_ASSIGN      shift, and go to state 142

    $default  reduce using rule 43 (variable_declaration)

    assign_op  go to state 184


State 173

   46 data_struct_stmts: data_struct_stmts declaration_stmt SEMI •

    $default  reduce using rule 46 (data_struct_stmts)


State 174

   47 data_struct_stmts: data_struct_stmts func_declaration SEMI •

    $default  reduce using rule 47 (data_struct_stmts)


State 175

   61 typeDef_declaration: TYPEDEF STRUCT LEFT_BRACE data_struct_stmts RIGHT_BRACE ID •

    $default  reduce using rule 61 (typeDef_declaration)


State 176

   57 typeDef_declaration: TYPEDEF ENUM LEFT_BRACE enum_parameters RIGHT_BRACE ID •

    $default  reduce using rule 57 (typeDef_declaration)


State 177

   51 enum_parameters: enum_parameters COMMA ID •

    $default  reduce using rule 51 (enum_parameters)


State 178

   59 typeDef_declaration: TYPEDEF UNION LEFT_BRACE data_struct_stmts RIGHT_BRACE ID •

    $default  reduce using rule 59 (typeDef_declaration)


State 179

   33 func_declaration: prefixes type ID LPAREN func_parameters_declaration RPAREN • compound_stmt
   34                 | prefixes type ID LPAREN func_parameters_declaration RPAREN • SEMI

    LEFT_BRACE  shift, and go to state 185
    SEMI        shift, and go to state 186

    compound_stmt  go to state 187


State 180

   36 func_parameters_declaration: func_parameters_declaration COMMA • variable_declaration

    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    variable_declaration  go to state 188
    prefixes              go to state 168
    prefix                go to state 30


State 181

   39 variable_declaration: prefixes type • ID
   40                     | prefixes type • ID assign_op expr
   41                     | prefixes type • TIMES ID
   42                     | prefixes type • TIMES ID assign_op expr
   43                     | prefixes type • TIMES TIMES ID
   44                     | prefixes type • TIMES TIMES ID assign_op expr

    ID     shift, and go to state 189
    TIMES  shift, and go to state 85


State 182

   32 array_declaration: prefixes type ID LEFT_BRACKET expr RIGHT_BRACKET •

    $default  reduce using rule 32 (array_declaration)


State 183

   42 variable_declaration: prefixes type TIMES ID assign_op expr •
   72 expr: expr • op term
   73     | expr • cond_op term
   74     | expr • bitwise_op term
   75     | expr • logical_op term

    PLUS                   shift, and go to state 103
    MINUS                  shift, and go to state 104
    BITWISE_AND            shift, and go to state 105
    BITWISE_OR             shift, and go to state 106
    BITWISE_NOT            shift, and go to state 107
    BITWISE_XOR            shift, and go to state 108
    LOGICAL_AND            shift, and go to state 109
    LOGICAL_OR             shift, and go to state 110
    EQUAL                  shift, and go to state 111
    NOT_EQUAL              shift, and go to state 112
    LESS_THAN              shift, and go to state 113
    GREATER_THAN           shift, and go to state 114
    LESS_THAN_OR_EQUAL     shift, and go to state 115
    GREATER_THAN_OR_EQUAL  shift, and go to state 116
    RIGHT_SHIFT            shift, and go to state 117
    LEFT_SHIFT             shift, and go to state 118

    $default  reduce using rule 42 (variable_declaration)

    op          go to state 119
    cond_op     go to state 120
    logical_op  go to state 121
    bitwise_op  go to state 122


State 184

   44 variable_declaration: prefixes type TIMES TIMES ID assign_op • expr

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 190
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 185

  121 compound_stmt: LEFT_BRACE • stmts RIGHT_BRACE
  122              | LEFT_BRACE • RIGHT_BRACE

    IF           shift, and go to state 191
    DO           shift, and go to state 192
    WHILE        shift, and go to state 193
    FOR          shift, and go to state 194
    RETURN       shift, and go to state 195
    BREAK        shift, and go to state 196
    STRUCT       shift, and go to state 1
    TYPEDEF      shift, and go to state 2
    CONTINUE     shift, and go to state 197
    EXTERN       shift, and go to state 3
    GOTO         shift, and go to state 198
    LONG         shift, and go to state 4
    ENUM         shift, and go to state 5
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNION        shift, and go to state 10
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    ID           shift, and go to state 199
    RIGHT_BRACE  shift, and go to state 200
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    stmts                 go to state 201
    stmt                  go to state 202
    declaration_stmt      go to state 203
    assignment_stmt       go to state 204
    array_declaration     go to state 205
    variable_declaration  go to state 206
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 207
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 208
    if_stmt               go to state 209
    do_while_stmt         go to state 210
    while_stmt            go to state 211
    for_stmt              go to state 212
    label                 go to state 213
    goto_stmt             go to state 214
    return_stmt           go to state 215
    prefixes              go to state 216
    prefix                go to state 30


State 186

   34 func_declaration: prefixes type ID LPAREN func_parameters_declaration RPAREN SEMI •

    $default  reduce using rule 34 (func_declaration)


State 187

   33 func_declaration: prefixes type ID LPAREN func_parameters_declaration RPAREN compound_stmt •

    $default  reduce using rule 33 (func_declaration)


State 188

   36 func_parameters_declaration: func_parameters_declaration COMMA variable_declaration •

    $default  reduce using rule 36 (func_parameters_declaration)


State 189

   39 variable_declaration: prefixes type ID •
   40                     | prefixes type ID • assign_op expr

    ASSIGN              shift, and go to state 130
    PLUS_ASSIGN         shift, and go to state 133
    MINUS_ASSIGN        shift, and go to state 134
    LEFT_SHIFT_ASSIGN   shift, and go to state 135
    RIGHT_SHIFT_ASSIGN  shift, and go to state 136
    BITWISE_AND_ASSIGN  shift, and go to state 137
    BITWISE_OR_ASSIGN   shift, and go to state 138
    BITWISE_XOR_ASSIGN  shift, and go to state 139
    MULTIPLY_ASSIGN     shift, and go to state 140
    DIVIDE_ASSIGN       shift, and go to state 141
    MODULUS_ASSIGN      shift, and go to state 142

    $default  reduce using rule 39 (variable_declaration)

    assign_op  go to state 143


State 190

   44 variable_declaration: prefixes type TIMES TIMES ID assign_op expr •
   72 expr: expr • op term
   73     | expr • cond_op term
   74     | expr • bitwise_op term
   75     | expr • logical_op term

    PLUS                   shift, and go to state 103
    MINUS                  shift, and go to state 104
    BITWISE_AND            shift, and go to state 105
    BITWISE_OR             shift, and go to state 106
    BITWISE_NOT            shift, and go to state 107
    BITWISE_XOR            shift, and go to state 108
    LOGICAL_AND            shift, and go to state 109
    LOGICAL_OR             shift, and go to state 110
    EQUAL                  shift, and go to state 111
    NOT_EQUAL              shift, and go to state 112
    LESS_THAN              shift, and go to state 113
    GREATER_THAN           shift, and go to state 114
    LESS_THAN_OR_EQUAL     shift, and go to state 115
    GREATER_THAN_OR_EQUAL  shift, and go to state 116
    RIGHT_SHIFT            shift, and go to state 117
    LEFT_SHIFT             shift, and go to state 118

    $default  reduce using rule 44 (variable_declaration)

    op          go to state 119
    cond_op     go to state 120
    logical_op  go to state 121
    bitwise_op  go to state 122


State 191

  123 if_stmt: IF • LPAREN condition RPAREN compound_stmt
  124        | IF • LPAREN condition RPAREN compound_stmt elseif_stmt
  125        | IF • LPAREN condition RPAREN compound_stmt else_stmt
  126        | IF • LPAREN condition RPAREN stmt
  127        | IF • LPAREN condition RPAREN stmt elseif_stmt
  128        | IF • LPAREN condition RPAREN stmt else_stmt
  129        | IF • LPAREN condition RPAREN SEMI

    LPAREN  shift, and go to state 217


State 192

  138 do_while_stmt: DO • compound_stmt WHILE LPAREN condition RPAREN
  139              | DO • stmt WHILE LPAREN LPAREN condition RPAREN

    IF          shift, and go to state 191
    DO          shift, and go to state 192
    WHILE       shift, and go to state 193
    FOR         shift, and go to state 194
    RETURN      shift, and go to state 195
    BREAK       shift, and go to state 196
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 197
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 198
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 199
    LEFT_BRACE  shift, and go to state 185
    INCREMENT   shift, and go to state 73
    DECREMENT   shift, and go to state 74
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    stmt                  go to state 218
    declaration_stmt      go to state 203
    assignment_stmt       go to state 204
    array_declaration     go to state 205
    variable_declaration  go to state 206
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 207
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 208
    compound_stmt         go to state 219
    if_stmt               go to state 209
    do_while_stmt         go to state 210
    while_stmt            go to state 211
    for_stmt              go to state 212
    label                 go to state 213
    goto_stmt             go to state 214
    return_stmt           go to state 215
    prefixes              go to state 216
    prefix                go to state 30


State 193

  140 while_stmt: WHILE • LPAREN condition RPAREN compound_stmt
  141           | WHILE • LPAREN condition RPAREN stmt
  142           | WHILE • LPAREN condition RPAREN SEMI

    LPAREN  shift, and go to state 220


State 194

  143 for_stmt: FOR • LPAREN condition SEMI condition SEMI condition RPAREN compound_stmt
  144         | FOR • LPAREN condition SEMI condition SEMI condition RPAREN stmt
  145         | FOR • LPAREN variable_declaration SEMI condition SEMI condition RPAREN compound_stmt
  146         | FOR • LPAREN variable_declaration SEMI condition SEMI condition RPAREN stmt

    LPAREN  shift, and go to state 221


State 195

  152 return_stmt: RETURN • expr

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 222
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 196

   20 stmt: BREAK • SEMI

    SEMI  shift, and go to state 223


State 197

   19 stmt: CONTINUE • SEMI

    SEMI  shift, and go to state 224


State 198

  151 goto_stmt: GOTO • ID SEMI

    ID  shift, and go to state 225


State 199

   27 assignment_stmt: ID • assign_op expr
   28                | ID • DOT ID assign_op expr
   30                | ID • unary_op
   68 func_inst: ID • LPAREN func_inst_parameters RPAREN
  150 label: ID • COLON

    ASSIGN              shift, and go to state 130
    LPAREN              shift, and go to state 46
    COLON               shift, and go to state 226
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    PLUS_ASSIGN         shift, and go to state 133
    MINUS_ASSIGN        shift, and go to state 134
    LEFT_SHIFT_ASSIGN   shift, and go to state 135
    RIGHT_SHIFT_ASSIGN  shift, and go to state 136
    BITWISE_AND_ASSIGN  shift, and go to state 137
    BITWISE_OR_ASSIGN   shift, and go to state 138
    BITWISE_XOR_ASSIGN  shift, and go to state 139
    MULTIPLY_ASSIGN     shift, and go to state 140
    DIVIDE_ASSIGN       shift, and go to state 141
    MODULUS_ASSIGN      shift, and go to state 142
    DOT                 shift, and go to state 227

    unary_op   go to state 228
    assign_op  go to state 229


State 200

  122 compound_stmt: LEFT_BRACE RIGHT_BRACE •

    $default  reduce using rule 122 (compound_stmt)


State 201

    7 stmts: stmts • stmt
  121 compound_stmt: LEFT_BRACE stmts • RIGHT_BRACE

    IF           shift, and go to state 191
    DO           shift, and go to state 192
    WHILE        shift, and go to state 193
    FOR          shift, and go to state 194
    RETURN       shift, and go to state 195
    BREAK        shift, and go to state 196
    STRUCT       shift, and go to state 1
    TYPEDEF      shift, and go to state 2
    CONTINUE     shift, and go to state 197
    EXTERN       shift, and go to state 3
    GOTO         shift, and go to state 198
    LONG         shift, and go to state 4
    ENUM         shift, and go to state 5
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNION        shift, and go to state 10
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    ID           shift, and go to state 199
    RIGHT_BRACE  shift, and go to state 230
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    stmt                  go to state 231
    declaration_stmt      go to state 203
    assignment_stmt       go to state 204
    array_declaration     go to state 205
    variable_declaration  go to state 206
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 207
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 208
    if_stmt               go to state 209
    do_while_stmt         go to state 210
    while_stmt            go to state 211
    for_stmt              go to state 212
    label                 go to state 213
    goto_stmt             go to state 214
    return_stmt           go to state 215
    prefixes              go to state 216
    prefix                go to state 30


State 202

    8 stmts: stmt •

    $default  reduce using rule 8 (stmts)


State 203

   16 stmt: declaration_stmt • SEMI

    SEMI  shift, and go to state 232


State 204

   17 stmt: assignment_stmt • SEMI

    SEMI  shift, and go to state 233


State 205

   22 declaration_stmt: array_declaration •
   31 assignment_stmt: array_declaration • assign_op LEFT_BRACE expr RIGHT_BRACE

    ASSIGN              shift, and go to state 130
    PLUS_ASSIGN         shift, and go to state 133
    MINUS_ASSIGN        shift, and go to state 134
    LEFT_SHIFT_ASSIGN   shift, and go to state 135
    RIGHT_SHIFT_ASSIGN  shift, and go to state 136
    BITWISE_AND_ASSIGN  shift, and go to state 137
    BITWISE_OR_ASSIGN   shift, and go to state 138
    BITWISE_XOR_ASSIGN  shift, and go to state 139
    MULTIPLY_ASSIGN     shift, and go to state 140
    DIVIDE_ASSIGN       shift, and go to state 141
    MODULUS_ASSIGN      shift, and go to state 142

    $default  reduce using rule 22 (declaration_stmt)

    assign_op  go to state 234


State 206

   21 declaration_stmt: variable_declaration •
  147 for_stmt: variable_declaration •

    SEMI      reduce using rule 21 (declaration_stmt)
    $default  reduce using rule 147 (for_stmt)


State 207

   18 stmt: instantiation_stmt • SEMI

    SEMI  shift, and go to state 235


State 208

   29 assignment_stmt: unary_op • ID

    ID  shift, and go to state 236


State 209

   11 stmt: if_stmt •

    $default  reduce using rule 11 (stmt)


State 210

   14 stmt: do_while_stmt • SEMI

    SEMI  shift, and go to state 237


State 211

   13 stmt: while_stmt •

    $default  reduce using rule 13 (stmt)


State 212

   12 stmt: for_stmt •

    $default  reduce using rule 12 (stmt)


State 213

   10 stmt: label •

    $default  reduce using rule 10 (stmt)


State 214

    9 stmt: goto_stmt •

    $default  reduce using rule 9 (stmt)


State 215

   15 stmt: return_stmt • SEMI

    SEMI  shift, and go to state 238


State 216

   32 array_declaration: prefixes • type ID LEFT_BRACKET expr RIGHT_BRACKET
   39 variable_declaration: prefixes • type ID
   40                     | prefixes • type ID assign_op expr
   41                     | prefixes • type TIMES ID
   42                     | prefixes • type TIMES ID assign_op expr
   43                     | prefixes • type TIMES TIMES ID
   44                     | prefixes • type TIMES TIMES ID assign_op expr
  160 prefixes: prefixes • prefix

    INT       shift, and go to state 32
    FLOAT     shift, and go to state 33
    DOUBLE    shift, and go to state 34
    CHAR      shift, and go to state 35
    VOID      shift, and go to state 36
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    type    go to state 239
    prefix  go to state 54


State 217

  123 if_stmt: IF LPAREN • condition RPAREN compound_stmt
  124        | IF LPAREN • condition RPAREN compound_stmt elseif_stmt
  125        | IF LPAREN • condition RPAREN compound_stmt else_stmt
  126        | IF LPAREN • condition RPAREN stmt
  127        | IF LPAREN • condition RPAREN stmt elseif_stmt
  128        | IF LPAREN • condition RPAREN stmt else_stmt
  129        | IF LPAREN • condition RPAREN SEMI

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 240
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    assignment_stmt    go to state 241
    array_declaration  go to state 242
    func_inst          go to state 76
    expr               go to state 243
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 244
    condition          go to state 245
    prefixes           go to state 246
    prefix             go to state 30
    type_cast          go to state 83


State 218

  139 do_while_stmt: DO stmt • WHILE LPAREN LPAREN condition RPAREN

    WHILE  shift, and go to state 247


State 219

  138 do_while_stmt: DO compound_stmt • WHILE LPAREN condition RPAREN

    WHILE  shift, and go to state 248


State 220

  140 while_stmt: WHILE LPAREN • condition RPAREN compound_stmt
  141           | WHILE LPAREN • condition RPAREN stmt
  142           | WHILE LPAREN • condition RPAREN SEMI

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 240
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    assignment_stmt    go to state 241
    array_declaration  go to state 242
    func_inst          go to state 76
    expr               go to state 243
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 244
    condition          go to state 249
    prefixes           go to state 246
    prefix             go to state 30
    type_cast          go to state 83


State 221

  143 for_stmt: FOR LPAREN • condition SEMI condition SEMI condition RPAREN compound_stmt
  144         | FOR LPAREN • condition SEMI condition SEMI condition RPAREN stmt
  145         | FOR LPAREN • variable_declaration SEMI condition SEMI condition RPAREN compound_stmt
  146         | FOR LPAREN • variable_declaration SEMI condition SEMI condition RPAREN stmt

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 240
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    assignment_stmt       go to state 241
    array_declaration     go to state 242
    variable_declaration  go to state 250
    func_inst             go to state 76
    expr                  go to state 243
    term                  go to state 79
    operand               go to state 80
    factor                go to state 81
    unary_op              go to state 244
    condition             go to state 251
    prefixes              go to state 216
    prefix                go to state 30
    type_cast             go to state 83


State 222

   72 expr: expr • op term
   73     | expr • cond_op term
   74     | expr • bitwise_op term
   75     | expr • logical_op term
  152 return_stmt: RETURN expr •

    PLUS                   shift, and go to state 103
    MINUS                  shift, and go to state 104
    BITWISE_AND            shift, and go to state 105
    BITWISE_OR             shift, and go to state 106
    BITWISE_NOT            shift, and go to state 107
    BITWISE_XOR            shift, and go to state 108
    LOGICAL_AND            shift, and go to state 109
    LOGICAL_OR             shift, and go to state 110
    EQUAL                  shift, and go to state 111
    NOT_EQUAL              shift, and go to state 112
    LESS_THAN              shift, and go to state 113
    GREATER_THAN           shift, and go to state 114
    LESS_THAN_OR_EQUAL     shift, and go to state 115
    GREATER_THAN_OR_EQUAL  shift, and go to state 116
    RIGHT_SHIFT            shift, and go to state 117
    LEFT_SHIFT             shift, and go to state 118

    $default  reduce using rule 152 (return_stmt)

    op          go to state 119
    cond_op     go to state 120
    logical_op  go to state 121
    bitwise_op  go to state 122


State 223

   20 stmt: BREAK SEMI •

    $default  reduce using rule 20 (stmt)


State 224

   19 stmt: CONTINUE SEMI •

    $default  reduce using rule 19 (stmt)


State 225

  151 goto_stmt: GOTO ID • SEMI

    SEMI  shift, and go to state 252


State 226

  150 label: ID COLON •

    $default  reduce using rule 150 (label)


State 227

   28 assignment_stmt: ID DOT • ID assign_op expr

    ID  shift, and go to state 253


State 228

   30 assignment_stmt: ID unary_op •

    $default  reduce using rule 30 (assignment_stmt)


State 229

   27 assignment_stmt: ID assign_op • expr

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 254
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 230

  121 compound_stmt: LEFT_BRACE stmts RIGHT_BRACE •

    $default  reduce using rule 121 (compound_stmt)


State 231

    7 stmts: stmts stmt •

    $default  reduce using rule 7 (stmts)


State 232

   16 stmt: declaration_stmt SEMI •

    $default  reduce using rule 16 (stmt)


State 233

   17 stmt: assignment_stmt SEMI •

    $default  reduce using rule 17 (stmt)


State 234

   31 assignment_stmt: array_declaration assign_op • LEFT_BRACE expr RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 255


State 235

   18 stmt: instantiation_stmt SEMI •

    $default  reduce using rule 18 (stmt)


State 236

   29 assignment_stmt: unary_op ID •

    $default  reduce using rule 29 (assignment_stmt)


State 237

   14 stmt: do_while_stmt SEMI •

    $default  reduce using rule 14 (stmt)


State 238

   15 stmt: return_stmt SEMI •

    $default  reduce using rule 15 (stmt)


State 239

   32 array_declaration: prefixes type • ID LEFT_BRACKET expr RIGHT_BRACKET
   39 variable_declaration: prefixes type • ID
   40                     | prefixes type • ID assign_op expr
   41                     | prefixes type • TIMES ID
   42                     | prefixes type • TIMES ID assign_op expr
   43                     | prefixes type • TIMES TIMES ID
   44                     | prefixes type • TIMES TIMES ID assign_op expr

    ID     shift, and go to state 256
    TIMES  shift, and go to state 85


State 240

   27 assignment_stmt: ID • assign_op expr
   28                | ID • DOT ID assign_op expr
   30                | ID • unary_op
   68 func_inst: ID • LPAREN func_inst_parameters RPAREN
   86 factor: ID •

    ASSIGN              shift, and go to state 130
    LPAREN              shift, and go to state 46
    INCREMENT           shift, and go to state 73
    DECREMENT           shift, and go to state 74
    PLUS_ASSIGN         shift, and go to state 133
    MINUS_ASSIGN        shift, and go to state 134
    LEFT_SHIFT_ASSIGN   shift, and go to state 135
    RIGHT_SHIFT_ASSIGN  shift, and go to state 136
    BITWISE_AND_ASSIGN  shift, and go to state 137
    BITWISE_OR_ASSIGN   shift, and go to state 138
    BITWISE_XOR_ASSIGN  shift, and go to state 139
    MULTIPLY_ASSIGN     shift, and go to state 140
    DIVIDE_ASSIGN       shift, and go to state 141
    MODULUS_ASSIGN      shift, and go to state 142
    DOT                 shift, and go to state 227

    INCREMENT  [reduce using rule 86 (factor)]
    DECREMENT  [reduce using rule 86 (factor)]
    $default   reduce using rule 86 (factor)

    unary_op   go to state 228
    assign_op  go to state 229


State 241

  149 condition: assignment_stmt •

    $default  reduce using rule 149 (condition)


State 242

   31 assignment_stmt: array_declaration • assign_op LEFT_BRACE expr RIGHT_BRACE

    ASSIGN              shift, and go to state 130
    PLUS_ASSIGN         shift, and go to state 133
    MINUS_ASSIGN        shift, and go to state 134
    LEFT_SHIFT_ASSIGN   shift, and go to state 135
    RIGHT_SHIFT_ASSIGN  shift, and go to state 136
    BITWISE_AND_ASSIGN  shift, and go to state 137
    BITWISE_OR_ASSIGN   shift, and go to state 138
    BITWISE_XOR_ASSIGN  shift, and go to state 139
    MULTIPLY_ASSIGN     shift, and go to state 140
    DIVIDE_ASSIGN       shift, and go to state 141
    MODULUS_ASSIGN      shift, and go to state 142

    assign_op  go to state 234


State 243

   72 expr: expr • op term
   73     | expr • cond_op term
   74     | expr • bitwise_op term
   75     | expr • logical_op term
  148 condition: expr •

    PLUS                   shift, and go to state 103
    MINUS                  shift, and go to state 104
    BITWISE_AND            shift, and go to state 105
    BITWISE_OR             shift, and go to state 106
    BITWISE_NOT            shift, and go to state 107
    BITWISE_XOR            shift, and go to state 108
    LOGICAL_AND            shift, and go to state 109
    LOGICAL_OR             shift, and go to state 110
    EQUAL                  shift, and go to state 111
    NOT_EQUAL              shift, and go to state 112
    LESS_THAN              shift, and go to state 113
    GREATER_THAN           shift, and go to state 114
    LESS_THAN_OR_EQUAL     shift, and go to state 115
    GREATER_THAN_OR_EQUAL  shift, and go to state 116
    RIGHT_SHIFT            shift, and go to state 117
    LEFT_SHIFT             shift, and go to state 118

    $default  reduce using rule 148 (condition)

    op          go to state 119
    cond_op     go to state 120
    logical_op  go to state 121
    bitwise_op  go to state 122


State 244

   29 assignment_stmt: unary_op • ID
   79 operand: unary_op • factor

    NUM     shift, and go to state 69
    ID      shift, and go to state 257
    FNUM    shift, and go to state 71
    LPAREN  shift, and go to state 99

    func_inst  go to state 76
    factor     go to state 128


State 245

  123 if_stmt: IF LPAREN condition • RPAREN compound_stmt
  124        | IF LPAREN condition • RPAREN compound_stmt elseif_stmt
  125        | IF LPAREN condition • RPAREN compound_stmt else_stmt
  126        | IF LPAREN condition • RPAREN stmt
  127        | IF LPAREN condition • RPAREN stmt elseif_stmt
  128        | IF LPAREN condition • RPAREN stmt else_stmt
  129        | IF LPAREN condition • RPAREN SEMI

    RPAREN  shift, and go to state 258


State 246

   32 array_declaration: prefixes • type ID LEFT_BRACKET expr RIGHT_BRACKET
  160 prefixes: prefixes • prefix

    INT       shift, and go to state 32
    FLOAT     shift, and go to state 33
    DOUBLE    shift, and go to state 34
    CHAR      shift, and go to state 35
    VOID      shift, and go to state 36
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    type    go to state 259
    prefix  go to state 54


State 247

  139 do_while_stmt: DO stmt WHILE • LPAREN LPAREN condition RPAREN

    LPAREN  shift, and go to state 260


State 248

  138 do_while_stmt: DO compound_stmt WHILE • LPAREN condition RPAREN

    LPAREN  shift, and go to state 261


State 249

  140 while_stmt: WHILE LPAREN condition • RPAREN compound_stmt
  141           | WHILE LPAREN condition • RPAREN stmt
  142           | WHILE LPAREN condition • RPAREN SEMI

    RPAREN  shift, and go to state 262


State 250

  145 for_stmt: FOR LPAREN variable_declaration • SEMI condition SEMI condition RPAREN compound_stmt
  146         | FOR LPAREN variable_declaration • SEMI condition SEMI condition RPAREN stmt

    SEMI  shift, and go to state 263


State 251

  143 for_stmt: FOR LPAREN condition • SEMI condition SEMI condition RPAREN compound_stmt
  144         | FOR LPAREN condition • SEMI condition SEMI condition RPAREN stmt

    SEMI  shift, and go to state 264


State 252

  151 goto_stmt: GOTO ID SEMI •

    $default  reduce using rule 151 (goto_stmt)


State 253

   28 assignment_stmt: ID DOT ID • assign_op expr

    ASSIGN              shift, and go to state 130
    PLUS_ASSIGN         shift, and go to state 133
    MINUS_ASSIGN        shift, and go to state 134
    LEFT_SHIFT_ASSIGN   shift, and go to state 135
    RIGHT_SHIFT_ASSIGN  shift, and go to state 136
    BITWISE_AND_ASSIGN  shift, and go to state 137
    BITWISE_OR_ASSIGN   shift, and go to state 138
    BITWISE_XOR_ASSIGN  shift, and go to state 139
    MULTIPLY_ASSIGN     shift, and go to state 140
    DIVIDE_ASSIGN       shift, and go to state 141
    MODULUS_ASSIGN      shift, and go to state 142

    assign_op  go to state 265


State 254

   27 assignment_stmt: ID assign_op expr •
   72 expr: expr • op term
   73     | expr • cond_op term
   74     | expr • bitwise_op term
   75     | expr • logical_op term

    PLUS                   shift, and go to state 103
    MINUS                  shift, and go to state 104
    BITWISE_AND            shift, and go to state 105
    BITWISE_OR             shift, and go to state 106
    BITWISE_NOT            shift, and go to state 107
    BITWISE_XOR            shift, and go to state 108
    LOGICAL_AND            shift, and go to state 109
    LOGICAL_OR             shift, and go to state 110
    EQUAL                  shift, and go to state 111
    NOT_EQUAL              shift, and go to state 112
    LESS_THAN              shift, and go to state 113
    GREATER_THAN           shift, and go to state 114
    LESS_THAN_OR_EQUAL     shift, and go to state 115
    GREATER_THAN_OR_EQUAL  shift, and go to state 116
    RIGHT_SHIFT            shift, and go to state 117
    LEFT_SHIFT             shift, and go to state 118

    $default  reduce using rule 27 (assignment_stmt)

    op          go to state 119
    cond_op     go to state 120
    logical_op  go to state 121
    bitwise_op  go to state 122


State 255

   31 assignment_stmt: array_declaration assign_op LEFT_BRACE • expr RIGHT_BRACE

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 266
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 256

   32 array_declaration: prefixes type ID • LEFT_BRACKET expr RIGHT_BRACKET
   39 variable_declaration: prefixes type ID •
   40                     | prefixes type ID • assign_op expr

    ASSIGN              shift, and go to state 130
    LEFT_BRACKET        shift, and go to state 132
    PLUS_ASSIGN         shift, and go to state 133
    MINUS_ASSIGN        shift, and go to state 134
    LEFT_SHIFT_ASSIGN   shift, and go to state 135
    RIGHT_SHIFT_ASSIGN  shift, and go to state 136
    BITWISE_AND_ASSIGN  shift, and go to state 137
    BITWISE_OR_ASSIGN   shift, and go to state 138
    BITWISE_XOR_ASSIGN  shift, and go to state 139
    MULTIPLY_ASSIGN     shift, and go to state 140
    DIVIDE_ASSIGN       shift, and go to state 141
    MODULUS_ASSIGN      shift, and go to state 142

    $default  reduce using rule 39 (variable_declaration)

    assign_op  go to state 143


State 257

   29 assignment_stmt: unary_op ID •
   68 func_inst: ID • LPAREN func_inst_parameters RPAREN
   86 factor: ID •

    LPAREN  shift, and go to state 46

    RPAREN    reduce using rule 29 (assignment_stmt)
    RPAREN    [reduce using rule 86 (factor)]
    SEMI      reduce using rule 29 (assignment_stmt)
    SEMI      [reduce using rule 86 (factor)]
    $default  reduce using rule 86 (factor)


State 258

  123 if_stmt: IF LPAREN condition RPAREN • compound_stmt
  124        | IF LPAREN condition RPAREN • compound_stmt elseif_stmt
  125        | IF LPAREN condition RPAREN • compound_stmt else_stmt
  126        | IF LPAREN condition RPAREN • stmt
  127        | IF LPAREN condition RPAREN • stmt elseif_stmt
  128        | IF LPAREN condition RPAREN • stmt else_stmt
  129        | IF LPAREN condition RPAREN • SEMI

    IF          shift, and go to state 191
    DO          shift, and go to state 192
    WHILE       shift, and go to state 193
    FOR         shift, and go to state 194
    RETURN      shift, and go to state 195
    BREAK       shift, and go to state 196
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 197
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 198
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 199
    LEFT_BRACE  shift, and go to state 185
    SEMI        shift, and go to state 267
    INCREMENT   shift, and go to state 73
    DECREMENT   shift, and go to state 74
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    stmt                  go to state 268
    declaration_stmt      go to state 203
    assignment_stmt       go to state 204
    array_declaration     go to state 205
    variable_declaration  go to state 206
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 207
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 208
    compound_stmt         go to state 269
    if_stmt               go to state 209
    do_while_stmt         go to state 210
    while_stmt            go to state 211
    for_stmt              go to state 212
    label                 go to state 213
    goto_stmt             go to state 214
    return_stmt           go to state 215
    prefixes              go to state 216
    prefix                go to state 30


State 259

   32 array_declaration: prefixes type • ID LEFT_BRACKET expr RIGHT_BRACKET

    ID  shift, and go to state 270


State 260

  139 do_while_stmt: DO stmt WHILE LPAREN • LPAREN condition RPAREN

    LPAREN  shift, and go to state 271


State 261

  138 do_while_stmt: DO compound_stmt WHILE LPAREN • condition RPAREN

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 240
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    assignment_stmt    go to state 241
    array_declaration  go to state 242
    func_inst          go to state 76
    expr               go to state 243
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 244
    condition          go to state 272
    prefixes           go to state 246
    prefix             go to state 30
    type_cast          go to state 83


State 262

  140 while_stmt: WHILE LPAREN condition RPAREN • compound_stmt
  141           | WHILE LPAREN condition RPAREN • stmt
  142           | WHILE LPAREN condition RPAREN • SEMI

    IF          shift, and go to state 191
    DO          shift, and go to state 192
    WHILE       shift, and go to state 193
    FOR         shift, and go to state 194
    RETURN      shift, and go to state 195
    BREAK       shift, and go to state 196
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 197
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 198
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 199
    LEFT_BRACE  shift, and go to state 185
    SEMI        shift, and go to state 273
    INCREMENT   shift, and go to state 73
    DECREMENT   shift, and go to state 74
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    stmt                  go to state 274
    declaration_stmt      go to state 203
    assignment_stmt       go to state 204
    array_declaration     go to state 205
    variable_declaration  go to state 206
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 207
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 208
    compound_stmt         go to state 275
    if_stmt               go to state 209
    do_while_stmt         go to state 210
    while_stmt            go to state 211
    for_stmt              go to state 212
    label                 go to state 213
    goto_stmt             go to state 214
    return_stmt           go to state 215
    prefixes              go to state 216
    prefix                go to state 30


State 263

  145 for_stmt: FOR LPAREN variable_declaration SEMI • condition SEMI condition RPAREN compound_stmt
  146         | FOR LPAREN variable_declaration SEMI • condition SEMI condition RPAREN stmt

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 240
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    assignment_stmt    go to state 241
    array_declaration  go to state 242
    func_inst          go to state 76
    expr               go to state 243
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 244
    condition          go to state 276
    prefixes           go to state 246
    prefix             go to state 30
    type_cast          go to state 83


State 264

  143 for_stmt: FOR LPAREN condition SEMI • condition SEMI condition RPAREN compound_stmt
  144         | FOR LPAREN condition SEMI • condition SEMI condition RPAREN stmt

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 240
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    assignment_stmt    go to state 241
    array_declaration  go to state 242
    func_inst          go to state 76
    expr               go to state 243
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 244
    condition          go to state 277
    prefixes           go to state 246
    prefix             go to state 30
    type_cast          go to state 83


State 265

   28 assignment_stmt: ID DOT ID assign_op • expr

    NUM          shift, and go to state 69
    ID           shift, and go to state 70
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75

    func_inst  go to state 76
    expr       go to state 278
    term       go to state 79
    operand    go to state 80
    factor     go to state 81
    unary_op   go to state 82
    type_cast  go to state 83


State 266

   31 assignment_stmt: array_declaration assign_op LEFT_BRACE expr • RIGHT_BRACE
   72 expr: expr • op term
   73     | expr • cond_op term
   74     | expr • bitwise_op term
   75     | expr • logical_op term

    PLUS                   shift, and go to state 103
    MINUS                  shift, and go to state 104
    RIGHT_BRACE            shift, and go to state 279
    BITWISE_AND            shift, and go to state 105
    BITWISE_OR             shift, and go to state 106
    BITWISE_NOT            shift, and go to state 107
    BITWISE_XOR            shift, and go to state 108
    LOGICAL_AND            shift, and go to state 109
    LOGICAL_OR             shift, and go to state 110
    EQUAL                  shift, and go to state 111
    NOT_EQUAL              shift, and go to state 112
    LESS_THAN              shift, and go to state 113
    GREATER_THAN           shift, and go to state 114
    LESS_THAN_OR_EQUAL     shift, and go to state 115
    GREATER_THAN_OR_EQUAL  shift, and go to state 116
    RIGHT_SHIFT            shift, and go to state 117
    LEFT_SHIFT             shift, and go to state 118

    op          go to state 119
    cond_op     go to state 120
    logical_op  go to state 121
    bitwise_op  go to state 122


State 267

  129 if_stmt: IF LPAREN condition RPAREN SEMI •

    $default  reduce using rule 129 (if_stmt)


State 268

  126 if_stmt: IF LPAREN condition RPAREN stmt •
  127        | IF LPAREN condition RPAREN stmt • elseif_stmt
  128        | IF LPAREN condition RPAREN stmt • else_stmt

    ELSEIF  shift, and go to state 280
    ELSE    shift, and go to state 281

    ELSEIF    [reduce using rule 126 (if_stmt)]
    ELSE      [reduce using rule 126 (if_stmt)]
    $default  reduce using rule 126 (if_stmt)

    elseif_stmt  go to state 282
    else_stmt    go to state 283


State 269

  123 if_stmt: IF LPAREN condition RPAREN compound_stmt •
  124        | IF LPAREN condition RPAREN compound_stmt • elseif_stmt
  125        | IF LPAREN condition RPAREN compound_stmt • else_stmt

    ELSEIF  shift, and go to state 280
    ELSE    shift, and go to state 281

    ELSEIF    [reduce using rule 123 (if_stmt)]
    ELSE      [reduce using rule 123 (if_stmt)]
    $default  reduce using rule 123 (if_stmt)

    elseif_stmt  go to state 284
    else_stmt    go to state 285


State 270

   32 array_declaration: prefixes type ID • LEFT_BRACKET expr RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 132


State 271

  139 do_while_stmt: DO stmt WHILE LPAREN LPAREN • condition RPAREN

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 240
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    assignment_stmt    go to state 241
    array_declaration  go to state 242
    func_inst          go to state 76
    expr               go to state 243
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 244
    condition          go to state 286
    prefixes           go to state 246
    prefix             go to state 30
    type_cast          go to state 83


State 272

  138 do_while_stmt: DO compound_stmt WHILE LPAREN condition • RPAREN

    RPAREN  shift, and go to state 287


State 273

  142 while_stmt: WHILE LPAREN condition RPAREN SEMI •

    $default  reduce using rule 142 (while_stmt)


State 274

  141 while_stmt: WHILE LPAREN condition RPAREN stmt •

    $default  reduce using rule 141 (while_stmt)


State 275

  140 while_stmt: WHILE LPAREN condition RPAREN compound_stmt •

    $default  reduce using rule 140 (while_stmt)


State 276

  145 for_stmt: FOR LPAREN variable_declaration SEMI condition • SEMI condition RPAREN compound_stmt
  146         | FOR LPAREN variable_declaration SEMI condition • SEMI condition RPAREN stmt

    SEMI  shift, and go to state 288


State 277

  143 for_stmt: FOR LPAREN condition SEMI condition • SEMI condition RPAREN compound_stmt
  144         | FOR LPAREN condition SEMI condition • SEMI condition RPAREN stmt

    SEMI  shift, and go to state 289


State 278

   28 assignment_stmt: ID DOT ID assign_op expr •
   72 expr: expr • op term
   73     | expr • cond_op term
   74     | expr • bitwise_op term
   75     | expr • logical_op term

    PLUS                   shift, and go to state 103
    MINUS                  shift, and go to state 104
    BITWISE_AND            shift, and go to state 105
    BITWISE_OR             shift, and go to state 106
    BITWISE_NOT            shift, and go to state 107
    BITWISE_XOR            shift, and go to state 108
    LOGICAL_AND            shift, and go to state 109
    LOGICAL_OR             shift, and go to state 110
    EQUAL                  shift, and go to state 111
    NOT_EQUAL              shift, and go to state 112
    LESS_THAN              shift, and go to state 113
    GREATER_THAN           shift, and go to state 114
    LESS_THAN_OR_EQUAL     shift, and go to state 115
    GREATER_THAN_OR_EQUAL  shift, and go to state 116
    RIGHT_SHIFT            shift, and go to state 117
    LEFT_SHIFT             shift, and go to state 118

    $default  reduce using rule 28 (assignment_stmt)

    op          go to state 119
    cond_op     go to state 120
    logical_op  go to state 121
    bitwise_op  go to state 122


State 279

   31 assignment_stmt: array_declaration assign_op LEFT_BRACE expr RIGHT_BRACE •

    $default  reduce using rule 31 (assignment_stmt)


State 280

  132 elseif_stmt: ELSEIF • LPAREN condition RPAREN stmt
  133            | ELSEIF • LPAREN condition RPAREN stmt else_stmt
  134            | ELSEIF • LPAREN condition RPAREN compound_stmt
  135            | ELSEIF • LPAREN condition RPAREN compound_stmt else_stmt

    LPAREN  shift, and go to state 290


State 281

  136 else_stmt: ELSE • stmt
  137          | ELSE • compound_stmt

    IF          shift, and go to state 191
    DO          shift, and go to state 192
    WHILE       shift, and go to state 193
    FOR         shift, and go to state 194
    RETURN      shift, and go to state 195
    BREAK       shift, and go to state 196
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 197
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 198
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 199
    LEFT_BRACE  shift, and go to state 185
    INCREMENT   shift, and go to state 73
    DECREMENT   shift, and go to state 74
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    stmt                  go to state 291
    declaration_stmt      go to state 203
    assignment_stmt       go to state 204
    array_declaration     go to state 205
    variable_declaration  go to state 206
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 207
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 208
    compound_stmt         go to state 292
    if_stmt               go to state 209
    do_while_stmt         go to state 210
    while_stmt            go to state 211
    for_stmt              go to state 212
    label                 go to state 213
    goto_stmt             go to state 214
    return_stmt           go to state 215
    prefixes              go to state 216
    prefix                go to state 30


State 282

  127 if_stmt: IF LPAREN condition RPAREN stmt elseif_stmt •
  130 elseif_stmt: elseif_stmt • ELSEIF LPAREN condition RPAREN stmt
  131            | elseif_stmt • ELSEIF LPAREN condition RPAREN compound_stmt

    ELSEIF  shift, and go to state 293

    ELSEIF    [reduce using rule 127 (if_stmt)]
    $default  reduce using rule 127 (if_stmt)


State 283

  128 if_stmt: IF LPAREN condition RPAREN stmt else_stmt •

    $default  reduce using rule 128 (if_stmt)


State 284

  124 if_stmt: IF LPAREN condition RPAREN compound_stmt elseif_stmt •
  130 elseif_stmt: elseif_stmt • ELSEIF LPAREN condition RPAREN stmt
  131            | elseif_stmt • ELSEIF LPAREN condition RPAREN compound_stmt

    ELSEIF  shift, and go to state 293

    ELSEIF    [reduce using rule 124 (if_stmt)]
    $default  reduce using rule 124 (if_stmt)


State 285

  125 if_stmt: IF LPAREN condition RPAREN compound_stmt else_stmt •

    $default  reduce using rule 125 (if_stmt)


State 286

  139 do_while_stmt: DO stmt WHILE LPAREN LPAREN condition • RPAREN

    RPAREN  shift, and go to state 294


State 287

  138 do_while_stmt: DO compound_stmt WHILE LPAREN condition RPAREN •

    $default  reduce using rule 138 (do_while_stmt)


State 288

  145 for_stmt: FOR LPAREN variable_declaration SEMI condition SEMI • condition RPAREN compound_stmt
  146         | FOR LPAREN variable_declaration SEMI condition SEMI • condition RPAREN stmt

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 240
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    assignment_stmt    go to state 241
    array_declaration  go to state 242
    func_inst          go to state 76
    expr               go to state 243
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 244
    condition          go to state 295
    prefixes           go to state 246
    prefix             go to state 30
    type_cast          go to state 83


State 289

  143 for_stmt: FOR LPAREN condition SEMI condition SEMI • condition RPAREN compound_stmt
  144         | FOR LPAREN condition SEMI condition SEMI • condition RPAREN stmt

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 240
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    assignment_stmt    go to state 241
    array_declaration  go to state 242
    func_inst          go to state 76
    expr               go to state 243
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 244
    condition          go to state 296
    prefixes           go to state 246
    prefix             go to state 30
    type_cast          go to state 83


State 290

  132 elseif_stmt: ELSEIF LPAREN • condition RPAREN stmt
  133            | ELSEIF LPAREN • condition RPAREN stmt else_stmt
  134            | ELSEIF LPAREN • condition RPAREN compound_stmt
  135            | ELSEIF LPAREN • condition RPAREN compound_stmt else_stmt

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 240
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    assignment_stmt    go to state 241
    array_declaration  go to state 242
    func_inst          go to state 76
    expr               go to state 243
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 244
    condition          go to state 297
    prefixes           go to state 246
    prefix             go to state 30
    type_cast          go to state 83


State 291

  136 else_stmt: ELSE stmt •

    $default  reduce using rule 136 (else_stmt)


State 292

  137 else_stmt: ELSE compound_stmt •

    $default  reduce using rule 137 (else_stmt)


State 293

  130 elseif_stmt: elseif_stmt ELSEIF • LPAREN condition RPAREN stmt
  131            | elseif_stmt ELSEIF • LPAREN condition RPAREN compound_stmt

    LPAREN  shift, and go to state 298


State 294

  139 do_while_stmt: DO stmt WHILE LPAREN LPAREN condition RPAREN •

    $default  reduce using rule 139 (do_while_stmt)


State 295

  145 for_stmt: FOR LPAREN variable_declaration SEMI condition SEMI condition • RPAREN compound_stmt
  146         | FOR LPAREN variable_declaration SEMI condition SEMI condition • RPAREN stmt

    RPAREN  shift, and go to state 299


State 296

  143 for_stmt: FOR LPAREN condition SEMI condition SEMI condition • RPAREN compound_stmt
  144         | FOR LPAREN condition SEMI condition SEMI condition • RPAREN stmt

    RPAREN  shift, and go to state 300


State 297

  132 elseif_stmt: ELSEIF LPAREN condition • RPAREN stmt
  133            | ELSEIF LPAREN condition • RPAREN stmt else_stmt
  134            | ELSEIF LPAREN condition • RPAREN compound_stmt
  135            | ELSEIF LPAREN condition • RPAREN compound_stmt else_stmt

    RPAREN  shift, and go to state 301


State 298

  130 elseif_stmt: elseif_stmt ELSEIF LPAREN • condition RPAREN stmt
  131            | elseif_stmt ELSEIF LPAREN • condition RPAREN compound_stmt

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 69
    ID           shift, and go to state 240
    FNUM         shift, and go to state 71
    LPAREN       shift, and go to state 72
    INCREMENT    shift, and go to state 73
    DECREMENT    shift, and go to state 74
    LOGICAL_NOT  shift, and go to state 75
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    assignment_stmt    go to state 241
    array_declaration  go to state 242
    func_inst          go to state 76
    expr               go to state 243
    term               go to state 79
    operand            go to state 80
    factor             go to state 81
    unary_op           go to state 244
    condition          go to state 302
    prefixes           go to state 246
    prefix             go to state 30
    type_cast          go to state 83


State 299

  145 for_stmt: FOR LPAREN variable_declaration SEMI condition SEMI condition RPAREN • compound_stmt
  146         | FOR LPAREN variable_declaration SEMI condition SEMI condition RPAREN • stmt

    IF          shift, and go to state 191
    DO          shift, and go to state 192
    WHILE       shift, and go to state 193
    FOR         shift, and go to state 194
    RETURN      shift, and go to state 195
    BREAK       shift, and go to state 196
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 197
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 198
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 199
    LEFT_BRACE  shift, and go to state 185
    INCREMENT   shift, and go to state 73
    DECREMENT   shift, and go to state 74
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    stmt                  go to state 303
    declaration_stmt      go to state 203
    assignment_stmt       go to state 204
    array_declaration     go to state 205
    variable_declaration  go to state 206
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 207
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 208
    compound_stmt         go to state 304
    if_stmt               go to state 209
    do_while_stmt         go to state 210
    while_stmt            go to state 211
    for_stmt              go to state 212
    label                 go to state 213
    goto_stmt             go to state 214
    return_stmt           go to state 215
    prefixes              go to state 216
    prefix                go to state 30


State 300

  143 for_stmt: FOR LPAREN condition SEMI condition SEMI condition RPAREN • compound_stmt
  144         | FOR LPAREN condition SEMI condition SEMI condition RPAREN • stmt

    IF          shift, and go to state 191
    DO          shift, and go to state 192
    WHILE       shift, and go to state 193
    FOR         shift, and go to state 194
    RETURN      shift, and go to state 195
    BREAK       shift, and go to state 196
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 197
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 198
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 199
    LEFT_BRACE  shift, and go to state 185
    INCREMENT   shift, and go to state 73
    DECREMENT   shift, and go to state 74
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    stmt                  go to state 305
    declaration_stmt      go to state 203
    assignment_stmt       go to state 204
    array_declaration     go to state 205
    variable_declaration  go to state 206
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 207
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 208
    compound_stmt         go to state 306
    if_stmt               go to state 209
    do_while_stmt         go to state 210
    while_stmt            go to state 211
    for_stmt              go to state 212
    label                 go to state 213
    goto_stmt             go to state 214
    return_stmt           go to state 215
    prefixes              go to state 216
    prefix                go to state 30


State 301

  132 elseif_stmt: ELSEIF LPAREN condition RPAREN • stmt
  133            | ELSEIF LPAREN condition RPAREN • stmt else_stmt
  134            | ELSEIF LPAREN condition RPAREN • compound_stmt
  135            | ELSEIF LPAREN condition RPAREN • compound_stmt else_stmt

    IF          shift, and go to state 191
    DO          shift, and go to state 192
    WHILE       shift, and go to state 193
    FOR         shift, and go to state 194
    RETURN      shift, and go to state 195
    BREAK       shift, and go to state 196
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 197
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 198
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 199
    LEFT_BRACE  shift, and go to state 185
    INCREMENT   shift, and go to state 73
    DECREMENT   shift, and go to state 74
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    stmt                  go to state 307
    declaration_stmt      go to state 203
    assignment_stmt       go to state 204
    array_declaration     go to state 205
    variable_declaration  go to state 206
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 207
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 208
    compound_stmt         go to state 308
    if_stmt               go to state 209
    do_while_stmt         go to state 210
    while_stmt            go to state 211
    for_stmt              go to state 212
    label                 go to state 213
    goto_stmt             go to state 214
    return_stmt           go to state 215
    prefixes              go to state 216
    prefix                go to state 30


State 302

  130 elseif_stmt: elseif_stmt ELSEIF LPAREN condition • RPAREN stmt
  131            | elseif_stmt ELSEIF LPAREN condition • RPAREN compound_stmt

    RPAREN  shift, and go to state 309


State 303

  146 for_stmt: FOR LPAREN variable_declaration SEMI condition SEMI condition RPAREN stmt •

    $default  reduce using rule 146 (for_stmt)


State 304

  145 for_stmt: FOR LPAREN variable_declaration SEMI condition SEMI condition RPAREN compound_stmt •

    $default  reduce using rule 145 (for_stmt)


State 305

  144 for_stmt: FOR LPAREN condition SEMI condition SEMI condition RPAREN stmt •

    $default  reduce using rule 144 (for_stmt)


State 306

  143 for_stmt: FOR LPAREN condition SEMI condition SEMI condition RPAREN compound_stmt •

    $default  reduce using rule 143 (for_stmt)


State 307

  132 elseif_stmt: ELSEIF LPAREN condition RPAREN stmt •
  133            | ELSEIF LPAREN condition RPAREN stmt • else_stmt

    ELSE  shift, and go to state 281

    ELSE      [reduce using rule 132 (elseif_stmt)]
    $default  reduce using rule 132 (elseif_stmt)

    else_stmt  go to state 310


State 308

  134 elseif_stmt: ELSEIF LPAREN condition RPAREN compound_stmt •
  135            | ELSEIF LPAREN condition RPAREN compound_stmt • else_stmt

    ELSE  shift, and go to state 281

    ELSE      [reduce using rule 134 (elseif_stmt)]
    $default  reduce using rule 134 (elseif_stmt)

    else_stmt  go to state 311


State 309

  130 elseif_stmt: elseif_stmt ELSEIF LPAREN condition RPAREN • stmt
  131            | elseif_stmt ELSEIF LPAREN condition RPAREN • compound_stmt

    IF          shift, and go to state 191
    DO          shift, and go to state 192
    WHILE       shift, and go to state 193
    FOR         shift, and go to state 194
    RETURN      shift, and go to state 195
    BREAK       shift, and go to state 196
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 197
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 198
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 199
    LEFT_BRACE  shift, and go to state 185
    INCREMENT   shift, and go to state 73
    DECREMENT   shift, and go to state 74
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 159 (prefixes)]
    LONG      [reduce using rule 159 (prefixes)]
    REGISTER  [reduce using rule 159 (prefixes)]
    SHORT     [reduce using rule 159 (prefixes)]
    STATIC    [reduce using rule 159 (prefixes)]
    SIGNED    [reduce using rule 159 (prefixes)]
    UNSIGNED  [reduce using rule 159 (prefixes)]
    VOLATILE  [reduce using rule 159 (prefixes)]
    CONSTANT  [reduce using rule 159 (prefixes)]
    $default  reduce using rule 159 (prefixes)

    stmt                  go to state 312
    declaration_stmt      go to state 203
    assignment_stmt       go to state 204
    array_declaration     go to state 205
    variable_declaration  go to state 206
    struct_declaration    go to state 21
    union_declaration     go to state 22
    enum_declaration      go to state 23
    typeDef_declaration   go to state 24
    instantiation_stmt    go to state 207
    struct_inst           go to state 26
    union_inst            go to state 27
    func_inst             go to state 28
    unary_op              go to state 208
    compound_stmt         go to state 313
    if_stmt               go to state 209
    do_while_stmt         go to state 210
    while_stmt            go to state 211
    for_stmt              go to state 212
    label                 go to state 213
    goto_stmt             go to state 214
    return_stmt           go to state 215
    prefixes              go to state 216
    prefix                go to state 30


State 310

  133 elseif_stmt: ELSEIF LPAREN condition RPAREN stmt else_stmt •

    $default  reduce using rule 133 (elseif_stmt)


State 311

  135 elseif_stmt: ELSEIF LPAREN condition RPAREN compound_stmt else_stmt •

    $default  reduce using rule 135 (elseif_stmt)


State 312

  130 elseif_stmt: elseif_stmt ELSEIF LPAREN condition RPAREN stmt •

    $default  reduce using rule 130 (elseif_stmt)


State 313

  131 elseif_stmt: elseif_stmt ELSEIF LPAREN condition RPAREN compound_stmt •

    $default  reduce using rule 131 (elseif_stmt)
